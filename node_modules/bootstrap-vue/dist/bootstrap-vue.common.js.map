{"version":3,"file":"bootstrap-vue.common.js","sources":["../lib/utils/observe-dom.js","../lib/directives/_target.js","../lib/directives/scrollspy.js","../lib/components/alert.vue","../lib/components/link.vue","../lib/components/breadcrumb.vue","../lib/components/button.vue","../lib/components/button-group.vue","../lib/mixins/clickout.js","../lib/mixins/dropdown.js","../lib/components/button-group-dropdown.vue","../lib/components/input-group.vue","../lib/components/input-group-addon.vue","../lib/components/input-group-button.vue","../lib/components/card.vue","../lib/components/card-group.vue","../lib/components/carousel.vue","../lib/components/carousel-slide.vue","../lib/components/collapse.vue","../lib/mixins/generate-id.js","../lib/components/dropdown.vue","../lib/components/dropdown-item.vue","../lib/components/dropdown-divider.vue","../lib/components/dropdown-header.vue","../lib/components/dropdown-select.vue","../lib/components/form.vue","../lib/components/form-fieldset.vue","../lib/mixins/form.js","../lib/mixins/form-checkbox.js","../lib/components/form-checkbox.vue","../lib/mixins/form-options.js","../lib/components/form-radio.vue","../lib/components/form-input-static.vue","../lib/components/form-input.vue","../lib/components/form-file.vue","../lib/components/form-select.vue","../lib/components/jumbotron.vue","../lib/components/badge.vue","../lib/components/list-group.vue","../lib/components/list-group-item.vue","../lib/components/media.vue","../lib/components/modal.vue","../lib/components/nav.vue","../lib/components/nav-item.vue","../lib/components/nav-item-dropdown.vue","../lib/components/nav-toggle.vue","../lib/components/navbar.vue","../lib/components/pagination.vue","../lib/components/popover.vue","../lib/components/progress.vue","../lib/components/table.vue","../lib/components/tabs.vue","../lib/components/tab.vue","../lib/components/tooltip.vue","../lib/directives/toggle.js","../lib/directives/modal.js","../lib/index.js"],"sourcesContent":["/**\r\n * Observe a DOM element changes, falls back to eventListener mode\r\n * @param {Element} el The DOM element to observe\r\n * @param {Function} callback callback to be called on change\r\n * @param {object} [opts={childList: true, subtree: true}] observe options\r\n * @see http://stackoverflow.com/questions/3219758\r\n */\r\nexport default function observeDOM(el, callback, opts) {\r\n    const MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\r\n    const eventListenerSupported = window.addEventListener;\r\n\r\n    if (MutationObserver) {\r\n        // Define a new observer\r\n        const obs = new MutationObserver(mutations => {\r\n            if (mutations[0].addedNodes.length > 0 || mutations[0].removedNodes.length > 0) {\r\n                callback();\r\n            }\r\n        });\r\n\r\n        // Have the observer observe foo for changes in children\r\n        obs.observe(el, Object.assign({childList: true, subtree: true}, opts));\r\n    } else if (eventListenerSupported) {\r\n        el.addEventListener('DOMNodeInserted', callback, false);\r\n        el.addEventListener('DOMNodeRemoved', callback, false);\r\n    }\r\n}\r\n","const all_listen_types = {hover: true, click: true, focus: true};\r\n\r\nexport default function targets(el, binding, listen_types, fn) {\r\n    const vm = el.__vue__;\r\n\r\n    if (!vm) {\r\n        console.warn('__vue__ is not available on element', el);\r\n        return;\r\n    }\r\n\r\n    const targets = Object.keys(binding.modifiers || {})\r\n        .filter(t => !all_listen_types[t]);\r\n\r\n    if (binding.value) {\r\n        targets.push(binding.value);\r\n    }\r\n\r\n    const listener = () => {\r\n        fn({targets, vm});\r\n    };\r\n\r\n    Object.keys(all_listen_types).forEach(type => {\r\n        if (listen_types[type] || binding.modifiers[type]) {\r\n            el.addEventListener(type, listener);\r\n        }\r\n    });\r\n}\r\n","/*\r\n * Directive v-b-scrollspy\r\n *\r\n * Usage:\r\n *   Assume body is the scroll element, and use default offset of 10 pixels\r\n *   <ul v-b-scrollspy>\r\n *      <li><a href=\"#bar\">Foo</a></li>\r\n *      <li><a href=\"#baz\">Bar</a></li>\r\n *   </el>\r\n *\r\n *   Assume body is the scroll element, and use offset of 20 pixels\r\n *   <ul v-b-scrollspy=\"20\">\r\n *      <li><a href=\"#bar\">Foo</a></li>\r\n *      <li><a href=\"#baz\">Bar</a></li>\r\n *   </el>\r\n *\r\n *   Element with ID #foo is the scroll element, and use default offset of 10 pixels\r\n *   <ul v-b-scrollspy:foo>\r\n *      <li><a href=\"#bar\">Foo</a></li>\r\n *      <li><a href=\"#baz\">Bar</a></li>\r\n *   </el>\r\n *\r\n *   #foo is the scroll element, and use offset of 20 pixels\r\n *   <ul v-b-scrollspy:foo=\"20\">\r\n *      <li><a href=\"#bar\">Foo</a></li>\r\n *      <li><a href=\"#baz\">Bar</a></li>\r\n *   </el>\r\n *\r\n *   #foo is the scroll element, and use offset of 25 pixels\r\n *   <ul v-b-scrollspy:foo.25>\r\n *      <li><a href=\"#foo\">Foo</a></li>\r\n *      <li><a href=\"#bar\">Bar</a></li>\r\n *   </el>\r\n *\r\n *   #foo is the scroll element, and use default offset of 10 pixels\r\n *   <ul v-b-scrollspy=\"'#foo'\">\r\n *      <li><a href=\"#foo\">Foo</a></li>\r\n *      <li><a href=\"#bar\">Bar</a></li>\r\n *   </el>\r\n *\r\n *   Pass object as config element can be a CSS ID, a CSS selector (i.e. body), or a node reference\r\n *   <ul v-b-scrollspy=\"{element: '#id', offset: 50}\">\r\n *      <li><a href=\"#bar\">Foo</a></li>\r\n *      <li><a href=\"#baz\">Bar</a></li>\r\n *   </el>\r\n *\r\n * If scroll element is not present, then we assume scrolling on 'body'\r\n * If scroll element is a CSS selector, the first found element is chosen\r\n * if scroll element is not found, then ScrollSpy silently does nothing\r\n *\r\n * Config object properties:\r\n *   config = {\r\n *      element: <cssstring|elementref>,\r\n *      offset: <number>,\r\n *      method: <auto|position|offset>,\r\n *      throttle: <number>\r\n *   }\r\n *\r\n *  element:\r\n *    Element to be monitored for swcrolling. defaults to 'body'. can be an ID (#foo), a\r\n *    css Selector (#foo div), or a reference to an element node. If a CSS string, then\r\n *    the first matching element is used. if an ID is sued it must start with '#'\r\n *  offset:\r\n *    offset befor triggering active state, number of pixels. defaults to 10\r\n *  method:\r\n *    method of calculating target offets.\r\n *    'auto' will choose 'offset' if  scroll element is 'body', else 'position'\r\n *    'position' will calculate target offsets relative to the scroll contaner.\r\n *    'offset' will calulate the target offsets relative to the top of the window/viewport\r\n *    Defaults to 'auto'\r\n *  throttle:\r\n *    timeout for resize events to stop firing before recalculating offsets.\r\n *    defaults to 200ms\r\n *\r\n * if args/modifiers and a value (object or number) is passed, the value takes presidence over\r\n * the arg and modifiers\r\n *\r\n * Events:\r\n *  Whenever a target is activted, the event 'scrollspy::activate' is emitted on $root with the\r\n *  targets HREF (ID) as the argument\r\n */\r\n\r\n/*\r\n * Pollyfill for Element.closest() for IE :(\r\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\r\n */\r\nconst inBrowser = typeof window !== 'undefined';\r\n\r\nif (inBrowser && window.Element && !Element.prototype.closest) {\r\n    Element.prototype.closest = function (s) {\r\n        const matches = (this.document || this.ownerDocument).querySelectorAll(s);\r\n        let el = this;\r\n        let i;\r\n        do {\r\n            i = matches.length;\r\n            // eslint-disable-next-line no-empty\r\n            while (--i >= 0 && matches.item(i) !== el) {\r\n            }\r\n        } while ((i < 0) && (el = el.parentElement));\r\n        return el;\r\n    };\r\n}\r\n\r\n/*\r\n * Constants / Defaults\r\n */\r\n\r\nconst NAME = 'v-b-scrollspy';\r\nconst EVENT = 'scrollspy::activate';\r\nconst BVSS = '__BV_ScrollSpy__';\r\n\r\nconst Default = {\r\n    element: 'body',\r\n    offset: 10,\r\n    method: 'auto',\r\n    throttle: 200\r\n};\r\n\r\nconst DefaultType = {\r\n    element: '(string|element)',\r\n    offset: 'number',\r\n    method: 'string',\r\n    throttle: 'number'\r\n};\r\n\r\nconst ClassName = {\r\n    DROPDOWN_ITEM: 'dropdown-item',\r\n    DROPDOWN_MENU: 'dropdown-menu',\r\n    DROPDOWN_TOGGLE: 'dropdown-toggle',\r\n    NAV_LINK: 'nav-link',\r\n    LIST_ITEM: 'list-group-item',\r\n    ACTIVE: 'active'\r\n};\r\n\r\nconst Selector = {\r\n    ACTIVE: '.active',\r\n    NAV_LIST_GROUP: '.nav, .list-group',\r\n    NAV: '.nav',\r\n    LIST_GROUP: '.list-group',\r\n    NAV_LINKS: '.nav-link',\r\n    LIST_ITEMS: '.list-group-item',\r\n    DROPDOWN: '.dropdown',\r\n    DROPDOWN_ITEMS: '.dropdown-item',\r\n    DROPDOWN_TOGGLE: '.dropdown-toggle'\r\n};\r\n\r\nconst OffsetMethod = {\r\n    OFFSET: 'offset',\r\n    POSITION: 'position'\r\n};\r\n\r\nconst isServer = typeof window === 'undefined';\r\n\r\n/*\r\n * Utility Methods\r\n */\r\n\r\nfunction getVm(el) {\r\n    return el ? el.__vue__ : null;\r\n}\r\n\r\nfunction toType(obj) {\r\n    return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\r\n}\r\n\r\nfunction isElement(obj) {\r\n    return obj.nodeType;\r\n}\r\n\r\nfunction typeCheckConfig(componentName, config, configTypes) {\r\n    for (const property in configTypes) {\r\n        if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\r\n            const expectedTypes = configTypes[property];\r\n            const value = config[property];\r\n            const valueType = value && isElement(value) ? 'element' : toType(value);\r\n\r\n            if (!new RegExp(expectedTypes).test(valueType)) {\r\n                console.error(\r\n                    NAME + ': Option \"' + property + '\" provided type \"' +\r\n                    valueType + '\" but expected type \"' + expectedTypes + '\"'\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// Wrapper for Element.closest to emulate jQuery's closest (sorta)\r\nfunction closest(element, selector) {\r\n    const el = element.closest(selector);\r\n    return el === element ? null : el;\r\n}\r\n\r\n/*\r\n * ScrollSpy Class\r\n */\r\n\r\nfunction ScrollSpy(el, binding) {\r\n    // The element that contains the nav-links et al\r\n    this._element = el;\r\n    // The selectors to find the nav-links\r\n    this._selector = [\r\n        Selector.NAV_LINKS,\r\n        Selector.LIST_ITEMS,\r\n        Selector.DROPDOWN_ITEMS\r\n    ].join(',');\r\n    // Start off with default configurtion\r\n    this._config = Object.assign({}, Default);\r\n    // Target HREF IDs and their offsets\r\n    this._offsets = [];\r\n    this._targets = [];\r\n    // The currently active target (as an HREF id\r\n    this._activeTarget = null;\r\n    this._scrollHeight = 0;\r\n    // Reference to the $root VM so we can spew events\r\n    this._$root = null;\r\n    // Reference to our throttled resize hanlder\r\n    this._resizeTimeout = null;\r\n\r\n    // Process bindings/config\r\n    this.updateConfig(binding);\r\n}\r\n\r\n/*\r\n * ScrollSpy Public methods\r\n */\r\n\r\n// Update config\r\nScrollSpy.prototype.updateConfig = function (binding) {\r\n    if (binding.arg) {\r\n        // Element ID specified as arg. We must pre-pend #\r\n        this._config.element = '#' + binding.arg;\r\n    }\r\n    if (binding.modifiers.length > 0) {\r\n        for (let i = 0; i < binding.modifiers.length - 1; i++) {\r\n            if (/^\\d+$/.test(binding.modifiers[i])) {\r\n                // Assume offest value\r\n                this._config.offset = parseInt(binding.modifiers[0], 10);\r\n            } else if (/^(position|offset)$/.test(binding.modifiers[i])) {\r\n                // Assume offset method\r\n                this._config.method = binding.modifiers[i];\r\n            }\r\n        }\r\n    }\r\n    if (typeof binding.value === 'string') {\r\n        // Value is  a CSS ID or selector\r\n        this._config.element = binding.value;\r\n    } else if (typeof binding.value === 'number') {\r\n        // Value is offset\r\n        this._config.offset = Math.round(binding.value);\r\n    } else if (typeof binding.value === 'object') {\r\n        // Value is config object\r\n        this._config = Object.assign({}, this._config, binding.value);\r\n    }\r\n    // Check the config and log error to console. Unknown options are ignored\r\n    typeCheckConfig(NAME, this._config, DefaultType);\r\n\r\n    const vm = getVm(this._element);\r\n    if (vm && vm.$root) {\r\n        this._$root = vm.$root;\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n// Turn on event listener\r\nScrollSpy.prototype.listen = function () {\r\n    const scroller = this._getScroller();\r\n    if (scroller) {\r\n        if (scroller.tagName !== 'BODY') {\r\n            scroller.addEventListener('scroll', this, false);\r\n        }\r\n        window.addEventListener('scroll', this, false);\r\n        window.addEventListener('orientationchange', this, false);\r\n        window.addEventListener('resize', this, false);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n// Turn off event listener\r\nScrollSpy.prototype.unListen = function () {\r\n    const scroller = this._getScroller();\r\n    if (scroller) {\r\n        if (scroller.tagName !== 'BODY') {\r\n            scroller.removeEventListener('scroll', this, false);\r\n        }\r\n        window.removeEventListener('scroll', this, false);\r\n        window.removeEventListener('orientationchange', this, false);\r\n        window.removeEventListener('resize', this, false);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n// Refresh the positions of the target IDs\r\nScrollSpy.prototype.refresh = function () {\r\n    const scroller = this._getScroller();\r\n    if (!scroller) {\r\n        return this;\r\n    }\r\n\r\n    const autoMethod = scroller.tagName === 'BODY' ? OffsetMethod.OFFSET : OffsetMethod.POSITION;\r\n    const offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;\r\n    const offsetBase = offsetMethod === OffsetMethod.OFFSET ? 0 : this._getScrollTop();\r\n\r\n    this._offsets = [];\r\n    this._targets = [];\r\n    this._scrollHeight = this._getScrollHeight();\r\n\r\n    // Find all nav link/dropdown/list-item links in our element\r\n    const navs = Array.prototype.slice.call(this._element.querySelectorAll(this._selector));\r\n\r\n    navs.map(el => {\r\n        const href = el.getAttribute('href');\r\n        if (href && href.charAt(0) === '#' && href !== '#' && href.indexOf('#/') === -1) {\r\n            const target = scroller.querySelector(href);\r\n            if (!target) {\r\n                return null;\r\n            }\r\n            const bcr = target.getBoundingClientRect();\r\n            if (bcr.width || bcr.height) {\r\n                return {\r\n                    offset: (offsetMethod === OffsetMethod.OFFSET ? bcr.top : target.offsetTop) + offsetBase,\r\n                    href\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    }).filter(\r\n        item => item\r\n    ).sort(\r\n        (a, b) => a.offset - b.offset\r\n    ).forEach(item => {\r\n        this._offsets.push(item.offset);\r\n        this._targets.push(item.href);\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Handle the active target selection\r\nScrollSpy.prototype.process = function () {\r\n    if (!this._getScroller) {\r\n        return this;\r\n    }\r\n    const scrollTop = this._getScrollTop() + this._config.offset;\r\n    const scrollHeight = this._getScrollHeight();\r\n    const maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();\r\n\r\n    if (this._scrollHeight !== scrollHeight) {\r\n        this.refresh();\r\n    }\r\n\r\n    if (scrollTop >= maxScroll) {\r\n        const target = this._targets[this._targets.length - 1];\r\n        if (this._activeTarget !== target) {\r\n            this._activate(target);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\r\n        this._activeTarget = null;\r\n        this._clear();\r\n        return this;\r\n    }\r\n\r\n    for (let i = this._offsets.length; i--;) {\r\n        const isActiveTarget =\r\n            this._activeTarget !== this._targets[i] &&\r\n            scrollTop >= this._offsets[i] &&\r\n            (this._offsets[i + 1] === undefined ||\r\n            scrollTop < this._offsets[i + 1]);\r\n\r\n        if (isActiveTarget) {\r\n            this._activate(this._targets[i]);\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n// Dispose  of our stuff\r\nScrollSpy.prototype.dispose = function () {\r\n    // Ensure we are not listening to events\r\n    this.unListen();\r\n\r\n    // Garbage collection\r\n    clearTimeout(this._resizeTimeout);\r\n    this._resizeTimeout = null;\r\n    this._element = null;\r\n    this._config = null;\r\n    this._selector = null;\r\n    this._offsets = null;\r\n    this._targets = null;\r\n    this._activeTarget = null;\r\n    this._scrollHeight = null;\r\n    this._$root = null;\r\n};\r\n\r\n/*\r\n * ScrollSpy event handler\r\n */\r\n\r\nScrollSpy.prototype.handleEvent = function (e) {\r\n    const self = this;\r\n\r\n    function resizeThrottle() {\r\n        clearTimeout(this._resizeTimeout);\r\n        this._resizeTimeout = setTimeout(() => {\r\n            self.refresh().process();\r\n        }, self._config.throttle || Default.throttle);\r\n    }\r\n\r\n    if (e.type === 'scroll') {\r\n        this.process();\r\n    } else if (e.type === 'orientationchange') {\r\n        this.refresh().process();\r\n    } else if (e.type === 'resize') {\r\n        resizeThrottle();\r\n    }\r\n};\r\n\r\n/*\r\n * ScrollSpy private methods\r\n */\r\n\r\n// Get the srolling element\r\nScrollSpy.prototype._getScroller = function () {\r\n    if (isServer) {\r\n        return null;\r\n    }\r\n    const scroller = this._config.element;\r\n    if (!scroller) {\r\n        return null;\r\n    }\r\n    if (scroller && isElement(scroller)) {\r\n        return scroller;\r\n    } else if (typeof scroller === 'string') {\r\n        if (scroller === 'body') {\r\n            return document.body;\r\n        }\r\n        // Otherwise assume CSS selector\r\n        return document.querySelector(scroller);\r\n    }\r\n    return null;\r\n};\r\n\r\nScrollSpy.prototype._getScrollTop = function () {\r\n    const scroller = this._getScroller();\r\n    if (!scroller) {\r\n        return 0;\r\n    }\r\n    return scroller.tagName === 'BODY' ? window.pageYOffset : scroller.scrollTop;\r\n};\r\n\r\nScrollSpy.prototype._getScrollHeight = function () {\r\n    const scroller = this._getScroller();\r\n    if (!scroller) {\r\n        return 0;\r\n    }\r\n    return scroller.tagName === 'BODY' ?\r\n        Math.max(document.body.scrollHeight, document.documentElement.scrollHeight) :\r\n        scroller.scrollHeight;\r\n};\r\n\r\nScrollSpy.prototype._getOffsetHeight = function () {\r\n    const scroller = this._getScroller();\r\n    if (!scroller) {\r\n        return 0;\r\n    }\r\n    return scroller.tagName === 'BODY' ? window.innerHeight : scroller.getBoundingClientRect().height;\r\n};\r\n\r\nScrollSpy.prototype._activate = function (target) {\r\n    this._activeTarget = target;\r\n    this._clear();\r\n\r\n    let queries = this._selector.split(',');\r\n    queries = queries.map(selector => {\r\n        return selector + '[href=\"' + target + '\"]';\r\n    });\r\n\r\n    const links = Array.prototype.slice.call(this._element.querySelectorAll(queries.join(',')));\r\n\r\n    links.forEach(link => {\r\n        if (link.classList.contains(ClassName.DROPDOWN_ITEM)) {\r\n            // This is a dropdown item, so find the .dropdown-toggle and set it's state\r\n            const dropdown = closest(link, Selector.DROPDOWN);\r\n            if (dropdown) {\r\n                const toggle = dropdown.querySelector(Selector.DROPDOWN_TOGGLE);\r\n                if (toggle) {\r\n                    this._setActiveState(toggle, true);\r\n                }\r\n            }\r\n            // Also set this link's state\r\n            this._setActiveState(link, true);\r\n        } else {\r\n            // Set triggered link as active\r\n            this._setActiveState(link, true);\r\n            // Set triggered links parents as active\r\n            // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\r\n            // Handle parent .nav's and .list-group's\r\n            this._setParentsSiblingActiveState(link, Selector.NAV_LIST_GROUP, [ClassName.NAV_LINK, ClassName.LIST_ITEM], true);\r\n        }\r\n    });\r\n\r\n    // Signal event to root, passing ID of target\r\n    if (links && links.length > 0) {\r\n        if (this._$root && this._$root.$emit) {\r\n            this._$root.$emit(EVENT, target);\r\n        }\r\n    }\r\n};\r\n\r\nScrollSpy.prototype._clear = function () {\r\n    const els = Array.prototype.slice.call(document.querySelectorAll(this._selector));\r\n    els.filter(el => {\r\n        if (el.classList.contains(ClassName.ACTIVE)) {\r\n            const href = el.getAttribute('href');\r\n            if (href.charAt(0) !== '#' || href.indexOf('#/') === 0) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }).forEach(el => {\r\n        this._setActiveState(el, false);\r\n    });\r\n};\r\n\r\n// Set the active state. if el has a vue insatnce then try setting the active prop,\r\n// Else fallback to adding the active class\r\nScrollSpy.prototype._setActiveState = function (el, state) {\r\n    if (el) {\r\n        if (el.classList.contains(ClassName.NAV_LINK) && !el.classList.contains(ClassName.DROPDOWN_TOGGLE)) {\r\n            // Special case where VM with 'active' prop is on parent element\r\n            el = el.parentElement;\r\n        }\r\n        const vm = getVm(el);\r\n        if (vm && Object.prototype.hasOwnProperty.call(vm.$props, 'active')) {\r\n            // This is a component that has an `active` prop\r\n            vm.$props.active = state;\r\n        } else {\r\n            // Fallback to setting class attribute since item doesn't have an 'active' prop\r\n            el.classList[state ? 'add' : 'remove'](ClassName.ACTIVE);\r\n        }\r\n    }\r\n};\r\n\r\n// Find all the matching parents given a CSS selector, then find previous sibling that matches the supplied classes\r\n// And then set the active state on each immediate previous sibling of the parent(s)\r\nScrollSpy.prototype._setParentsSiblingActiveState = function (element, selector, classes, state) {\r\n    if (!classes) {\r\n        return;\r\n    }\r\n    if (!Array.isArray(classes)) {\r\n        classes = [classes];\r\n    }\r\n    let el = element;\r\n    while (el) {\r\n        el = closest(el, selector);\r\n        if (el && el.previousElementSibling) {\r\n            for (let i = 0; i < classes.length - 1; i++) {\r\n                if (el.previousElementSibling.classList.contains(classes[i])) {\r\n                    this._setActiveState(el, state);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/*\r\n * Export our directive\r\n */\r\n\r\nexport default {\r\n    bind(el, binding) {\r\n        if (isServer || el[BVSS]) {\r\n            return;\r\n        }\r\n        el[BVSS] = new ScrollSpy(el, binding);\r\n    },\r\n    inserted(el, binding) {\r\n        if (isServer || !el[BVSS]) {\r\n            return;\r\n        }\r\n        el[BVSS].updateConfig(binding).listen().refresh().process();\r\n    },\r\n    update(el, binding) {\r\n        if (isServer || !el[BVSS]) {\r\n            return;\r\n        }\r\n        el[BVSS].updateConfig(binding).refresh().process();\r\n    },\r\n    componentUpdated(el, binding) {\r\n        if (isServer || !el[BVSS]) {\r\n            return;\r\n        }\r\n        el[BVSS].updateConfig(binding).refresh().process();\r\n    },\r\n    unbind(el) {\r\n        if (isServer || !el[BVSS]) {\r\n            return;\r\n        }\r\n        // Remove scroll event listener on scrollElId\r\n        el[BVSS].unListen().dispose();\r\n        el[BVSS] = null;\r\n    }\r\n};\r\n","<template>\r\n    <div v-if=\"localShow\"\r\n         :class=\"classObject\"\r\n         role=\"alert\"\r\n         aria-live=\"polite\"\r\n         aria-atomic=\"true\"\r\n    >\r\n        <button type=\"button\"\r\n                class=\"close\"\r\n                data-dismiss=\"alert\"\r\n                aria-label=\"dismissLabel\"\r\n                v-if=\"dismissible\"\r\n                @click.stop.prevent=\"dismiss\"\r\n        >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                countDownTimerId: null,\r\n                dismissed: false\r\n            };\r\n        },\r\n        created() {\r\n            if (this.state) {\r\n                console.warn('<b-alrt> state property is deprecated, please use variant instead.');\r\n            }\r\n        },\r\n        computed: {\r\n            classObject() {\r\n                return ['alert', this.alertVariant, this.dismissible ? 'alert-dismissible' : ''];\r\n            },\r\n            alertVariant() {\r\n                const variant = this.state || this.variant || 'info';\r\n                return `alert-${variant}`;\r\n            },\r\n            localShow() {\r\n                return !this.dismissed && (this.countDownTimerId || this.show);\r\n            }\r\n        },\r\n        props: {\r\n            variant: {\r\n                type: String,\r\n                default: 'info'\r\n            },\r\n            state: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            dismissible: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            dismissLabel: {\r\n                type: String,\r\n                default: 'Close'\r\n            },\r\n            show: {\r\n                type: [Boolean, Number],\r\n                default: false\r\n            }\r\n        },\r\n        watch: {\r\n            show() {\r\n                this.showChanged();\r\n            }\r\n        },\r\n        mounted() {\r\n            this.showChanged();\r\n        },\r\n        methods: {\r\n            dismiss() {\r\n                this.dismissed = true;\r\n                this.$emit('dismissed');\r\n                this.clearCounter();\r\n            },\r\n            clearCounter() {\r\n                if (this.countDownTimerId) {\r\n                    clearInterval(this.countDownTimerId);\r\n                }\r\n            },\r\n            showChanged() {\r\n                // Reset dismiss status\r\n                this.dismissed = false;\r\n\r\n                // No timer for boolean values\r\n                if (this.show === true || this.show === false || this.show === null || this.show === 0) {\r\n                    return;\r\n                }\r\n\r\n                let dismissCountDown = this.show;\r\n                this.$emit('dismiss-count-down', dismissCountDown);\r\n\r\n                // Start counter\r\n                this.clearCounter();\r\n                this.countDownTimerId = setInterval(() => {\r\n                    if (dismissCountDown < 2) {\r\n                        return this.dismiss();\r\n                    }\r\n                    dismissCountDown--;\r\n                    this.$emit('dismiss-count-down', dismissCountDown);\r\n                }, 1000);\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <!-- When VueRouter is available -->\r\n    <a v-if=\"routerAvailable\"\r\n       is=\"router-link\"\r\n       :active-class=\"activeClass\"\r\n       :exact-active-class=\"exactActiveClass\"\r\n       :disabled=\"disabled\"\r\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\r\n       :to=\"_to\"\r\n       :exact=\"exact\"\r\n       :append=\"append\"\r\n       :replace=\"replace\"\r\n       :event=\"event\"\r\n       :tag=\"tag\"\r\n       @click=\"click\"\r\n    >\r\n        <slot></slot>\r\n    </a>\r\n\r\n    <!-- Fallback mode -->\r\n    <a v-else\r\n       :disabled=\"disabled\"\r\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\r\n       :href=\"_href\"\r\n       @click=\"click\"\r\n    >\r\n        <slot></slot>\r\n    </a>\r\n</template>\r\n\r\n<script>\r\n\r\n    export default {\r\n        computed: {\r\n            routerAvailable() {\r\n                return Boolean(this.$router);\r\n            },\r\n            _href() {\r\n                if (this.disabled) {\r\n                    return '#';\r\n                }\r\n\r\n                // If href explicitly provided\r\n                if (this.href) {\r\n                    return this.href;\r\n                }\r\n\r\n                // Fallback to `to` prop\r\n                if (this.to && typeof this.to === 'string') {\r\n                    return this.to;\r\n                }\r\n            },\r\n            _to() {\r\n                if (!this.routerAvailable || this.disabled) {\r\n                    return '#';\r\n                }\r\n\r\n                if (this.to) {\r\n                    return this.to;\r\n                }\r\n\r\n                if (this.href) {\r\n                    return this.href;\r\n                }\r\n            }\r\n        },\r\n        props: {\r\n            // https://github.com/vuejs/vue-router/blob/dev/src/components/link.js\r\n            to: {\r\n                type: [String, Object],\r\n                default: null\r\n            },\r\n            tag: {\r\n                type: String,\r\n                default: 'a'\r\n            },\r\n            exact: Boolean,\r\n            append: Boolean,\r\n            replace: Boolean,\r\n            activeClass: {\r\n                type: String,\r\n                default: 'active'\r\n            },\r\n            exactActiveClass: {\r\n                type: String,\r\n                default: 'active'\r\n            },\r\n            event: {\r\n                type: [String, Array],\r\n                default: 'click'\r\n            },\r\n            disabled: Boolean,\r\n            href: {\r\n                type: String,\r\n                default: '#'\r\n            }\r\n        },\r\n        methods: {\r\n            click(e) {\r\n                if (this.disabled || this._href === '#') {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    return;\r\n                }\r\n\r\n                this.$emit('click', e);\r\n                this.$root.$emit('clicked::link', this);\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <ol class=\"breadcrumb\" role=\"navigation\">\r\n        <li v-for=\"item in items2\"\r\n            :class=\"['breadcrumb-item', item.__active ? 'active' : null]\"\r\n            @click=\"onclick(item)\"\r\n            role=\"presentation\"\r\n        >\r\n            <span v-if=\"item.active\" v-html=\"item.text\"></span>\r\n            <b-link v-else :to=\"item.to\" :href=\"item.href || item.link\" v-html=\"item.text\"></b-link>\r\n        </li>\r\n        <slot></slot>\r\n    </ol>\r\n</template>\r\n\r\n<script>\r\n    import bLink from './link.vue';\r\n\r\n    export default {\r\n        components: {bLink},\r\n        computed: {\r\n            componentType() {\r\n                return this.to ? 'router-link' : 'a';\r\n            },\r\n            items2() {\r\n                const last = this.items.length > 0 && this.items[this.items.length - 1];\r\n\r\n                return this.items.map(item => {\r\n                    if (typeof item === 'string') {\r\n                        return {text: item, link: '#', active: item === last};\r\n                    }\r\n\r\n                    if (item.active !== true && item.active !== false) {\r\n                        item.__active = item === last;\r\n                    } else {\r\n                        item.__active = item.active;\r\n                    }\r\n\r\n                    return item;\r\n                });\r\n            }\r\n        },\r\n        props: {\r\n            items: {\r\n                type: Array,\r\n                default: () => [],\r\n                required: true\r\n            }\r\n        },\r\n        methods: {\r\n            onclick(item) {\r\n                this.$emit('click', item);\r\n                if (this.$router && this.to) {\r\n                    this.$router.push(this.to);\r\n                }\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <button :class=\"classObject\"\r\n            :is=\"componentType\"\r\n            :to=\"to\"\r\n            :href=\"href\"\r\n            @click=\"onclick\"\r\n            :disabled=\"disabled\"\r\n    >\r\n        <slot></slot>\r\n    </button>\r\n</template>\r\n\r\n<script>\r\n    import bLink from './link.vue';\r\n\r\n    export default {\r\n        components: {bLink},\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'btn',\r\n                    this.btnVariant,\r\n                    this.btnSize,\r\n                    this.btnBlock,\r\n                    this.btnDisabled,\r\n                    this.inactive ? 'btn-inactive' : ''\r\n                ];\r\n            },\r\n            componentType() {\r\n                return (this.href || this.to) ? 'b-link' : 'button';\r\n            },\r\n            btnBlock() {\r\n                return this.block ? `btn-block` : '';\r\n            },\r\n            btnVariant() {\r\n                return this.variant ? `btn-${this.variant}` : `btn-secondary`;\r\n            },\r\n            btnSize() {\r\n                return this.size ? `btn-${this.size}` : '';\r\n            },\r\n            btnDisabled() {\r\n                return this.disabled ? 'disabled' : '';\r\n            }\r\n        },\r\n        props: {\r\n            block: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            inactive: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            variant: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            to: {\r\n                type: [String, Object]\r\n            },\r\n            href: {\r\n                type: String\r\n            }\r\n        },\r\n        methods: {\r\n            onclick(e) {\r\n                if (this.disabled) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                } else {\r\n                    this.$emit('click', e);\r\n                }\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div :class=\"classObject\"\r\n         :role=\"toolbar ? 'toolbar' : 'group'\"\r\n         :tabindex=\"isKeyNav ? '0' : null\"\r\n         @focusin.self=\"focusFirst\"\r\n         @keydown.left=\"focusNext($event,true)\"\r\n         @keydown.up=\"focusNext($event,true)\"\r\n         @keydown.right=\"focusNext($event,false)\"\r\n         @keydown.down=\"focusNext($event,false)\"\r\n         @keydown.shift.left=\"focusFirst($event)\"\r\n         @keydown.shift.up=\"focusFirst($event)\"\r\n         @keydown.shift.right=\"focusLast($event)\"\r\n         @keydown.shift.down=\"focusLast($event)\"\r\n    >\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    const ITEM_SELECTOR = [\r\n        '.btn:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        '.form-control:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'select:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'input[type=\"checkbox\"]:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'input[type=\"radio\"]:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])'\r\n    ].join(',');\r\n\r\n    export default {\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'btn-' + (this.toolbar ? 'toolbar' : 'group'),\r\n                    this.vertical ? 'btn-group-vertical' : '',\r\n                    (this.justify && !this.vertical) ? 'justify-content-between' : '',\r\n                    this.size ? ('btn-group-' + this.size) : ''\r\n                ];\r\n            },\r\n            isKeyNav() {\r\n                return this.toolbar && this.toolbarkeyNav;\r\n            }\r\n        },\r\n        props: {\r\n            vertical: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            toolbar: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            justify: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            toobarKeyNav: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        methods: {\r\n            focusNext(e, prev) {\r\n                if (!this.isKeyNav) {\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                const items = this.getItems();\r\n                if (items.length < 1) {\r\n                    return;\r\n                }\r\n                let index = items.indexOf(e.target);\r\n                if (prev && index > 0) {\r\n                    index--;\r\n                } else if (!prev && index < items.length - 1) {\r\n                    index++;\r\n                }\r\n                if (index < 0) {\r\n                    index = 0;\r\n                }\r\n                items[index].focus();\r\n            },\r\n            focusFirst(e) {\r\n                if (!this.isKeyNav) {\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                const items = this.getItems();\r\n                if (items.length > 0) {\r\n                    items[0].focus();\r\n                }\r\n            },\r\n            focusLast(e) {\r\n                if (!this.isKeyNav) {\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                const items = this.getItems();\r\n                if (items.length > 0) {\r\n                    items[items.length - 1].focus();\r\n                }\r\n            },\r\n            getItems() {\r\n                const items = Array.prototype.slice.call(this.$el.querySelectorAll(ITEM_SELECTOR));\r\n                items.forEach(item => {\r\n                    // Ensure tabfocus is -1 on any new elements\r\n                    item.tabIndex = -1;\r\n                });\r\n                return items;\r\n            }\r\n        },\r\n        mounted() {\r\n            if (this.isKeyNav) {\r\n                // Pre-set the tabindexes if the markup does not include tabindex=\"-1\" on the toolbar items\r\n                this.getItems();\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","export default {\n    mounted() {\n        if (typeof document !== 'undefined') {\n            document.documentElement.addEventListener('click', this._clickOutListener);\n        }\n    },\n    destroyed() {\n        if (typeof document !== 'undefined') {\n            document.removeEventListener('click', this._clickOutListener);\n        }\n    },\n    methods: {\n        _clickOutListener(e) {\n            if (!this.$el.contains(e.target)) {\n                if (this.clickOutListener) {\n                    this.clickOutListener();\n                }\n            }\n        }\n    }\n};\n","const ITEM_SELECTOR = [\r\n    '.dropdown-item:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n    '.dropdown-header:not([style*=\"display: none\"]):not([style*=\"display:none\"])'\r\n].join(',');\r\n\r\nexport default {\r\n    props: {\r\n        split: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        text: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        dropup: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        right: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    created() {\r\n        this.$root.$on('shown::dropdown', el => {\r\n            // To keep one dropdown opened on page\r\n            if (el !== this) {\r\n                this.visible = false;\r\n            }\r\n        });\r\n    },\r\n    watch: {\r\n        visible(state, old) {\r\n            if (state === old) {\r\n                return; // Avoid duplicated emits\r\n            }\r\n\r\n            if (state) {\r\n                this.$root.$emit('shown::dropdown', this);\r\n                /*\r\n                 If this is a touch-enabled device we add extra\r\n                 empty mouseover listeners to the body's immediate children;\r\n                 only needed because of broken event delegation on iOS\r\n                 https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\r\n                 */\r\n                if (typeof document !== 'undefined' && 'ontouchstart' in document.documentElement) {\r\n                    const children = Array.prototype.slice.call(document.body.children);\r\n                    children.forEach(el => {\r\n                        el.addEventListener('mouseover', this.noop);\r\n                    });\r\n                }\r\n            } else {\r\n                this.$root.$emit('hidden::dropdown', this);\r\n                /*\r\n                 If this is a touch-enabled device we remove the extra\r\n                 empty mouseover listeners we added for iOS support\r\n                 */\r\n                if (typeof document !== 'undefined' && 'ontouchstart' in document.documentElement) {\r\n                    const children = Array.prototype.slice.call(document.body.children);\r\n                    children.forEach(el => {\r\n                        el.removeEventListener('mouseover', this.noop);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        noop() {\r\n            // Do nothing event handler (used in visible watch)\r\n        },\r\n        toggle() {\r\n            if (this.disabled) {\r\n                this.visible = false;\r\n                return;\r\n            }\r\n            this.visible = !this.visible;\r\n            if (this.visible) {\r\n                this.$nextTick(function () {\r\n                    // Focus first visible non-disabled item\r\n                    const items = this.getItems();\r\n                    if (items.length > 0) {\r\n                        items[0].focus();\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        onTab() {\r\n            if (this.visible) {\r\n                this.visible = false;\r\n            }\r\n        },\r\n        onEsc(e) {\r\n            if (this.visible) {\r\n                this.visible = false;\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this.$nextTick(function () {\r\n                    // Return focus to original trigger button\r\n                    let el;\r\n                    if (this.split && this.$refs.toggle) {\r\n                        el = this.$refs.toggle.$el || this.$refs.toggle;\r\n                    } else {\r\n                        el = this.$refs.button.$el || this.$refs.button;\r\n                    }\r\n                    if (el && el.focus) {\r\n                        el.focus();\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        focusNext(e, up) {\r\n            if (!this.visible) {\r\n                return;\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            const items = this.getItems();\r\n            if (items.length < 1) {\r\n                return;\r\n            }\r\n            let index = items.indexOf(e.target);\r\n            if (up && index > 0) {\r\n                index--;\r\n            } else if (!up && index < items.length - 1) {\r\n                index++;\r\n            }\r\n            if (index < 0) {\r\n                index = 0;\r\n            }\r\n            items[index].focus();\r\n        },\r\n        getItems() {\r\n            return Array.prototype.slice.call(this.$refs.menu.querySelectorAll(ITEM_SELECTOR));\r\n        }\r\n    }\r\n};\r\n","<template>\r\n    <div :class=\"['btn-group','dropdown', {dropup, show: visible}]\">\r\n\r\n        <b-button :class=\"{'dropdown-toggle': !split, 'btn-link': link}\"\r\n                  ref=\"button\"\r\n                  :id=\"id ? (id + '__BV_button_') : null\"\r\n                  :aria-expanded=\"visible ? 'true' : 'false'\"\r\n                  :variant=\"variant\"\r\n                  :size=\"size\"\r\n                  :disabled=\"disabled\"\r\n                  @click.stop.prevent=\"click\"\r\n                  @kedown.space.stop.prevent=\"click\"\r\n                  @kedown.enter.stop.prevent=\"click\"\r\n        >\r\n            <slot name=\"text\">{{text}}</slot>\r\n        </b-button>\r\n\r\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\r\n             role=\"menu\"\r\n             ref=\"menu\"\r\n             :aria-labelledby=\"id ? (id + '__BV_button_') : null\"\r\n             @keyup.esc=\"onEsc\"\r\n             @keydown.tab=\"onTab\"\r\n             @keydown.up=\"focusNext($event,true)\"\r\n             @keydown.down=\"focusNext($event,false)\"\r\n        >\r\n            <slot></slot>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import clickOut from '../mixins/clickout';\r\n    import dropdown from '../mixins/dropdown';\r\n\r\n    export default {\r\n        mixins: [\r\n            clickOut,\r\n            dropdown\r\n        ],\r\n        data() {\r\n            return {\r\n                visible: false\r\n            };\r\n        },\r\n        computed: {\r\n            dropdownToggle() {\r\n                return this.caret ? 'dropdown-toggle' : '';\r\n            }\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String\r\n            },\r\n            caret: {\r\n                type: Boolean,\r\n                default: true\r\n            }\r\n        },\r\n        methods: {\r\n            clickOutListener() {\r\n                this.visible = false;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div :class=\"classObject\" role=\"group\">\r\n        <slot name=\"left\">\r\n            <div v-if=\"left\" class=\"input-group-addon\" v-html=\"left\"></div>\r\n        </slot>\r\n\r\n        <slot></slot>\r\n\r\n        <slot name=\"right\">\r\n            <div v-if=\"right\" class=\"input-group-addon\" v-html=\"right\"></div>\r\n        </slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'input-group',\r\n                    this.size ? ('input-group-' + this.size) : '',\r\n                    this.state ? ('has-' + this.state) : ''\r\n                ];\r\n            }\r\n        },\r\n        props: {\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            state: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            left: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            right: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div class=\"input-group-addon\" :id=\"id\">\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div class=\"input-group-btn\">\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {}\r\n    };\r\n</script>\r\n","<template>\r\n    <div :class=\"['card',cardVariant,cardAlign,cardInverse]\">\r\n        <!-- Card Image Slot-->\r\n        <slot name=\"img\" ref=\"img\">\r\n            <img v-if=\"img\" :src=\"img\" :alt=\"imgAlt\" class=\"card-img\">\r\n        </slot>\r\n\r\n        <!-- Card Header-->\r\n        <component v-if=\"header || showHeader\" :is=\"headerTag\" class=\"card-header\">\r\n            <slot name=\"header\">\r\n                <div v-html=\"header\"></div>\r\n            </slot>\r\n        </component>\r\n\r\n        <!--Show custom block when no-block prop is set-->\r\n        <template v-if=\"noBlock\">\r\n            <slot></slot>\r\n        </template>\r\n\r\n        <!-- Card Standard Blocks-->\r\n        <div :class=\"blockClass\" v-else>\r\n            <h4 v-if=\"title\" class=\"card-title\" v-html=\"title\"></h4>\r\n            <h6 v-if=\"subTitle\" class=\"card-subtitle mb-2 text-muted\" v-html=\"subTitle\"></h6>\r\n            <slot></slot>\r\n        </div>\r\n\r\n        <!-- Card Footer-->\r\n        <component v-if=\"footer || showFooter\" :is=\"footerTag\" class=\"card-footer\">\r\n            <slot name=\"footer\">\r\n                <div v-html=\"footer\"></div>\r\n            </slot>\r\n        </component>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            blockClass() {\r\n                return [\r\n                    'card-block',\r\n                    this.overlay ? 'card-img-overlay' : null\r\n                ];\r\n            },\r\n            cardVariant() {\r\n                return this.variant ? `card-${this.variant}` : null;\r\n            },\r\n            cardInverse() {\r\n                if (this.overlay || this.inverse) {\r\n                    return 'card-inverse';\r\n                }\r\n                // Auto inverse colored cards\r\n                if (this.inverse === null && this.variant && this.variant.length > 0 &&\r\n                    this.variant.indexOf('outline') === -1) {\r\n                    return 'card-inverse';\r\n                }\r\n            },\r\n            cardAlign() {\r\n                return this.align ? `text-${this.align}` : null;\r\n            }\r\n        },\r\n        props: {\r\n            align: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            inverse: {\r\n                type: Boolean,\r\n                // It should remain null for auto inverse\r\n                default: null\r\n            },\r\n            variant: {\r\n                type: String,\r\n                default: null\r\n            },\r\n\r\n            // Header\r\n            header: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            showHeader: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            headerTag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n\r\n            // Footer\r\n            footer: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            showFooter: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            footerTag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n\r\n            // Main block\r\n            title: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            subTitle: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            noBlock: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n\r\n            // Image\r\n            img: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            imgAlt: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            overlay: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\n    <div :class=\"['card-' + type]\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            type() {\n                if (this.deck) {\n                    return 'deck';\n                }\n\n                if (this.columns) {\n                    return 'columns';\n                }\n\n                return 'group';\n            }\n        },\n        props: {\n            deck: {\n                type: Boolean,\n                default: false\n            },\n            columns: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\r\n    <div class=\"carousel slide\" @mouseenter=\"pause\" @mouseleave=\"start\" :style=\"{background,height}\">\r\n        <!-- Indicators -->\r\n        <ol class=\"carousel-indicators\" v-show=\"indicators\">\r\n            <li v-for=\"n in slides.length\"\r\n                :class=\"{active:n-1 === index}\"\r\n                @click=\"index=n-1\"\r\n            ></li>\r\n        </ol>\r\n\r\n        <!-- Wrapper for slides -->\r\n        <div class=\"carousel-inner\" role=\"listbox\">\r\n            <slot></slot>\r\n        </div>\r\n\r\n        <!-- Controls -->\r\n        <template v-if=\"controls\">\r\n            <a class=\"carousel-control-prev\" href=\"#\" role=\"button\" data-slide=\"prev\" @click.stop.prevent=\"prev\">\r\n                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                <span class=\"sr-only\">Previous</span>\r\n            </a>\r\n            <a class=\"carousel-control-next\" href=\"#\" role=\"button\" data-slide=\"next\" @click.stop.prevent=\"next\">\r\n                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                <span class=\"sr-only\">Next</span>\r\n            </a>\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    const DIRECTION = {\r\n        next: {\r\n            current: 'carousel-item-left',\r\n            next: 'carousel-item-right',\r\n            overlay: 'carousel-item-next'\r\n        },\r\n        prev: {\r\n            current: 'carousel-item-right',\r\n            next: 'carousel-item-left',\r\n            overlay: 'carousel-item-prev'\r\n        }\r\n    };\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                index: 0,\r\n                isSliding: false,\r\n                slides: []\r\n            };\r\n        },\r\n        props: {\r\n            interval: {\r\n                type: Number,\r\n                default: 5000\r\n            },\r\n            indicators: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            controls: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            height: {\r\n                type: String\r\n            },\r\n            background: {\r\n                type: String\r\n            }\r\n        },\r\n        methods: {\r\n            // Previous slide\r\n            prev() {\r\n                if (this.index <= 0) {\r\n                    this.index = this.slides.length - 1;\r\n                } else {\r\n                    this.index--;\r\n                }\r\n            },\r\n\r\n            // Next slide\r\n            next() {\r\n                if (this.index >= this.slides.length - 1) {\r\n                    this.index = 0;\r\n                } else {\r\n                    this.index++;\r\n                }\r\n            },\r\n\r\n            // Pause auto rotation\r\n            pause() {\r\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\r\n                    return;\r\n                }\r\n                clearInterval(this._intervalId);\r\n            },\r\n\r\n            // Start auto rotate slides\r\n            start() {\r\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\r\n                    return;\r\n                }\r\n                this._intervalId = setInterval(() => {\r\n                    this.next();\r\n                }, this.interval);\r\n            }\r\n        },\r\n        mounted() {\r\n            // Get all slides\r\n            this.slides = this.$el.querySelectorAll('.carousel-item');\r\n\r\n            // Set first slide as active\r\n            this.slides[0].classList.add('active');\r\n\r\n            // Auto rotate slides\r\n            this.start();\r\n        },\r\n        watch: {\r\n            index(val, oldVal) {\r\n                if (val === oldVal) {\r\n                    return;\r\n                }\r\n\r\n                if (this.isSliding) {\r\n                    this.index = oldVal;\r\n                    return;\r\n                }\r\n\r\n                // Determine sliding direction\r\n                let direction = (val > oldVal) ? DIRECTION.next : DIRECTION.prev;\r\n\r\n                // Rotates\r\n                if (oldVal === 0 && val === this.slides.length - 1) {\r\n                    direction = DIRECTION.prev;\r\n                } else if (oldVal === this.slides.length - 1 && val === 0) {\r\n                    direction = DIRECTION.next;\r\n                }\r\n\r\n                // Determine current and next slides\r\n                const currentSlide = this.slides[oldVal];\r\n                const nextSlide = this.slides[val];\r\n\r\n                if (!currentSlide || !nextSlide) {\r\n                    return;\r\n                }\r\n\r\n                // Start animating\r\n                this.isSliding = true;\r\n\r\n                nextSlide.classList.add(direction.next, direction.overlay);\r\n                currentSlide.classList.add(direction.current);\r\n\r\n                this._carouselAnimation = setTimeout(() => {\r\n                    this.isSliding = false;\r\n                    this.$emit('slide', val);\r\n\r\n                    currentSlide.classList.remove('active');\r\n                    nextSlide.classList.add('active');\r\n\r\n                    currentSlide.classList.remove(direction.current);\r\n                    nextSlide.classList.remove(direction.next, direction.overlay);\r\n                }, 500);\r\n            }\r\n        },\r\n        destroyed() {\r\n            clearTimeout(this._carouselAnimation);\r\n            clearInterval(this._intervalId);\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <div class=\"carousel-item\" :style=\"{background,height}\">\r\n        <img class=\"d-block img-fluid\" v-if=\"img\" :src=\"img\" :alt=\"imgAlt\">\r\n        <div :class=\"contentClasses\">\r\n            <h3 v-if=\"caption\" v-html=\"caption\"></h3>\r\n            <p v-if=\"text\" v-html=\"text\"></p>\r\n            <slot></slot>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            img: {\r\n                type: String\r\n            },\r\n            imgAlt: {\r\n                type: String\r\n            },\r\n            contentVisibleUp: {\r\n                type: String\r\n            },\r\n            caption: {\r\n                type: String\r\n            },\r\n            text: {\r\n                type: String\r\n            },\r\n            background: {\r\n                type: String\r\n            },\r\n            height: {\r\n                type: String\r\n            }\r\n        },\r\n        computed: {\r\n            contentClasses() {\r\n                const classes = {\r\n                    'carousel-caption': Boolean(this.caption)\r\n                };\r\n                if (this.contentVisibleUp) {\r\n                    classes['d-none'] = true;\r\n                    classes[`d-${this.contentVisibleUp}-block`] = true;\r\n                }\r\n                return classes;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <transition\r\n            @enter=\"enter\"\r\n            @after-enter=\"clearHeight\"\r\n            @leave=\"leave\"\r\n            @after-leave=\"clearHeight\"\r\n            name=\"collapse\"\r\n    >\r\n        <div :class=\"classObject\" v-show=\"show\">\r\n            <slot></slot>\r\n        </div>\r\n    </transition>\r\n</template>\r\n\r\n<style scoped>\r\n    .collapse-enter-active, .collapse-leave-active {\r\n        transition: all .35s ease;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .collapse-enter, .collapse-leave-to {\r\n        /*height: 0;*/\r\n    }\r\n</style>\r\n\r\n<script>\r\n    export default {\r\n\r\n        data() {\r\n            return {\r\n                show: false\r\n            };\r\n        },\r\n\r\n        computed: {\r\n            classObject() {\r\n                return {\r\n                    'navbar-collapse': this.isNav,\r\n                    show: this.show\r\n                };\r\n            }\r\n        },\r\n\r\n        props: {\r\n            isNav: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            id: {\r\n                type: String,\r\n                required: true\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            toggle() {\r\n                this.show = !this.show;\r\n            },\r\n            enter(el) {\r\n                el.style.height = 'auto';\r\n                const realHeight = getComputedStyle(el).height;\r\n                el.style.height = '0px';\r\n\r\n                /* eslint-disable no-unused-expressions */\r\n                el.offsetHeight; // Force repaint\r\n\r\n                el.style.height = realHeight;\r\n            },\r\n            leave(el) {\r\n                el.style.height = 'auto';\r\n                const realHeight = getComputedStyle(el).height;\r\n                el.style.height = realHeight;\r\n\r\n                /* eslint-disable no-unused-expressions */\r\n                el.offsetHeight; // Force repaint\r\n\r\n                el.style.height = '0px';\r\n            },\r\n            clearHeight(el) {\r\n                el.style.height = null;\r\n            }\r\n        },\r\n\r\n        created() {\r\n            this.$root.$on('collapse::toggle', target => {\r\n                if (target !== this.id) {\r\n                    return;\r\n                }\r\n                this.toggle();\r\n            });\r\n        }\r\n    };\r\n\r\n</script>\r\n","/**\r\n * Tries to generate id using uid if no id prop is provided.\r\n * NOTE: this mixin should be used only when `aria` and `for` tags are needed, in other cases.\r\n * it is better to prefer references/refs and events over relying on generated id.\r\n * @see https://github.com/bootstrap-vue/bootstrap-vue/issues/281\r\n *\r\n * Currently is being used in:\r\n *  - dropdown.vue\r\n *  - form-checkbox-vue\r\n *  - form-file.vue\r\n *  - form-input.vue\r\n *  - form-select.vue\r\n */\r\n\r\nconst inBrowser = typeof window !== 'undefined';\r\nconst UNSAFE_UID = (inBrowser && window.UNSAFE_UID === true) || (!inBrowser && process.env.UNSAFE_UID === true);\r\n\r\nexport default {\r\n    computed: {\r\n        _id() {\r\n            if (!UNSAFE_UID || this.id) {\r\n                return this.id;\r\n            }\r\n\r\n            return `__b_${this._uid}__`;\r\n        }\r\n    }\r\n};\r\n","<template>\r\n    <div :class=\"['dropdown','btn-group',{dropup, show: visible}]\">\r\n\r\n        <b-button :class=\"{'dropdown-toggle': !split, 'btn-link': link}\"\r\n                  ref=\"button\"\r\n                  :id=\"_id\"\r\n                  :aria-haspopup=\"split ? null : 'true'\"\r\n                  :aria-expanded=\"split ? null : (visible ? 'true' : 'false')\"\r\n                  :variant=\"variant\"\r\n                  :size=\"size\"\r\n                  :disabled=\"disabled\"\r\n                  @click.stop.prevent=\"click\"\r\n        >\r\n            <slot name=\"text\">{{text}}</slot>\r\n        </b-button>\r\n\r\n        <b-button :class=\"['dropdown-toggle','dropdown-toggle-split',{'btn-link': link}]\"\r\n                  v-if=\"split\"\r\n                  ref=\"toggle\"\r\n                  :aria-haspopup=\"split ? 'true' : null\"\r\n                  :aria-expanded=\"split ? (visible ? 'true' : 'false') : null\"\r\n                  :variant=\"variant\"\r\n                  :size=\"size\"\r\n                  :disabled=\"disabled\"\r\n                  @click.stop.prevent=\"toggle\"\r\n        >\r\n            <span class=\"sr-only\">{{toggleText}}</span>\r\n        </b-button>\r\n\r\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\r\n             ref=\"menu\"\r\n             role=\"menu\"\r\n             :aria-labelledby=\"split ? null : _id\"\r\n             @keyup.esc=\"onEsc\"\r\n             @keydown.tab=\"onTab\"\r\n             @keydown.up=\"focusNext($event,true)\"\r\n             @keydown.down=\"focusNext($event,false)\"\r\n        >\r\n            <slot></slot>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import clickOut from '../mixins/clickout';\r\n    import dropdown from '../mixins/dropdown';\r\n    import generateId from '../mixins/generate-id';\r\n    import bButton from './button.vue';\r\n\r\n    export default {\r\n        mixins: [clickOut, dropdown, generateId],\r\n        components: {bButton},\r\n        data() {\r\n            return {\r\n                visible: false\r\n            };\r\n        },\r\n        props: {\r\n            toggleText: {\r\n                type: String,\r\n                default: 'Toggle Dropdown'\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            variant: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            link: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        methods: {\r\n            clickOutListener() {\r\n                this.visible = false;\r\n            },\r\n            click(e) {\r\n                if (this.disabled) {\r\n                    this.visible = false;\r\n                    return;\r\n                }\r\n\r\n                if (this.split) {\r\n                    this.$emit('click', e);\r\n                    this.$root.$emit('shown::dropdown', this);\r\n                } else {\r\n                    this.toggle();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <b-link :class=\"['dropdown-item',{ disabled }]\"\r\n            :to=\"to\"\r\n            :href=\"href\"\r\n            :disabled=\"disabled\"\r\n            tabindex=\"-1\"\r\n            role=\"menuitem\"\r\n            @click=\"dropdown_click\"\r\n            @click.native=\"dropdown_click\"\r\n    >\r\n        <slot></slot>\r\n    </b-link>\r\n</template>\r\n\r\n<script>\r\n    import bLink from './link.vue';\r\n\r\n    export default {\r\n        extends: bLink,\r\n        methods: {\r\n            dropdown_click(e) {\r\n                if (!this.disabled) {\r\n                    this.$root.$emit('shown::dropdown', this);\r\n                }\r\n\r\n                this.click(e);\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div role=\"separator\" class=\"dropdown-divider\"></div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {}\r\n    };\r\n</script>\r\n","<template>\r\n    <component :is=\"tag\" tabindex=\"-1\" class=\"dropdown-header\">\r\n        <slot></slot>\r\n    </component>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            tag: {\r\n                type: String,\r\n                default: 'h6'\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\n    <div class=\"dropdown-select\" :class=\"{open: show, dropdown: !dropup, dropup: dropup}\">\n        <button\n                :id=\"id\"\n                :class=\"['btn','dropdown',dropdownToggle,btnVariant,btnSize]\"\n                role=\"button\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"show\"\n                @click.prevent=\"toggle($event)\"\n                :disabled=\"disabled\">\n            <span class=\"checked-items\" v-html=\"displayItem\"></span>\n        </button>\n        <ul class=\"dropdown-menu\" :class=\"{'dropdown-menu-right' : position == 'right'}\" aria-labelledby=\"dLabel\">\n            <li v-for=\"item in list\">\n                <button class=\"dropdown-item\" :click.stop.prevent=\"select(item)\">{{item.text}}</button>\n            </li>\n        </ul>\n    </div>\n</template>\n\n\n<script>\n    export default {\n        data() {\n            return {\n                show: false,\n                selected: false\n            };\n        },\n        computed: {\n            btnVariant() {\n                return !this.variant || this.variant === `default` ? `btn-secondary` : `btn-${this.variant}`;\n            },\n            btnSize() {\n                return !this.size || this.size === `default` ? `` : `btn-${this.size}`;\n            },\n            dropdownToggle() {\n                return this.caret ? 'dropdown-toggle' : '';\n            },\n            displayItem() {\n                // If zero show default message\n                if ((this.returnObject && this.model && !this.model.text) || (!this.returnObject && this.model && this.model.length === 0) || this.forceDefault) {\n                    return this.defaultText;\n                }\n\n                // Show selected item\n                if (this.returnObject && this.model && this.model.text) {\n                    return this.model.text;\n                }\n\n                // Show text that coresponds to the model value\n                if (!this.returnObject && this.model) {\n                    let result = this.model || '';\n                    this.list.forEach(function (item) {\n                        if (item.value === this.model) {\n                            result = item.text;\n                        }\n                    });\n                    return result;\n                }\n\n                return '';\n            }\n        },\n        props: {\n            id: {\n                type: String\n            },\n            model: {\n                required: false\n            },\n            list: {\n                type: Array,\n                default: [],\n                required: true\n            },\n            caret: {\n                type: Boolean,\n                default: true\n            },\n            position: {\n                type: String,\n                default: 'left'\n            },\n            size: {\n                type: String,\n                default: ''\n            },\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            defaultText: {\n                type: String,\n                default: 'Plase select one'\n            },\n            forceDefault: {\n                type: Boolean,\n                default: false\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            },\n            dropup: {\n                type: Boolean,\n                default: false\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            toggle(e) {\n                // Hide an alert\n                this.show = !this.show;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                if (this.show) {\n                    this.$root.$emit('shown:dropdown', this.id);\n                    e.stopPropagation();\n                } else {\n                    this.$root.$emit('hidden::dropdown', this.id);\n                }\n            },\n            select(item) {\n                // We need to set empty model to make model watchers react to it\n                if (this.returnObject) {\n                    this.model = item;\n                } else {\n                    this.model = item.value;\n                }\n                this.show = false;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                this.$root.$emit('selected::dropdown', this.id, this.model);\n            }\n        },\n        created() {\n            const hub = this.$root;\n            hub.$on('hide::dropdown', function () {\n                this.show = false;\n            });\n        }\n    };\n</script>\n","<template>\n    <form :class=\"classObject\">\n        <slot></slot>\n    </form>\n</template>\n\n<script>\nexport default {\n    computed: {\n        classObject() {\n            return [\n                this.inline ? 'form-inline' : ''\n            ];\n        }\n    },\n    props: {\n        inline: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\r\n    <div :class=\"['form-group','row',inputState]\"\r\n        role=\"group\"\r\n        :aria-describedby=\"describedBy\"\r\n    >\r\n        <label v-if=\"label\"\r\n               :for=\"target\"\r\n               :id=\"labelId\"\r\n               :class=\"[labelSrOnly ? 'sr-only' : 'col-form-label',labelLayout,labelAlignClass]\"\r\n               v-html=\"label\"\r\n        ></label>\r\n        <div :class=\"inputLayout\" ref=\"content\">\r\n            <slot></slot>\r\n            <div v-if=\"feedback\"\r\n                 class=\"form-text form-control-feedback\"\r\n                 :id=\"feedbackId\"\r\n                 role=\"alert\"\r\n                 aria-live=\"assertive\"\r\n                 aria-atomic=\"true\"\r\n                 v-html=\"feedback\"\r\n            ></div>\r\n            <small v-if=\"description\"\r\n                   class=\"form-text text-muted\"\r\n                   :id=\"descriptionId\"\r\n                   v-html=\"description\"\r\n            ></small>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                target: null\r\n            };\r\n        },\r\n        computed: {\r\n            labelId() {\r\n                return (this.id && this.label) ? (this.id + '__BV_label_') : null;\r\n            },\r\n            descriptionId() {\r\n                return (this.id && this.description) ? (this.id + '__BV_description_') : null;\r\n            },\r\n            feedbackId() {\r\n                return (this.id && this.feedback) ? (this.id + '__BV_feedback_') : null;\r\n            },\r\n            describedBy() {\r\n                if (this.id && (this.label || this.feedback || this.description)) {\r\n                    return [\r\n                        this.labelId,\r\n                        this.descriptionId,\r\n                        this.feedbackId\r\n                    ].filter(i => i).join(' ');\r\n                }\r\n                return null;\r\n            },\r\n            inputState() {\r\n                return this.state ? `has-${this.state}` : '';\r\n            },\r\n            labelLayout() {\r\n                if (this.labelSrOnly) {\r\n                    return null;\r\n                }\r\n                return this.horizontal ? ('col-sm-' + this.labelSize) : 'col-12';\r\n            },\r\n            labelAlignClass() {\r\n                if (this.labelSrOnly) {\r\n                    return null;\r\n                }\r\n                return this.labelTextAlign ? `text-${this.labelTextAlign}` : null;\r\n            },\r\n            inputLayout() {\r\n                return this.horizontal ? ('col-sm-' + (12 - this.labelSize)) : 'col-12';\r\n            }\r\n        },\r\n        methods: {\r\n            updateTarget() {\r\n                const content = this.$refs.content;\r\n                if (!content) {\r\n                    return null;\r\n                }\r\n                const input = content.querySelector(this.inputSelector);\r\n                this.target = (input && input.id) ? input.id : null;\r\n            }\r\n        },\r\n        mounted() {\r\n            this.updateTarget();\r\n        },\r\n        updated() {\r\n            this.updateTarget();\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            state: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            horizontal: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            labelSize: {\r\n                type: Number,\r\n                default: 3\r\n            },\r\n            labelTextAlign: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            label: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            labelSrOnly: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            description: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            feedback: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            inputSelector: {\r\n                type: String,\r\n                default: 'input,select,textarea,.form-control,.form-control-static,.dropdown,.dropup'\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","export default {\r\n    computed: {\r\n        inputClass() {\r\n            return [\r\n                this.size ? `form-control-${this.size}` : null,\r\n                this.state ? `form-control-${this.state}` : null\r\n            ];\r\n        },\r\n        custom() {\r\n            return !this.plain;\r\n        }\r\n    },\r\n    props: {\r\n        name: {\r\n            type: String\r\n        },\r\n        disabled: {\r\n            type: Boolean\r\n        },\r\n        plain: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        state: {\r\n            type: String\r\n        },\r\n        size: {\r\n            type: String\r\n        },\r\n        id: {\r\n            type: String\r\n        }\r\n    }\r\n};\r\n\r\n","export default {\r\n    computed: {\r\n        checkboxClass() {\r\n            return {\r\n                'custom-control': this.custom,\r\n                'form-check-inline': this.inline\r\n            };\r\n        }\r\n    }\r\n};\r\n\r\n","<template>\r\n    <label :class=\"[inputClass,checkboxClass,custom?'custom-checkbox':null]\">\r\n        <input\r\n                type=\"checkbox\"\r\n                :id=\"_id\"\r\n                :name=\"name\"\r\n                :value=\"value\"\r\n                :disabled=\"disabled\"\r\n\r\n                :class=\"[custom?'custom-control-input':null]\"\r\n                :checked=\"checked===value\"\r\n                @change=\"$emit('change',$event.target.checked?value:uncheckedValue)\"\r\n        >\r\n        <span class=\"custom-control-indicator\" v-if=\"custom\"></span>\r\n        <span :class=\"[custom?'custom-control-description':null]\"><slot></slot></span>\r\n    </label>\r\n</template>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n    import formCheckBoxMixin from '../mixins/form-checkbox';\r\n    import generateId from '../mixins/generate-id';\r\n\r\n    export default {\r\n        mixins: [formMixin, formCheckBoxMixin, generateId],\r\n        model: {\r\n            prop: 'checked',\r\n            event: 'change'\r\n        },\r\n        props: {\r\n            value: {\r\n                default: true\r\n            },\r\n            uncheckedValue: {\r\n                default: false\r\n            },\r\n            checked: {\r\n                default: true\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","export default {\r\n    computed: {\r\n        formOptions() {\r\n            let options = this.options || {};\r\n\r\n            if (Array.isArray(options)) {\r\n                // Normalize flat arrays to object Array\r\n                options = options.map(option => {\r\n                    if (typeof option === 'object') {\r\n                        return {\r\n                            value: option[this.valueField],\r\n                            text: option[this.textField],\r\n                            disabled: option.disabled || false\r\n                        };\r\n                    }\r\n\r\n                    return {text: String(option), value: option || {}};\r\n                });\r\n            } else {\r\n                // Normalize Objects keys to Array\r\n                options = Object.keys(options).map(value => {\r\n                    let option = options[value] || {};\r\n\r\n                    // Resolve text\r\n                    if (typeof option !== 'object') {\r\n                        option = {text: String(option)};\r\n                    }\r\n\r\n                    // Resolve value (uses key as value if not provided)\r\n                    option.value = option[this.valueField] || value;\r\n\r\n                    return option;\r\n                });\r\n            }\r\n\r\n            return options;\r\n        },\r\n        selectedValue() {\r\n            const formOptions = this.formOptions;\r\n            for (let i = 0; i < formOptions.length; i++) {\r\n                if (formOptions[i].value === this.localValue) {\r\n                    if (this.returnObject) {\r\n                        return formOptions[i];\r\n                    }\r\n                    return formOptions[i].value;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    props: {\r\n        valueField: {\r\n            type: [String],\r\n            default: 'value'\r\n        },\r\n        textField: {\r\n            type: [String],\r\n            default: 'text'\r\n        }\r\n    },\r\n    watch: {\r\n        localValue(value, old_value) {\r\n            if (value === old_value) {\r\n                return;\r\n            }\r\n            this.$emit('input', this.selectedValue);\r\n        },\r\n        value(value, old_value) {\r\n            if (value === old_value) {\r\n                return;\r\n            }\r\n            this.localValue = value;\r\n        }\r\n    }\r\n};\r\n","<template>\r\n    <div :class=\"[inputClass,this.stacked?'custom-controls-stacked':'']\">\r\n        <label :class=\"[checkboxClass,custom?'custom-radio':null]\" v-for=\"option in formOptions\">\r\n            <input\r\n                    v-model=\"localValue\"\r\n                    :class=\"custom?'custom-control-input':null\"\r\n                    type=\"radio\"\r\n                    :value=\"option.value\"\r\n                    :name=\"option.name\"\r\n                    :id=\"option.id\"\r\n                    :disabled=\"option.disabled\"\r\n                    ref=\"inputs\"\r\n            >\r\n\r\n            <span class=\"custom-control-indicator\" v-if=\"custom\"></span>\r\n\r\n            <span :class=\"custom?'custom-control-description':null\" v-html=\"option.text\"></span>\r\n\r\n        </label>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import formOptionsMixin from '../mixins/form-options';\r\n    import formMixin from '../mixins/form';\r\n    import formCheckBoxMixin from '../mixins/form-checkbox';\r\n\r\n    export default {\r\n        mixins: [formMixin, formCheckBoxMixin, formOptionsMixin],\r\n        data() {\r\n            return {\r\n                localValue: this.value\r\n            };\r\n        },\r\n        computed: {\r\n            inputState() {\r\n                return this.state ? `has-${this.state}` : '';\r\n            }\r\n        },\r\n        props: {\r\n            value: {},\r\n            options: {\r\n                type: [Array, Object],\r\n                default: null,\r\n                required: true\r\n            },\r\n            stacked: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            returnObject: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <p :id=\"_id\"\r\n       :class=\"['form-control-static',inputClass]\"\r\n       v-html=\"staticValue\"\r\n    >\r\n        <slot></slot>\r\n    </p>\r\n</template>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n    import generateId from '../mixins/generate-id';\r\n\r\n    export default {\r\n        mixins: [formMixin, generateId],\r\n        computed: {\r\n            staticValue() {\r\n                return this.formatter ? this.formatter(this.value) : this.value;\r\n            }\r\n        },\r\n        props: {\r\n            value: {\r\n                default: null\r\n            },\r\n            formatter: {\r\n                type: Function\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <input v-if=\"!static\"\r\n           :type=\"type\"\r\n           :value=\"value\"\r\n           :name=\"name\"\r\n           :id=\"_id\"\r\n           :disabled=\"disabled\"\r\n           ref=\"input\"\r\n\r\n           :is=\"textarea?'textarea':'input'\"\r\n           :class=\"['form-control',inputClass]\"\r\n           :rows=\"rows || rowsCount\"\r\n\r\n           :placeholder=\"placeholder\"\r\n\r\n           @input=\"onInput($event.target.value)\"\r\n           @change=\"onChange($event.target.value)\"\r\n           @keyup=\"onKeyUp($event)\"\r\n           @focus=\"$emit('focus')\"\r\n           @blur=\"$emit('blur')\"\r\n    />\r\n    <b-form-input-static v-else\r\n                         :id=\"_id\"\r\n                         :value=\"value\"\r\n                         :formatter=\"formatter\"\r\n    ></b-form-input-static>\r\n</template>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n    import generateId from '../mixins/generate-id';\r\n    import bFormInputStatic from './form-input-static.vue';\r\n\r\n    export default {\r\n        mixins: [formMixin, generateId],\r\n        components: {bFormInputStatic},\r\n        computed: {\r\n            rowsCount() {\r\n                return (this.value || '').toString().split('\\n').length;\r\n            }\r\n        },\r\n        methods: {\r\n            format(value) {\r\n                if (this.formatter) {\r\n                    const formattedValue = this.formatter(value);\r\n                    if (formattedValue !== value) {\r\n                        value = formattedValue;\r\n                        this.$refs.input.value = formattedValue;\r\n                    }\r\n                }\r\n                return value;\r\n            },\r\n            onInput(value) {\r\n                if (!this.lazyFormatter) {\r\n                    value = this.format(value);\r\n                }\r\n                this.$emit('input', value);\r\n            },\r\n            onChange(value) {\r\n                value = this.format(value);\r\n                this.$emit('input', value);\r\n                this.$emit('change', value);\r\n            },\r\n            onKeyUp(e) {\r\n                this.$emit('keyup', e);\r\n            }\r\n        },\r\n        props: {\r\n            value: {\r\n                default: null\r\n            },\r\n            type: {\r\n                type: String,\r\n                default: 'text'\r\n            },\r\n            static: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            placeholder: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            rows: {\r\n                type: Number,\r\n                default: null\r\n            },\r\n            textarea: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            formatter: {\r\n                type: Function\r\n            },\r\n            lazyFormatter: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <label :class=\"[custom?'custom-file':null,inputClass]\"\r\n           @dragover.stop.prevent=\"dragover\"\r\n    >\r\n\r\n        <!-- Drop Here Target -->\r\n        <span class=\"drop-here\"\r\n              v-if=\"dragging\"\r\n              @dragover.stop.prevent=\"dragover\"\r\n              @drop.stop.prevent=\"drop\"\r\n              @dragleave.stop.prevent=\"dragging=false\"\r\n              :data-drop=\"dropLabel\"\r\n        ></span>\r\n\r\n        <!-- Real Form input -->\r\n        <input type=\"file\"\r\n               :name=\"name\"\r\n               :id=\"_id\"\r\n               :disabled=\"disabled\"\r\n               ref=\"input\"\r\n               :accept=\"accept\"\r\n\r\n               class=\"custom-file-input\"\r\n               @change=\"onFileChange\"\r\n               :multiple=\"multiple\"\r\n               :webkitdirectory=\"directory\"\r\n        >\r\n\r\n        <!-- Overlay Labels -->\r\n        <span :class=\"['custom-file-control',dragging?'dragging':null,inputClass]\"\r\n              :data-choose=\"computedChooseLabel\"\r\n              :data-selected=\"selectedLabel\"\r\n              v-if=\"custom\"\r\n        ></span>\r\n\r\n    </label>\r\n</template>\r\n\r\n<style>\r\n    .custom-file-control {\r\n        overflow: hidden;\r\n    }\r\n\r\n    .custom-file-control {\r\n        overflow: hidden;\r\n    }\r\n\r\n    .custom-file-control.dragging {\r\n        overflow: hidden;\r\n        filter: blur(3px);\r\n    }\r\n\r\n    .custom-file-control::after {\r\n        content: attr(data-selected);\r\n    }\r\n\r\n    .custom-file-control::before {\r\n        content: attr(data-choose);\r\n    }\r\n\r\n    .custom-file .drop-here {\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        top: 0;\r\n        bottom: 0;\r\n        background-color: rgba(0, 0, 0, .5);\r\n        border-radius: 3px;\r\n        z-index: 99999;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    .custom-file .drop-here::before {\r\n        color: white;\r\n        content: attr(data-drop);\r\n    }\r\n\r\n</style>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n    import generateId from '../mixins/generate-id';\r\n\r\n    export default {\r\n        mixins: [formMixin, generateId],\r\n        data() {\r\n            return {\r\n                selectedFile: null,\r\n                dragging: false\r\n            };\r\n        },\r\n        computed: {\r\n            selectedLabel() {\r\n                if (!this.selectedFile || this.selectedFile.length === 0) {\r\n                    return this.placeholder || 'No file chosen';\r\n                }\r\n\r\n                if (this.multiple) {\r\n                    if (this.selectedFile.length === 1) {\r\n                        return this.selectedFile[0].name;\r\n                    }\r\n\r\n                    return this.selectedFormat\r\n                        .replace(':names', this.selectedFile.map(file => file.name).join(','))\r\n                        .replace(':count', this.selectedFile.length);\r\n                }\r\n\r\n                return this.selectedFile.name;\r\n            },\r\n            computedChooseLabel() {\r\n                return this.chooseLabel || (this.multiple ? 'Choose Files' : 'Choose File');\r\n            }\r\n        },\r\n        watch: {\r\n            selectedFile(newVal, oldVal) {\r\n                if (newVal === oldVal) {\r\n                    return;\r\n                }\r\n\r\n                if (!newVal && this.multiple) {\r\n                    this.$emit('input', []);\r\n                } else {\r\n                    this.$emit('input', newVal);\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            onFileChange(e) {\r\n                // Always emit original event\r\n                this.$emit('change', e);\r\n\r\n                // Check if special `items` prop is available on event (drop mode)\r\n                // Can be disabled by setting no-traverse\r\n                const items = e.dataTransfer && e.dataTransfer.items;\r\n                if (items && !this.noTraverse) {\r\n                    const queue = [];\r\n                    for (let i = 0; i < items.length; i++) {\r\n                        const item = items[i].webkitGetAsEntry();\r\n                        if (item) {\r\n                            queue.push(this.traverseFileTree(item));\r\n                        }\r\n                    }\r\n                    Promise.all(queue).then(filesArr => {\r\n                        this.setFiles(Array.prototype.concat.apply([], filesArr));\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                // Normal handling\r\n                this.setFiles(e.target.files || e.dataTransfer.files);\r\n            },\r\n            setFiles(files) {\r\n                if (!files) {\r\n                    this.selectedFile = null;\r\n                    return;\r\n                }\r\n\r\n                if (!this.multiple) {\r\n                    this.selectedFile = files[0];\r\n                    return;\r\n                }\r\n\r\n                // Convert files to array\r\n                const filesArray = [];\r\n                for (let i = 0; i < files.length; i++) {\r\n                    if (files[i].type.match(this.accept)) {\r\n                        filesArray.push(files[i]);\r\n                    }\r\n                }\r\n\r\n                this.selectedFile = filesArray;\r\n            },\r\n            dragover(e) {\r\n                if (this.noDrop) {\r\n                    return;\r\n                }\r\n\r\n                this.dragging = true;\r\n                e.dataTransfer.dropEffect = 'copy';\r\n            },\r\n            drop(e) {\r\n                if (this.noDrop) {\r\n                    return;\r\n                }\r\n\r\n                this.dragging = false;\r\n                if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n                    this.onFileChange(e);\r\n                }\r\n            },\r\n            traverseFileTree(item, path) {\r\n                // Based on http://stackoverflow.com/questions/3590058\r\n                return new Promise(resolve => {\r\n                    path = path || '';\r\n                    if (item.isFile) {\r\n                        // Get file\r\n                        item.file(file => {\r\n                            file.$path = path; // Inject $path to file obj\r\n                            resolve(file);\r\n                        });\r\n                    } else if (item.isDirectory) {\r\n                        // Get folder contents\r\n                        item.createReader().readEntries(entries => {\r\n                            const queue = [];\r\n                            for (let i = 0; i < entries.length; i++) {\r\n                                queue.push(this.traverseFileTree(entries[i], path + item.name + '/'));\r\n                            }\r\n                            Promise.all(queue).then(filesArr => {\r\n                                resolve(Array.prototype.concat.apply([], filesArr));\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        props: {\r\n            accept: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            placeholder: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            chooseLabel: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            multiple: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            directory: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            noTraverse: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            selectedFormat: {\r\n                type: String,\r\n                default: ':count Files'\r\n            },\r\n            noDrop: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            dropLabel: {\r\n                type: String,\r\n                default: 'Drop files here'\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <select :class=\"[inputClass,custom?'custom-select':null]\"\r\n            :name=\"name\"\r\n            :id=\"_id\"\r\n            v-model=\"localValue\"\r\n            :disabled=\"disabled\"\r\n            ref=\"input\"\r\n    >\r\n        <option v-for=\"option in formOptions\"\r\n                :value=\"option.value\"\r\n                v-html=\"option.text\"\r\n                :disabled=\"option.disabled\"\r\n        ></option>\r\n    </select>\r\n</template>\r\n\r\n<script>\r\n    import formOptions from '../mixins/form-options';\r\n    import formMixin from '../mixins/form';\r\n    import generateId from '../mixins/generate-id';\r\n\r\n    export default {\r\n        mixins: [formMixin, formOptions, generateId],\r\n        data() {\r\n            return {\r\n                localValue: this.value\r\n            };\r\n        },\r\n        props: {\r\n            value: {},\r\n            options: {\r\n                type: [Array, Object],\r\n                required: true\r\n            },\r\n            returnObject: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <div :class=\"['jumbotron',fluid?'jumbotron-fluid':null]\">\r\n        <div :class=\"containerFluid ? 'container-fluid' : 'container'\">\r\n            <h1 v-if=\"header\" class=\"display-3\" v-html=\"header\"></h1>\r\n            <p v-if=\"lead\" class=\"lead\" v-html=\"lead\"></p>\r\n            <slot></slot>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {},\r\n        props: {\r\n            fluid: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            containerFluid: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            header: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            lead: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\n<span :class=\"['badge',badgeVariant,badgePill]\">\n\t<slot></slot>\n</span>\n</template>\n\n<script>\n    export default {\n        computed: {\n            badgeVariant() {\n                return !this.variant || this.variant === `default` ? `badge-default` : `badge-${this.variant}`;\n            },\n            badgePill() {\n                return this.pill ? 'badge-pill' : '';\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            pill: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['list-group',flush?'list-group-flush':null]\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        props: {\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            flush: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"myTag\" :class=\"classObject\" ref=\"item\" :to=\"to\" :href=\"href\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    import bLink from './link.vue';\n\n    const actionTags = ['a', 'router-link', 'button', 'b-link'];\n\n    export default {\n        components: {bLink},\n        computed: {\n            classObject() {\n                return [\n                    'list-group-item',\n                    this.listState,\n                    this.active ? 'active' : null,\n                    this.disabled ? 'disabled' : null,\n                    this.isAction ? 'list-group-item-action' : null\n                ];\n            },\n            isAction() {\n                if (this.action === false) {\n                    return false;\n                }\n                return this.action || this.to || this.href || actionTags.indexOf(this.tag) !== -1;\n            },\n            listState() {\n                return this.variant ? `list-group-item-${this.variant}` : null;\n            },\n            myTag() {\n                if (this.tag) {\n                    return this.tag;\n                }\n                return (this.to || this.href) ? 'b-link' : 'div';\n            }\n        },\n        props: {\n            tag: {\n                type: String,\n                default: null\n            },\n            active: {\n                type: Boolean,\n                default: false\n            },\n            action: {\n                type: Boolean,\n                default: null\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            to: {\n                type: String,\n                default: null\n            },\n            href: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"media\">\n        <div :class=\"['d-flex','mr-3',verticalAlignClass]\"  v-if=\"!rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n        <div class=\"media-body\">\n            <slot></slot>\n        </div>\n        <div :class=\"['d-flex','ml-3',verticalAlignClass]\" v-if=\"rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            verticalAlignClass() {\n                return `align-self-${this.verticalAlign}`;\n            }\n        },\n        props: {\n            rightAlign: {\n                type: Boolean,\n                default: false\n            },\n            verticalAlign: {\n                type: String,\n                default: 'top'\n            }\n        }\n    };\n</script>\n","<template>\r\n    <div>\r\n        <transition-group enter-class=\"hidden\"\r\n                          enter-to-class=\"\"\r\n                          enter-active-class=\"\"\r\n                          @after-enter=\"focusFirst\"\r\n                          leave-class=\"show\"\r\n                          leave-active-class=\"\"\r\n                          leave-to-class=\"hidden\"\r\n        >\r\n            <div key=\"modal\" :id=\"id\"\r\n                 v-show=\"is_visible\"\r\n                 :class=\"['modal',{fade: fade, show: is_visible}]\"\r\n                 role=\"dialog\"\r\n                 @click=\"onClickOut($event)\"\r\n                 @keyup.esc=\"onEsc($event)\"\r\n            >\r\n\r\n                <div :class=\"['modal-dialog','modal-'+size]\">\r\n                    <div class=\"modal-content\"\r\n                         tabindex=\"-1\"\r\n                         role=\"document\"\r\n                         ref=\"content\"\r\n                         :aria-labelledby=\"(hideHeader || !id) ? null : (id + '_modal_title')\"\r\n                         :aria-describedby=\"id ? (id + '_modal_body') : null\"\r\n                         @click.stop\r\n                    >\r\n\r\n                        <header class=\"modal-header\" ref=\"header\" v-if=\"!hideHeader\">\r\n                            <slot name=\"modal-header\">\r\n                                <h5 class=\"modal-title\" :id=\"id ? (id + '_modal_title') : null\">\r\n                                    <slot name=\"modal-title\">{{title}}</slot>\r\n                                </h5>\r\n                                <button type=\"button\"\r\n                                        v-if=\"!hideHeaderClose\"\r\n                                        class=\"close\"\r\n                                        :aria-label=\"closeTitle\"\r\n                                        @click=\"hide\"\r\n                                >\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </slot>\r\n                        </header>\r\n\r\n                        <div class=\"modal-body\" ref=\"body\" :id=\"id ? (id + '_modal_body') : null\">\r\n                            <slot></slot>\r\n                        </div>\r\n\r\n                        <footer class=\"modal-footer\" ref=\"footer\" v-if=\"!hideFooter\">\r\n                            <slot name=\"modal-footer\">\r\n                                <b-btn variant=\"secondary\" @click=\"hide(false)\">{{closeTitle}}</b-btn>\r\n                                <b-btn variant=\"primary\" @click=\"hide(true)\">{{okTitle}}</b-btn>\r\n                            </slot>\r\n                        </footer>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div key=\"modal-backdrop\"\r\n                 :class=\"['modal-backdrop',{fade: fade, show: is_visible}]\"\r\n                 v-if=\"is_visible\"\r\n            ></div>\r\n        </transition-group>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n    .hidden {\r\n        opacity: 0 !important;\r\n    }\r\n\r\n    /* Make modal display as block instead of inline style, and because Vue's v-show deletes inline \"display\" style */\r\n    .modal {\r\n        display: block;\r\n    }\r\n</style>\r\n\r\n<script>\r\n    import bBtn from './button.vue';\r\n\r\n    const FOCUS_SELECTOR = [\r\n        'button:not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'input:not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'select:not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'textarea:not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'a:not([disabled]):not(.disabled):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        '[tabindex]:not([disabled]):not(.disabled):not([style*=\"display: none\"]):not([style*=\"display:none\"])'\r\n    ].join(',');\r\n\r\n    export default {\r\n        components: {bBtn},\r\n        data() {\r\n            return {\r\n                is_visible: false,\r\n                return_focus: this.returnFocus || null\r\n            };\r\n        },\r\n        model: {\r\n            prop: 'visible',\r\n            event: 'change'\r\n        },\r\n        computed: {\r\n            body() {\r\n                if (typeof document !== 'undefined') {\r\n                    return document.querySelector('body');\r\n                }\r\n            }\r\n        },\r\n        watch: {\r\n            visible(new_val, old_val) {\r\n                if (new_val === old_val) {\r\n                    return;\r\n                }\r\n\r\n                if (new_val) {\r\n                    this.show();\r\n                } else {\r\n                    this.hide();\r\n                }\r\n            }\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: 'md'\r\n            },\r\n            fade: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            closeTitle: {\r\n                type: String,\r\n                default: 'Close'\r\n            },\r\n            okTitle: {\r\n                type: String,\r\n                default: 'OK'\r\n            },\r\n            closeOnBackdrop: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            closeOnEsc: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            hideHeader: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            hideFooter: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            hideHeaderClose: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            returnFocus: {\r\n                default: null\r\n            }\r\n        },\r\n        methods: {\r\n            show() {\r\n                if (this.is_visible) {\r\n                    return;\r\n                }\r\n                this.is_visible = true;\r\n                this.$root.$emit('shown::modal', this.id);\r\n                this.body.classList.add('modal-open');\r\n                this.$emit('shown');\r\n                this.$emit('change', true);\r\n                if (typeof document !== 'undefined') {\r\n                    // Guard against infinite focus loop\r\n                    document.removeEventListener('focusin', this.enforceFocus, false);\r\n                    // Handle constrained focus\r\n                    document.addEventListener('focusin', this.enforceFocus, false);\r\n                }\r\n            },\r\n            hide(isOK) {\r\n                if (!this.is_visible) {\r\n                    return;\r\n                }\r\n\r\n                // Create event object\r\n                let canceled = false;\r\n                const e = {\r\n                    isOK,\r\n                    cancel() {\r\n                        canceled = true;\r\n                    }\r\n                };\r\n\r\n                // Emit events\r\n                this.$emit('change', false);\r\n                this.$emit('hidden', e);\r\n\r\n                if (isOK === true) {\r\n                    this.$emit('ok', e);\r\n                } else if (isOK === false) {\r\n                    this.$emit('cancel', e);\r\n                }\r\n\r\n                // Hide if not canceled\r\n                if (!canceled) {\r\n                    if (typeof document !== 'undefined') {\r\n                        // Remove focus handler\r\n                        document.removeEventListener('focusin', this.enforceFocus, false);\r\n                        // Return focus to original button/trigger element if provided\r\n                        this.returnFocusTo();\r\n                    }\r\n                    this.is_visible = false;\r\n                    this.$root.$emit('hidden::modal', this.id);\r\n                    this.body.classList.remove('modal-open');\r\n                }\r\n            },\r\n            onClickOut() {\r\n                // If backdrop clicked, hide modal\r\n                if (this.closeOnBackdrop) {\r\n                    this.hide();\r\n                }\r\n            },\r\n            onEsc() {\r\n                // If ESC pressed, hide modal\r\n                if (this.is_visible && this.closeOnEsc) {\r\n                    this.hide();\r\n                }\r\n            },\r\n            focusFirst() {\r\n                // Focus the modal's first focusable item, searching footer, then body, then header, else the modal\r\n                let el;\r\n                if (this.$refs.footer) {\r\n                    el = this.$refs.footer.querySelector(FOCUS_SELECTOR);\r\n                }\r\n                if (!el && this.$refs.body) {\r\n                    el = this.$refs.body.querySelector(FOCUS_SELECTOR);\r\n                }\r\n                if (!el && this.$refs.header) {\r\n                    el = this.$refs.header.querySelector(FOCUS_SELECTOR);\r\n                }\r\n                if (!el) {\r\n                    el = this.$refs.content;\r\n                }\r\n                if (el && el.focus) {\r\n                    el.focus();\r\n                }\r\n            },\r\n            returnFocusTo() {\r\n                if (this.return_focus) {\r\n                    const el = (typeof this.return_focus === 'string') ?\r\n                        document.querySelector(this.returnFocus) :\r\n                        this.return_focus;\r\n\r\n                    if (el && el.$el && typeof el.$el.focus === 'function') {\r\n                        el.$el.focus();\r\n                    } else if (el && typeof el.focus === 'function') {\r\n                        el.focus();\r\n                    }\r\n                }\r\n            },\r\n            enforceFocus(e) {\r\n                // If focus leaves modal, bring it back\r\n                // Event Listener bound on document\r\n                if (this.is_visible &&\r\n                    document !== e.target &&\r\n                    this.$refs.content &&\r\n                    this.$refs.content !== e.target &&\r\n                    !this.$refs.content.contains(e.target)) {\r\n                    this.$refs.content.focus();\r\n                }\r\n            }\r\n        },\r\n        created() {\r\n            this.$root.$on('show::modal', (id, triggerEl) => {\r\n                if (id === this.id) {\r\n                    this.return_focus = triggerEl || this.return_focus || this.returnFocus || null;\r\n                    this.show();\r\n                }\r\n            });\r\n\r\n            this.$root.$on('hide::modal', id => {\r\n                if (id === this.id) {\r\n                    this.hide();\r\n                }\r\n            });\r\n        },\r\n        mounted() {\r\n            if (this.visible === true) {\r\n                this.show();\r\n            }\r\n        },\r\n        destroyed() {\r\n            // Make sure event listener is rmoved\r\n            if (typeof document !== 'undefined') {\r\n                document.removeEventListener('focusin', this.enforceFocus, false);\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\n    <component :is=\"type\" :class=\"classObject\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n\nexport default {\n    computed: {\n        classObject() {\n            return {\n                nav: true,\n                'navbar-nav': this.isNavBar,\n                'nav-tabs': this.tabs,\n                'nav-pills': this.pills,\n                'flex-column': this.vertical,\n                'nav-fill': this.fill\n            };\n        }\n    },\n    props: {\n        type: {\n            type: String,\n            default: 'ul'\n        },\n        fill: {\n            type: Boolean,\n            default: false\n        },\n        tabs: {\n            type: Boolean,\n            default: false\n        },\n        pills: {\n            type: Boolean,\n            default: false\n        },\n        vertical: {\n            type: Boolean,\n            default: false\n        },\n        isNavBar: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\r\n    <li class=\"nav-item\" @click=\"onclick\">\r\n        <b-link :class=\"classObject\"\r\n                :to=\"to\"\r\n                :href=\"href\"\r\n                :exact=\"exact\"\r\n                :disabled=\"disabled\"\r\n        >\r\n            <slot></slot>\r\n        </b-link>\r\n    </li>\r\n</template>\r\n\r\n<script>\r\n    import bLink from './link.vue';\r\n\r\n    export default {\r\n        components: {bLink},\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'nav-link',\r\n                    this.active ? 'active' : '',\r\n                    this.disabled ? 'disabled' : ''\r\n                ];\r\n            }\r\n        },\r\n        props: {\r\n            active: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            to: {\r\n                type: [String, Object]\r\n            },\r\n            href: {\r\n                type: String\r\n            },\r\n            exact: {\r\n                type: Boolean\r\n            }\r\n        },\r\n        methods: {\r\n            onclick(e) {\r\n                // Hide all drop-downs including navbar-toggle\r\n                this.$root.$emit('shown::dropdown', this);\r\n                this.$emit('click', e);\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <li :class=\"['nav-item','dropdown', {dropup, show: visible}]\">\r\n\r\n        <a :class=\"['nav-link', dropdownToggle, {disabled}]\"\r\n           href=\"#\"\r\n           ref=\"button\"\r\n           aria-haspopup=\"true\"\r\n           :aria-expanded=\"visible\"\r\n           :disabled=\"disabled\"\r\n           @click.stop.prevent=\"toggle($event)\"\r\n           @keydown.enter.stop.prevent=\"toggle($event)\"\r\n           @keydown.space.stop.prevent=\"toggle($event)\"\r\n        >\r\n            <slot name=\"text\"><span v-html=\"text\"></span></slot>\r\n        </a>\r\n\r\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\r\n             role=\"menu\"\r\n             ref=\"menu\"\r\n             :aria-labelledby=\"'b_dropdown_button_' + _uid\"\r\n             @keyup.esc=\"onEsc\"\r\n             @keydown.tab=\"onTab\"\r\n             @keydown.up=\"focusNext($event,true)\"\r\n             @keydown.down=\"focusNext($event,false)\"\r\n        >\r\n            <slot></slot>\r\n        </div>\r\n\r\n    </li>\r\n</template>\r\n\r\n<script>\r\n    import clickOut from '../mixins/clickout';\r\n    import dropdown from '../mixins/dropdown';\r\n\r\n    export default {\r\n        mixins: [\r\n            clickOut,\r\n            dropdown\r\n        ],\r\n        data() {\r\n            return {\r\n                visible: false\r\n            };\r\n        },\r\n        computed: {\r\n            dropdownToggle() {\r\n                return this.caret ? 'dropdown-toggle' : '';\r\n            }\r\n        },\r\n        props: {\r\n            caret: {\r\n                type: Boolean,\r\n                default: true\r\n            }\r\n        },\r\n        methods: {\r\n            clickOutListener() {\r\n                this.visible = false;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\n    <button :class=\"classObject\"\n            type=\"button\"\n            :aria-label=\"label\"\n            @click=\"onclick\"\n    >\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n</template>\n\n<script>\n\nexport default {\n    computed: {\n        classObject() {\n            return [\n                'navbar-toggler',\n                'navbar-toggler-' + this.position\n            ];\n        }\n    },\n\n    props: {\n        label: {\n            type: String,\n            default: 'Toggle navigation'\n        },\n        position: {\n            type: String,\n            default: 'right'\n        },\n        target: {\n            required: true\n        }\n    },\n\n    methods: {\n        onclick() {\n            const target = this.target;\n            if (target.toggle) {\n                target.toggle();\n            }\n            this.$root.$emit('collapse::toggle', this.target);\n        }\n    }\n};\n</script>\n","<template>\n    <nav :class=\"classObject\">\n        <slot></slot>\n    </nav>\n</template>\n\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'navbar',\n                    this.type ? `navbar-${this.type}` : null,\n                    this.variant ? `bg-${this.variant}` : null,\n                    this.fixed ? `fixed-${this.fixed}` : null,\n                    this.sticky ? 'sticky-top' : null,\n                    this.toggleable ? `navbar-toggleable-${this.toggleBreakpoint}` : null\n                ];\n            }\n        },\n        props: {\n            type: {\n                type: String,\n                default: 'light'\n            },\n            variant: {\n                type: String\n            },\n            toggleable: {\n                type: Boolean,\n                default: false\n            },\n            toggleBreakpoint: {\n                type: String,\n                default: 'sm'\n            },\n            fixed: {\n                type: String\n            },\n            sticky: {\n                type: String\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"btn-group pagination\" role=\"group\" aria-label=\"Pagination\">\n\n        <button type=\"button\"\n                :class=\"['btn','btn-'+secondaryVariant,btnSize]\"\n                :disabled=\"currentPage == 1 \"\n                @click.prevent=\"(currentPage == 1) ? _return : currentPage--\">\n            <span aria-hidden=\"true\">&laquo;</span>\n        </button>\n\n        <button type=\"button\"\n                :class=\"['btn','btn-'+secondaryVariant,btnSize,currentPage === 1 ?  'active' : '']\"\n                @click.prevent=\"currentPage = 1\"\n                v-show=\"showPrev\">1\n        </button>\n\n        <span :class=\"['btn','btn-'+secondaryVariant,btnSize]\" v-show=\"showPrev\">...</span>\n\n        <button type=\"button\"\n                :class=\"['btn',\n                btnSize,\n                btnVariant(index),\n                index + diff === currentPage ? 'active' : '',\n                index + diff !== currentPage ? 'hidden-xs-down' : '']\"\n                v-for=\"_,index in pageLinks\"\n                @click.prevent=\"currentPage = index + diff\">{{index + diff}}\n        </button>\n\n        <span :class=\"['btn','btn-'+secondaryVariant,btnSize]\" v-show=\"showNext\">...</span>\n\n        <button type=\"button\"\n                :class=\"['btn','btn-'+secondaryVariant,btnSize,numberOfPages === currentPage ? 'active' : '']\"\n                v-show=\"showNext\"\n                @click.prevent=\"currentPage = numberOfPages\">{{numberOfPages}}\n        </button>\n\n        <button type=\"button\"\n                :class=\"['btn','btn-'+secondaryVariant,btnSize]\"\n                :disabled=\"currentPage == numberOfPages\"\n                @click.prevent=\"(currentPage == numberOfPages) ? _return : currentPage++\">\n            <span aria-hidden=\"true\">&raquo;</span>\n        </button>\n\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                diff: 1,\n                showPrev: false,\n                showNext: false,\n                currentPage: this.value\n            };\n        },\n        computed: {\n            numberOfPages() {\n                const result = Math.ceil(this.totalRows / this.perPage);\n                return (result < 1) ? 1 : result;\n            },\n            btnSize() {\n                return !this.size || this.size === `default` ? `` : `btn-${this.size}`;\n            },\n            pageLinks() {\n                if (this.currentPage > this.numberOfPages) {\n                    this.currentPage = 1;\n                }\n\n                // Defaults\n                this.diff = 1;\n                this.showPrev = false;\n                this.showNext = false;\n\n                // If less pages than limit just show this pages\n                if (this.numberOfPages <= this.limit) {\n                    return this.numberOfPages;\n                }\n\n                // If at the beginning of the list\n                if (this.currentPage <= this.limit - 2) {\n                    this.diff = 1;\n                    this.showNext = true;\n                    return this.limit - 2;\n                }\n\n                // If at the end of the list\n                if (this.currentPage > this.numberOfPages - this.limit + 2) {\n                    this.diff = this.numberOfPages - this.limit + 3;\n                    this.showPrev = true;\n                    return this.limit - 2;\n                }\n\n                // Else we are somewhere in the middle\n                this.diff = this.currentPage - 1;\n                this.showPrev = this.currentPage >= this.limit;\n                this.showNext = this.currentPage <= this.numberOfPages - this.limit + 1;\n                return this.limit;\n            }\n        },\n        methods: {\n            btnVariant(index) {\n                return (index + this.diff === this.currentPage) ? `btn-${this.variant}` : `btn-${this.secondaryVariant}`;\n            },\n            _return() {\n\n            }\n        },\n        watch: {\n            currentPage(newPage, oldPage) {\n                if (newPage === oldPage) {\n                    return;\n                }\n\n                this.$emit('input', newPage);\n            },\n            value(newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    this.currentPage = newValue;\n                }\n            }\n        },\n        props: {\n            value: {\n                type: Number,\n                default: 1\n            },\n            limit: {\n                type: Number,\n                default: 3\n            },\n            perPage: {\n                type: Number,\n                default: 20\n            },\n            totalRows: {\n                type: Number,\n                default: 20\n            },\n            size: {\n                type: String,\n                default: 'md'\n            },\n            variant: {\n                type: String,\n                default: 'primary'\n            },\n            secondaryVariant: {\n                type: String,\n                default: 'secondary'\n            }\n        }\n    };\n\n</script>\n","<template>\r\n    <div>\r\n        <span ref=\"trigger\"><slot></slot></span>\r\n\r\n        <div tabindex=\"-1\"\r\n             class=\"popover fade\"\r\n             :class=\"[classState ? 'show' : '', popoverAlignment]\"\r\n             ref=\"popover\"\r\n             @focus=\"$emit('focus')\"\r\n             @blur=\"$emit('blur')\"\r\n             :style=\"popoverStyle\"\r\n        >\r\n            <div class=\"popover-arrow\"></div>\r\n            <h3 class=\"popover-title\" v-if=\"title\" v-html=\"title\"></h3>\r\n            <div class=\"popover-content\">\r\n                <div class=\"popover-content-wrapper\">\r\n                    <slot name=\"content\"><span v-html=\"content\"></span></slot>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Tether from 'tether';\r\n\r\n    // Controls which events are mapped for each named trigger, and the expected popover behavior for each.\r\n    const TRIGGER_LISTENERS = {\r\n        click: {click: 'toggle'},\r\n        hover: {mouseenter: 'show', mouseleave: 'hide'},\r\n        focus: {focus: 'show', blur: 'hide'}\r\n    };\r\n\r\n    const PLACEMENT_PARAMS = {\r\n        top: 'bottom center',\r\n        bottom: 'top center',\r\n        left: 'middle right',\r\n        right: 'middle left'\r\n    };\r\n\r\n    const TETHER_CLASS_PREFIX = 'bs-tether';\r\n\r\n    const TETHER_CLASSES = {\r\n        element: false,\r\n        enabled: false\r\n    };\r\n\r\n    const TRANSITION_DURATION = 150;\r\n\r\n    export default {\r\n        props: {\r\n            constraints: {\r\n                type: Array,\r\n                default() {\r\n                    return [];\r\n                }\r\n            },\r\n            content: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            debounce: {\r\n                type: [Number],\r\n                default: 300,\r\n                validator(value) {\r\n                    return value >= 0;\r\n                }\r\n            },\r\n            delay: {\r\n                type: [Number, Object],\r\n                default: 0,\r\n                validator(value) {\r\n                    if (typeof value === 'number') {\r\n                        return value >= 0;\r\n                    } else if (value !== null && typeof value === 'object') {\r\n                        return typeof value.show === 'number' &&\r\n                            typeof value.hide === 'number' &&\r\n                            value.show >= 0 &&\r\n                            value.hide >= 0;\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            },\r\n            offset: {\r\n                type: String,\r\n                default: '0 0',\r\n                validator(value) {\r\n                    // Regex test for a pair of units, either 0 exactly, px, or percentage\r\n                    return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\r\n                }\r\n            },\r\n            placement: {\r\n                type: String,\r\n                default: 'top',\r\n                validator(value) {\r\n                    return Object.keys(PLACEMENT_PARAMS).indexOf(value) !== -1;\r\n                }\r\n            },\r\n            popoverStyle: {\r\n                type: Object,\r\n                default: null\r\n            },\r\n            show: {\r\n                type: Boolean,\r\n                default: null\r\n            },\r\n            targetOffset: {\r\n                type: String,\r\n                default: '0 0',\r\n                validator(value) {\r\n                    // Regex test for a pair of units, either 0 exactly, px, or percentage\r\n                    return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\r\n                }\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            triggers: {\r\n                type: [Boolean, String, Array],\r\n                default: () => ['click', 'focus'],\r\n                validator(value) {\r\n                    // Allow falsy value to disable all event triggers (equivalent to 'manual') in Bootstrap 4\r\n                    if (value === false || value === '') {\r\n                        return true;\r\n                    } else if (typeof value === 'string') {\r\n                        return Object.keys(TRIGGER_LISTENERS).indexOf(value) !== -1;\r\n                    } else if (Array.isArray(value)) {\r\n                        const keys = Object.keys(TRIGGER_LISTENERS);\r\n                        value.forEach(item => {\r\n                            if (keys.indexOf(item) === -1) {\r\n                                return false;\r\n                            }\r\n                        });\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }\r\n            }\r\n        },\r\n\r\n        data() {\r\n            return {\r\n                triggerState: this.show,\r\n                classState: this.show,\r\n                lastEvent: null\r\n            };\r\n        },\r\n\r\n        computed: {\r\n            /**\r\n             * Arrange event trigger hooks as array for all input types.\r\n             *\r\n             * @return Array\r\n             */\r\n            normalizedTriggers() {\r\n                if (this.triggers === false) {\r\n                    return [];\r\n                } else if (typeof this.triggers === 'string') {\r\n                    return [this.triggers];\r\n                }\r\n                return this.triggers;\r\n            },\r\n\r\n            /**\r\n             * Class property to be used for Popover rendering\r\n             *\r\n             * @return String\r\n             */\r\n            popoverAlignment() {\r\n                return !this.placement || this.placement === `default` ? `popover-top` : `popover-${this.placement}`;\r\n            },\r\n\r\n            /**\r\n             * Determine if the Popover should be shown.\r\n             *\r\n             * @return Boolean\r\n             */\r\n            showState() {\r\n                return this.show !== false && (this.triggerState || this.show);\r\n            }\r\n        },\r\n\r\n        watch: {\r\n            /**\r\n             * Refresh Tether display properties\r\n             */\r\n            constraints() {\r\n                this.setOptions();\r\n            },\r\n\r\n            /**\r\n             * Refresh Popover event triggers\r\n             * @param {Array} newTriggers\r\n             * @param {Array} oldTriggers\r\n             */\r\n            normalizedTriggers(newTriggers, oldTriggers) {\r\n                this.updateListeners(newTriggers, oldTriggers);\r\n            },\r\n\r\n            /**\r\n             * Refresh Tether display properties\r\n             */\r\n            offset() {\r\n                this.setOptions();\r\n            },\r\n\r\n            /**\r\n             * Refresh Tether display properties\r\n             */\r\n            placement() {\r\n                this.setOptions();\r\n            },\r\n\r\n            /**\r\n             * Affect 'show' state in response to status change\r\n             * @param  {Boolean} val\r\n             */\r\n            showState(val) {\r\n                const delay = this.getDelay(val);\r\n\r\n                clearTimeout(this._timeout);\r\n\r\n                if (delay) {\r\n                    this._timeout = setTimeout(() => this.togglePopover(val), delay);\r\n                } else {\r\n                    this.togglePopover(val);\r\n                }\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            /**\r\n             * Add all event hooks for the given trigger\r\n             * @param {String} trigger\r\n             */\r\n            addListener(trigger) {\r\n                // eslint-disable-next-line guard-for-in\r\n                for (const item in TRIGGER_LISTENERS[trigger]) {\r\n                    this._trigger.addEventListener(item, e => this.eventHandler(e));\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Tidy removal of Tether object from the DOM\r\n             */\r\n            destroyTether() {\r\n                if (this._tether && !this.showState) {\r\n                    this._tether.destroy();\r\n                    this._tether = null;\r\n\r\n                    const regx = new RegExp('(^|[^-]\\\\b)(' + TETHER_CLASS_PREFIX + '\\\\S*)', 'g');\r\n                    this._trigger.className = this._trigger.className.replace(regx, '');\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Handle multiple event triggers\r\n             * @param  {Object} e\r\n             */\r\n            eventHandler(e) {\r\n                // If this event is right after a previous successful event, ignore it (debounce)\r\n                if (this.normalizedTriggers.length > 1 && this.debounce > 0 && this.lastEvent !== null && e.timeStamp <= this.lastEvent + this.debounce) {\r\n                    return;\r\n                }\r\n\r\n                // Look up the expected popover action for the event\r\n                // eslint-disable-next-line guard-for-in\r\n                for (const trigger in TRIGGER_LISTENERS) {\r\n                    for (const event in TRIGGER_LISTENERS[trigger]) {\r\n                        if (event === e.type) {\r\n                            const action = TRIGGER_LISTENERS[trigger][event];\r\n\r\n                            // If the expected event action is the opposite of the current state, allow it\r\n                            if (action === 'toggle' || (this.triggerState && action === 'hide') || (!this.triggerState && action === 'show')) {\r\n                                this.triggerState = !this.triggerState;\r\n                                this.lastEvent = e.timeStamp;\r\n                            }\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Get the currently applicable popover delay\r\n             *\r\n             * @returns Number\r\n             */\r\n            getDelay(state) {\r\n                if (typeof this.delay === 'object') {\r\n                    return state ? this.delay.show : this.delay.hide;\r\n                }\r\n\r\n                return this.delay;\r\n            },\r\n\r\n            /**\r\n             * Tether construct params for each show event.\r\n             *\r\n             * @return Object\r\n             */\r\n            getTetherOptions() {\r\n                return {\r\n                    attachment: PLACEMENT_PARAMS[this.placement],\r\n                    element: this._popover,\r\n                    target: this._trigger,\r\n                    classes: TETHER_CLASSES,\r\n                    classPrefix: TETHER_CLASS_PREFIX,\r\n                    offset: this.offset,\r\n                    constraints: this.constraints,\r\n                    targetOffset: this.targetOffset\r\n                };\r\n            },\r\n\r\n            /**\r\n             * Hide popover and fire event\r\n             */\r\n            hidePopover() {\r\n                this.classState = false;\r\n                clearTimeout(this._timeout);\r\n                this._timeout = setTimeout(() => {\r\n                    this._popover.style.display = 'none';\r\n                    this.destroyTether();\r\n                }, TRANSITION_DURATION);\r\n            },\r\n\r\n            /**\r\n             * Refresh the Popover position in order to respond to changes\r\n             */\r\n            refreshPosition() {\r\n                if (this._tether) {\r\n                    this.$nextTick(() => {\r\n                        this._tether.position();\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Remove all event hooks for the given trigger\r\n             * @param {String} trigger\r\n             */\r\n            removeListener(trigger) {\r\n                // eslint-disable-next-line guard-for-in\r\n                for (const item in TRIGGER_LISTENERS[trigger]) {\r\n                    this._trigger.removeEventListener(item, e => this.eventHandler(e));\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Update tether options\r\n             */\r\n            setOptions() {\r\n                if (this._tether) {\r\n                    this._tether.setOptions(this.getTetherOptions());\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Display popover and fire event\r\n             */\r\n            showPopover() {\r\n                clearTimeout(this._timeout);\r\n\r\n                if (!this._tether) {\r\n                    this._tether = new Tether(this.getTetherOptions());\r\n                }\r\n                this._popover.style.display = 'block';\r\n\r\n                // Make sure the popup is rendered in the correct location\r\n                this.refreshPosition();\r\n\r\n                this.$nextTick(() => {\r\n                    this.classState = true;\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Handle Popover show or hide instruction\r\n             */\r\n            togglePopover(newShowState) {\r\n                this.$emit('showChange', newShowState);\r\n                if (newShowState) {\r\n                    this.showPopover();\r\n                    this.$root.$emit('shown::popover');\r\n                } else {\r\n                    this.hidePopover();\r\n                    this.$root.$emit('hidden::popover');\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Study the 'triggers' component property and apply all selected triggers\r\n             * @param {Array} triggers\r\n             * @param {Array} appliedTriggers\r\n             */\r\n            updateListeners(triggers, appliedTriggers = []) {\r\n                const newTriggers = [];\r\n                const removeTriggers = [];\r\n\r\n                // Look for new events not yet mapped (all of them on first load)\r\n                triggers.forEach(item => {\r\n                    if (appliedTriggers.indexOf(item) === -1) {\r\n                        newTriggers.push(item);\r\n                    }\r\n                });\r\n\r\n                // Disable any removed event triggers\r\n                appliedTriggers.forEach(item => {\r\n                    if (triggers.indexOf(item) === -1) {\r\n                        removeTriggers.push(item);\r\n                    }\r\n                });\r\n\r\n                // Apply trigger mapping changes\r\n                newTriggers.forEach(item => this.addListener(item));\r\n                removeTriggers.forEach(item => this.removeListener(item));\r\n            }\r\n        },\r\n\r\n        created() {\r\n            this.$root.$on('hide::popover', () => {\r\n                this.triggerState = false;\r\n            });\r\n        },\r\n\r\n        mounted() {\r\n            // Configure tether\r\n            this._trigger = this.$refs.trigger.children[0] || this.$refs.trigger;\r\n            this._popover = this.$refs.popover;\r\n            this._popover.style.display = 'none';\r\n            this._timeout = 0;\r\n\r\n            // Add listeners for specified triggers and complementary click event\r\n            this.updateListeners(this.normalizedTriggers);\r\n\r\n            // Display popover if prop is set on load\r\n            if (this.showState) {\r\n                this.showPopover();\r\n            }\r\n        },\r\n\r\n        updated() {\r\n            this.refreshPosition();\r\n        },\r\n\r\n        beforeDestroy() {\r\n            this.normalizedTriggers.forEach(item => this.removeListener(item));\r\n            clearTimeout(this._timeout);\r\n            this.destroyTether();\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\n    <div class=\"progress\">\n        <transition>\n            <div role=\"progressbar\"\n                 :class=\"classObject\"\n                 :aria-valuenow=\"value\"\n                 :aria-valuemin=\"0\"\n                 :aria-valuemax=\"max\"\n                 :style=\"styleObject\"\n            >\n                <slot>\n                    <template v-if=\"showProgress\">{{progress}}%</template>\n                    <template v-else-if=\"showValue\">{{value}}</template>\n                </slot>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<style>\n    .progress-bar {\n        transition: all .5s;\n    }\n</style>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'progress-bar',\n                    this.progressVariant,\n                    (this.striped || this.animated) ? 'progress-bar-striped' : '',\n                    this.animated ? 'progress-bar-animated' : ''\n                ];\n            },\n            styleObject() {\n                return {\n                    width: this.progress + '%'\n                };\n            },\n            progressVariant() {\n                return this.variant ? `bg-${this.variant}` : null;\n            },\n            progress() {\n                const p = Math.pow(10, this.precision);\n                return Math.round((100 * p * this.value) / this.max) / p;\n            }\n        },\n        props: {\n            striped: {\n                type: Boolean,\n                default: false\n            },\n            animated: {\n                type: Boolean,\n                default: false\n            },\n            precision: {\n                type: Number,\n                default: 0\n            },\n            value: {\n                type: Number,\n                default: 0\n            },\n            max: {\n                type: Number,\n                default: 100\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            showProgress: {\n                type: Boolean,\n                default: false\n            },\n            showValue: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\r\n    <table :class=\"['table',striped?'table-striped':'',hover?'table-hover':'']\">\r\n        <thead>\r\n        <tr>\r\n            <th @click=\"headClick(field,key)\"\r\n                :class=\"[field.sortable?'sorting':null,sortBy===key?'sorting_'+(sortDesc?'desc':'asc'):'',field.class?field.class:null]\"\r\n                v-for=\"field,key in fields\"\r\n                v-html=\"field.label\"\r\n            ></th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr v-for=\"(item,index) in _items\" :key=\"items_key\" :class=\"[item.state?'table-'+item.state:null]\" @click=\"rowClicked(item, index)\">\r\n            <td v-for=\"(field,key) in fields\" :class=\"[field.class?field.class:null]\">\r\n                <slot :name=\"key\" :value=\"item[key]\" :item=\"item\" :index=\"index\">{{item[key]}}</slot>\r\n            </td>\r\n        </tr>\r\n        </tbody>\r\n    </table>\r\n</template>\r\n\r\n<script>\r\n    import bPagination from './pagination.vue';\r\n\r\n    const toString = v => {\r\n        if (!v) {\r\n            return '';\r\n        }\r\n\r\n        if (v instanceof Object) {\r\n            return Object.keys(v).map(k => toString(v[k])).join(' ');\r\n        }\r\n\r\n        return String(v);\r\n    };\r\n\r\n    const defaultSortCompare = (a, b, sortBy) => {\r\n        return toString(a[sortBy]).localeCompare(toString(b[sortBy]), undefined, {numeric: true});\r\n    };\r\n\r\n    export default {\r\n        components: {bPagination},\r\n        data() {\r\n            return {\r\n                sortBy: null,\r\n                sortDesc: true\r\n            };\r\n        },\r\n        props: {\r\n            items: {\r\n                type: Array,\r\n                default: () => []\r\n            },\r\n            fields: {\r\n                type: Object,\r\n                default: () => {\r\n                }\r\n            },\r\n            striped: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            hover: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            perPage: {\r\n                type: Number,\r\n                default: null\r\n            },\r\n            items_key: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            currentPage: {\r\n                type: Number,\r\n                default: 1\r\n            },\r\n            filter: {\r\n                type: [String, RegExp, Function],\r\n                default: null\r\n            },\r\n            sortCompare: {\r\n                type: Function,\r\n                default: null\r\n            },\r\n            itemsProvider: {\r\n                type: Function,\r\n                default: null\r\n            },\r\n            value: {\r\n                type: Array,\r\n                default: () => []\r\n            }\r\n        },\r\n\r\n        computed: {\r\n            _items() {\r\n                if (!this.items) {\r\n                    return [];\r\n                }\r\n\r\n                if (this.itemsProvider) {\r\n                    return this.itemsProvider(this);\r\n                }\r\n\r\n                let items = this.items.slice();\r\n\r\n                // Apply filter\r\n                if (this.filter) {\r\n                    if (this.filter instanceof Function) {\r\n                        items = items.filter(this.filter);\r\n                    } else {\r\n                        let regex;\r\n                        if (this.filter instanceof RegExp) {\r\n                            regex = this.filter;\r\n                        } else {\r\n                            regex = new RegExp('.*' + this.filter + '.*', 'ig');\r\n                        }\r\n                        items = items.filter(item => {\r\n                            const test = regex.test(toString(item));\r\n                            regex.lastIndex = 0;\r\n                            return test;\r\n                        });\r\n                    }\r\n                }\r\n\r\n                // Apply Sort\r\n                const sortCompare = this.sortCompare || defaultSortCompare;\r\n                if (this.sortBy) {\r\n                    items = items.sort((a, b) => {\r\n                        const r = sortCompare(a, b, this.sortBy);\r\n                        return this.sortDesc ? r : r * -1;\r\n                    });\r\n                }\r\n\r\n                this.$emit('input', items);\r\n\r\n                // Apply pagination\r\n                if (this.perPage) {\r\n                    items = items.slice((this.currentPage - 1) * this.perPage, this.currentPage * this.perPage);\r\n                }\r\n                return items;\r\n            }\r\n        },\r\n        methods: {\r\n            rowClicked(item, index) {\r\n                this.$emit('row-clicked', item, index);\r\n            },\r\n            headClick(field, key) {\r\n                if (!field.sortable) {\r\n                    this.sortBy = null;\r\n                    return;\r\n                }\r\n\r\n                if (key === this.sortBy) {\r\n                    this.sortDesc = !this.sortDesc;\r\n                }\r\n\r\n                this.sortBy = key;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\r\n\r\n<style>\r\n    /* https://cdn.datatables.net/1.10.13/css/dataTables.bootstrap4.css */\r\n\r\n    table thead > tr > th.sorting_asc, table thead > tr > th.sorting_desc, table thead > tr > th.sorting,\r\n    table thead > tr > td.sorting_asc,\r\n    table thead > tr > td.sorting_desc,\r\n    table thead > tr > td.sorting {\r\n        padding-right: 30px;\r\n    }\r\n\r\n    table thead > tr > th:active,\r\n    table thead > tr > td:active {\r\n        outline: none;\r\n    }\r\n\r\n    table thead .sorting,\r\n    table thead .sorting_asc,\r\n    table thead .sorting_desc,\r\n    table thead .sorting_asc_disabled,\r\n    table thead .sorting_desc_disabled {\r\n        cursor: pointer;\r\n        position: relative;\r\n    }\r\n\r\n    table thead .sorting:before, table thead .sorting:after,\r\n    table thead .sorting_asc:before,\r\n    table thead .sorting_asc:after,\r\n    table thead .sorting_desc:before,\r\n    table thead .sorting_desc:after,\r\n    table thead .sorting_asc_disabled:before,\r\n    table thead .sorting_asc_disabled:after,\r\n    table thead .sorting_desc_disabled:before,\r\n    table thead .sorting_desc_disabled:after {\r\n        position: absolute;\r\n        bottom: 0.9em;\r\n        display: block;\r\n        opacity: 0.3;\r\n    }\r\n\r\n    table thead .sorting:before,\r\n    table thead .sorting_asc:before,\r\n    table thead .sorting_desc:before,\r\n    table thead .sorting_asc_disabled:before,\r\n    table thead .sorting_desc_disabled:before {\r\n        right: 1em;\r\n        content: \"\\2191\";\r\n    }\r\n\r\n    table thead .sorting:after,\r\n    table thead .sorting_asc:after,\r\n    table thead .sorting_desc:after,\r\n    table thead .sorting_asc_disabled:after,\r\n    table thead .sorting_desc_disabled:after {\r\n        right: 0.5em;\r\n        content: \"\\2193\";\r\n    }\r\n\r\n    table thead .sorting_asc:before,\r\n    table thead .sorting_desc:after {\r\n        opacity: 1;\r\n    }\r\n\r\n    table thead .sorting_asc_disabled:before,\r\n    table thead .sorting_desc_disabled:after {\r\n        opacity: 0;\r\n    }\r\n</style>\r\n","<template>\r\n    <div class=\"tabs\">\r\n        <div v-if=\"bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\r\n            <slot></slot>\r\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\r\n        </div>\r\n\r\n        <div :class=\"{'card-header': card}\">\r\n            <ul :class=\"['nav','nav-' + navStyle, card ? 'card-header-'+navStyle : null]\"\r\n                role=\"tablist\"\r\n                tabindex=\"0\"\r\n                :aria-setsize=\"tabs.length\"\r\n                :aria-posinset=\"currentTab + 1\"\r\n                @keydown.left=\"prevTab\"\r\n                @keydown.up=\"prevTab\"\r\n                @keydown.right=\"nextTab\"\r\n                @keydown.down=\"nextTab\"\r\n                @keydown.shift.left=\"setTab(-1,false,1)\"\r\n                @keydown.shift.up=\"setTab(-1,false,1)\"\r\n                @keydown.shift.right=\"setTab(tabs.length,false,-1)\"\r\n                @keydown.shift.down=\"setTab(tabs.length,false,-1)\"\r\n            >\r\n                <li class=\"nav-item\" v-for=\"(tab, index) in tabs\" role=\"presentation\">\r\n                    <a :class=\"['nav-link',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\r\n                       :href=\"tab.href\"\r\n                       :role=\"tab\"\r\n                       :aria-selected=\"tab.localActive ? 'true' : 'false'\"\r\n                       :aria-controls=\"tab.id || null\"\r\n                       :id=\"tab.controlledBy || null\"\r\n                       @click.prevent.stop=\"setTab(index)\"\r\n                       @keydown.space.prevent.stop=\"setTab(index)\"\r\n                       @keydown.enter.prevent.stop=\"setTab(index)\"\r\n                       tabindex=\"-1\"\r\n                       v-if=\"!tab.headHtml\"\r\n                       v-html=\"tab.title\"\r\n                    ></a>\r\n                    <div :class=\"['tab-head',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\r\n                         role=\"heading\"\r\n                         tabindex=\"-1\"\r\n                         v-else\r\n                         v-html=\"tab.headHtml\"></div>\r\n                </li>\r\n                <slot name=\"tabs\"></slot>\r\n            </ul>\r\n        </div>\r\n\r\n        <div v-if=\"!bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\r\n            <slot></slot>\r\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import observeDom from '../utils/observe-dom';\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                currentTab: this.value,\r\n                tabs: []\r\n            };\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            noFade: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            card: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            small: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            value: {\r\n                type: Number,\r\n                default: 0\r\n            },\r\n            pills: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            lazy: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            bottom: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        watch: {\r\n            currentTab(val, old) {\r\n                if (val === old) {\r\n                    return;\r\n                }\r\n\r\n                this.$root.$emit('changed::tab', this, val, this.tabs[val]);\r\n                this.$emit('input', val);\r\n                this.tabs[val].$emit('click');\r\n            },\r\n            value(val, old) {\r\n                if (val === old) {\r\n                    return;\r\n                }\r\n\r\n                this.setTab(val);\r\n            },\r\n            fade(val, old) {\r\n                if (val === old) {\r\n                    return;\r\n                }\r\n\r\n                this.tabs.forEach(item => {\r\n                    this.$set(item, 'fade', val);\r\n                });\r\n            }\r\n        },\r\n        computed: {\r\n            fade() {\r\n                return !this.noFade;\r\n            },\r\n            navStyle() {\r\n                return this.pills ? 'pills' : 'tabs';\r\n            }\r\n        },\r\n        methods: {\r\n            /**\r\n             * Util: Return the sign of a number (as -1, 0, or 1)\r\n             */\r\n            sign(x) {\r\n                return (x === 0) ? 0 : (x > 0 ? 1 : -1);\r\n            },\r\n\r\n            /**\r\n             * Move to next tab\r\n             */\r\n            nextTab() {\r\n                this.setTab(this.currentTab, false, 1);\r\n            },\r\n\r\n            /**\r\n             * Move to previous tab\r\n             */\r\n            previousTab() {\r\n                this.setTab(this.currentTab, false, -1);\r\n            },\r\n\r\n            /**\r\n             * Set active tab on the tabs collection and the child 'tab' component\r\n             */\r\n            setTab(index, force, offset) {\r\n                offset = offset || 0;\r\n\r\n                // Prevent setting same tab!\r\n                if (!force && (index + offset) === this.currentTab) {\r\n                    return;\r\n                }\r\n\r\n                const tab = this.tabs[index + offset];\r\n\r\n                // Don't go beyond indexes!\r\n                if (!tab) {\r\n                    return;\r\n                }\r\n\r\n                // Ignore or Skip disabled\r\n                if (tab.disabled) {\r\n                    if (offset) {\r\n                        // Skip to next non disabled tab in offset direction (recursive)\r\n                        this.setTab(index, force, offset + this.sign(offset));\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                // Deactivate previous active tab\r\n                if (this.tabs[this.currentTab]) {\r\n                    this.$set(this.tabs[this.currentTab], 'localActive', false);\r\n                }\r\n\r\n                // Set new tab as active\r\n                this.$set(tab, 'localActive', true);\r\n\r\n                // Update currentTab\r\n                this.currentTab = index + offset;\r\n            },\r\n\r\n            /**\r\n             * Dynamically update tabs\r\n             */\r\n            updateTabs() {\r\n                // Probe tabs\r\n                if (this.$slots.default) {\r\n                    this.tabs = this.$slots.default.filter(tab => tab.componentInstance || false)\r\n                        .map(tab => tab.componentInstance);\r\n                } else {\r\n                    this.tabs = [];\r\n                }\r\n\r\n                this.tabs.forEach(tab => {\r\n                    this.$set(tab, 'fade', this.fade);\r\n                    this.$set(tab, 'lazy', this.lazy);\r\n                });\r\n\r\n                // Set initial active tab\r\n                let tabIndex = this.currentTab;\r\n\r\n                if (this.currentTab === null || this.currentTab === undefined) {\r\n                    this.tabs.forEach((tab, index) => {\r\n                        if (tab.active) {\r\n                            tabIndex = index;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // Workaround to fix problem when currentTab is removed\r\n                let offset = 0;\r\n                if (tabIndex > this.tabs.length - 1) {\r\n                    offset = -1;\r\n                }\r\n\r\n                this.setTab(tabIndex || 0, true, offset);\r\n            }\r\n        },\r\n        mounted() {\r\n            this.updateTabs();\r\n\r\n            // Observe Child changes so we can notify tabs change\r\n            observeDom(this.$refs.tabsContainer, this.updateTabs.bind(this), {subtree: false});\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <transition @enter=\"enter\" @before-leave=\"beforeLeave\" mode=\"out-in\">\r\n        <div role=\"tabpanel\"\r\n             :class=\"['tab-pane', {show, fade, disabled, active: localActive}]\"\r\n             :aria-hidden=\"localActive ? 'false' : 'true'\"\r\n             :aria-expanded=\"localActive ? 'true' : 'false'\"\r\n             :aria-lablelledby=\"controlledBy || null\"\r\n             v-if=\"localActive || !lazy\"\r\n             v-show=\"localActive || lazy\"\r\n             ref=\"panel\">\r\n             <slot></slot>\r\n        </div>\r\n    </transition>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        methods: {\r\n            enter() {\r\n                this.show = true;\r\n            },\r\n            beforeLeave() {\r\n                this.show = false;\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                fade: false,\r\n                localActive: false,\r\n                lazy: true,\r\n                show: false\r\n            };\r\n        },\r\n        computed: {\r\n            controlledBy() {\r\n                return this.buttonId || (this.id ? (this.id + '__BV_tab_button__') : null);\r\n            }\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            buttonId: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            headHtml: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            active: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            href: {\r\n                type: String,\r\n                default: '#'\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\n    <div>\n        <span ref=\"trigger\"><slot></slot></span>\n        <div tabindex=\"-1\" :class=\"['tooltip','tooltip-' + this.placement]\"\n             ref=\"popover\" @focus=\"$emit('focus')\" @blur=\"$emit('blur')\"\n             :style=\"{opacity:showState?1:0}\"\n        >\n            <div class=\"tooltip-inner\">\n                <slot name=\"content\"><span v-html=\"content || title\"></span></slot>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style>\n    .tooltip {\n        display: block !important;\n        transition: all 0.3s;\n    }\n</style>\n\n<script>\n    import bPopover from './popover.vue';\n\n    export default {\n        extends: bPopover,\n        props: {\n            triggers: {\n                type: [Boolean, String, Array],\n                default: 'hover'\n            }\n        }\n    };\n</script>\n","import target from './_target';\r\n\r\nconst listen_types = {click: true};\r\n\r\nexport default {\r\n    bind(el, binding) {\r\n        target(el, binding, listen_types, ({targets, vm}) => {\r\n            targets.forEach(target => {\r\n                vm.$root.$emit('collapse::toggle', target);\r\n            });\r\n        });\r\n    }\r\n};\r\n","import target from './_target';\r\n\r\nconst listen_types = {click: true};\r\n\r\nexport default {\r\n    bind(el, binding) {\r\n        target(el, binding, listen_types, ({targets, vm}) => {\r\n            targets.forEach(target => {\r\n                vm.$root.$emit('show::modal', target, el);\r\n            });\r\n        });\r\n    }\r\n};\r\n","import * as components from './components';\nimport * as directives from './directives';\n\n/* eslint-disable no-var, no-undef, guard-for-in, object-shorthand */\n\nconst VuePlugin = {\n    install: function (Vue) {\n        if (Vue._bootstrap_vue_installed) {\n            return;\n        }\n\n        Vue._bootstrap_vue_installed = true;\n\n        // Register components\n        for (var component in components) {\n            Vue.component(component, components[component]);\n        }\n\n        // Register directives\n        for (var directive in directives) {\n            Vue.directive(directive, directives[directive]);\n        }\n    }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(VuePlugin);\n}\n\nexport default VuePlugin;\n"],"names":["observeDOM","el","callback","opts","const","MutationObserver","window","WebKitMutationObserver","eventListenerSupported","addEventListener","obs","mutations","addedNodes","length","removedNodes","observe","Object","assign","childList","subtree","targets","binding","listen_types","fn","vm","__vue__","console","warn","keys","modifiers","filter","t","all_listen_types","value","push","listener","forEach","type","getVm","toType","obj","toString","call","match","toLowerCase","isElement","nodeType","typeCheckConfig","componentName","config","configTypes","property","prototype","hasOwnProperty","expectedTypes","valueType","RegExp","test","error","NAME","closest","element","selector","ScrollSpy","this","_element","_selector","Selector","NAV_LINKS","LIST_ITEMS","DROPDOWN_ITEMS","join","_config","Default","_offsets","_targets","_activeTarget","_scrollHeight","_$root","_resizeTimeout","updateConfig","render","data","countDownTimerId","dismissed","created","state","computed","classObject","alertVariant","dismissible","variant","localShow","show","props","String","default","Boolean","dismissLabel","Number","watch","showChanged","mounted","methods","dismiss","$emit","clearCounter","clearInterval","let","dismissCountDown","setInterval","routerAvailable","$router","_href","disabled","href","to","_to","tag","exact","append","replace","activeClass","exactActiveClass","event","Array","click","e","preventDefault","stopPropagation","$root","components","bLink","componentType","items2","last","items","map","item","text","link","active","__active","required","onclick","btnVariant","btnSize","btnBlock","btnDisabled","inactive","block","size","ITEM_SELECTOR","toolbar","vertical","justify","isKeyNav","toolbarkeyNav","toobarKeyNav","focusNext","prev","getItems","index","indexOf","target","focus","focusFirst","focusLast","slice","$el","querySelectorAll","tabIndex","document","documentElement","_clickOutListener","destroyed","removeEventListener","contains","clickOutListener","split","dropup","right","$on","visible","old","children","body","noop","toggle","$nextTick","onTab","onEsc","$refs","button","up","menu","mixins","clickOut","dropdown","dropdownToggle","caret","id","left","blockClass","overlay","cardVariant","cardInverse","inverse","cardAlign","align","header","showHeader","headerTag","footer","showFooter","footerTag","title","subTitle","noBlock","img","imgAlt","deck","columns","DIRECTION","next","current","isSliding","slides","interval","indicators","controls","height","background","pause","_intervalId","start","classList","add","val","oldVal","direction","currentSlide","nextSlide","_carouselAnimation","setTimeout","remove","clearTimeout","contentVisibleUp","caption","contentClasses","classes","carousel-caption","navbar-collapse","isNav","enter","style","realHeight","getComputedStyle","offsetHeight","leave","clearHeight","inBrowser","UNSAFE_UID","process","env","_id","_uid","generateId","bButton","toggleText","extends","dropdown_click","selected","displayItem","returnObject","model","forceDefault","defaultText","result","list","position","select","hub","inline","labelId","label","descriptionId","description","feedbackId","feedback","describedBy","i","inputState","labelLayout","labelSrOnly","horizontal","labelSize","labelAlignClass","labelTextAlign","inputLayout","updateTarget","content","input","querySelector","inputSelector","updated","inputClass","custom","plain","name","checkboxClass","custom-control","form-check-inline","formMixin","formCheckBoxMixin","prop","uncheckedValue","checked","formOptions","options","isArray","option","valueField","textField","selectedValue","localValue","old_value","formOptionsMixin","stacked","staticValue","formatter","Function","bFormInputStatic","rowsCount","format","formattedValue","onInput","lazyFormatter","onChange","onKeyUp","static","placeholder","rows","textarea","selectedFile","dragging","selectedLabel","multiple","selectedFormat","file","computedChooseLabel","chooseLabel","newVal","onFileChange","dataTransfer","noTraverse","queue","webkitGetAsEntry","traverseFileTree","Promise","all","then","filesArr","setFiles","concat","apply","files","filesArray","accept","dragover","noDrop","dropEffect","drop","path","resolve","isFile","$path","isDirectory","createReader","readEntries","entries","directory","dropLabel","fluid","containerFluid","lead","badgeVariant","badgePill","pill","flush","actionTags","listState","isAction","action","myTag","verticalAlignClass","verticalAlign","rightAlign","FOCUS_SELECTOR","bBtn","is_visible","return_focus","returnFocus","new_val","old_val","hide","fade","closeTitle","okTitle","closeOnBackdrop","closeOnEsc","hideHeader","hideFooter","hideHeaderClose","enforceFocus","isOK","canceled","cancel","returnFocusTo","onClickOut","triggerEl","nav","navbar-nav","isNavBar","nav-tabs","tabs","nav-pills","pills","flex-column","nav-fill","fill","fixed","sticky","toggleable","toggleBreakpoint","diff","showPrev","showNext","currentPage","numberOfPages","Math","ceil","totalRows","perPage","pageLinks","limit","secondaryVariant","_return","newPage","oldPage","newValue","oldValue","TRIGGER_LISTENERS","hover","mouseenter","mouseleave","blur","PLACEMENT_PARAMS","top","bottom","TETHER_CLASS_PREFIX","TETHER_CLASSES","enabled","TRANSITION_DURATION","constraints","debounce","validator","delay","offset","placement","popoverStyle","targetOffset","triggers","triggerState","classState","lastEvent","normalizedTriggers","popoverAlignment","showState","setOptions","newTriggers","oldTriggers","updateListeners","getDelay","_timeout","togglePopover","addListener","trigger","_trigger","eventHandler","destroyTether","_tether","destroy","regx","className","timeStamp","getTetherOptions","attachment","_popover","classPrefix","hidePopover","display","refreshPosition","removeListener","showPopover","Tether","newShowState","appliedTriggers","removeTriggers","popover","beforeDestroy","progressVariant","striped","animated","styleObject","width","progress","p","pow","precision","round","max","showProgress","showValue","v","k","defaultSortCompare","a","b","sortBy","localeCompare","undefined","numeric","bPagination","sortDesc","fields","items_key","sortCompare","itemsProvider","_items","regex","lastIndex","sort","r","rowClicked","headClick","field","key","sortable","currentTab","noFade","card","small","lazy","setTab","$set","navStyle","sign","x","nextTab","previousTab","force","tab","updateTabs","$slots","componentInstance","observeDom","tabsContainer","bind","beforeLeave","localActive","controlledBy","buttonId","headHtml","bPopover","ref","Element","s","matches","ownerDocument","parentElement","EVENT","BVSS","method","throttle","DefaultType","ClassName","DROPDOWN_ITEM","DROPDOWN_MENU","DROPDOWN_TOGGLE","NAV_LINK","LIST_ITEM","ACTIVE","NAV_LIST_GROUP","NAV","LIST_GROUP","DROPDOWN","OffsetMethod","OFFSET","POSITION","isServer","arg","parseInt","listen","scroller","_getScroller","tagName","unListen","refresh","autoMethod","offsetMethod","offsetBase","_getScrollTop","_getScrollHeight","navs","getAttribute","charAt","bcr","getBoundingClientRect","offsetTop","scrollTop","scrollHeight","maxScroll","_getOffsetHeight","_activate","_clear","isActiveTarget","dispose","handleEvent","resizeThrottle","self","pageYOffset","innerHeight","queries","links","_setActiveState","_setParentsSiblingActiveState","els","$props","previousElementSibling","inserted","update","componentUpdated","unbind","VuePlugin","install","Vue","_bootstrap_vue_installed","component","directive","directives","use"],"mappings":"iGAOA,QAAwBA,YAAWC,EAAIC,EAAUC,GAC7CC,GAAMC,GAAmBC,OAAOD,kBAAoBC,OAAOC,uBACrDC,EAAyBF,OAAOG,gBAEtC,IAAIJ,EAAkB,CAElBD,GAAMM,GAAM,GAAIL,GAAiB,SAAAM,IACzBA,EAAU,GAAGC,WAAWC,OAAS,GAAKF,EAAU,GAAGG,aAAaD,OAAS,IACzEX,KAKRQ,GAAIK,QAAQd,EAAIe,OAAOC,QAAQC,WAAW,EAAMC,SAAS,GAAOhB,QACzDK,KACPP,EAAGQ,iBAAiB,kBAAmBP,GAAU,GACjDD,EAAGQ,iBAAiB,iBAAkBP,GAAU,ICrBxD,QAAwBkB,SAAQnB,EAAIoB,EAASC,EAAcC,GACvDnB,GAAMoB,GAAKvB,EAAGwB,OAEd,KAAKD,EAED,WADAE,SAAQC,KAAK,sCAAuC1B,EAIxDG,IAAMgB,GAAUJ,OAAOY,KAAKP,EAAQQ,eAC/BC,OAAO,SAAAC,UAAMC,iBAAiBD,IAE/BV,GAAQY,OACRb,EAAQc,KAAKb,EAAQY,MAGzB7B,IAAM+B,GAAW,WACbZ,GAAIH,QAAAA,EAASI,GAAAA,IAGjBR,QAAOY,KAAKI,kBAAkBI,QAAQ,SAAAC,IAC9Bf,EAAae,IAAShB,EAAQQ,UAAUQ,KACxCpC,EAAGQ,iBAAiB4B,EAAMF,KCsItC,QAASG,OAAMrC,GACX,MAAOA,GAAKA,EAAGwB,QAAU,KAG7B,QAASc,QAAOC,GACZ,SAAYC,SAASC,KAAKF,GAAKG,MAAM,iBAAiB,GAAGC,cAG7D,QAASC,WAAUL,GACf,MAAOA,GAAIM,SAGf,QAASC,iBAAgBC,EAAeC,EAAQC,GAC5C,IAAK9C,GAAM+C,KAAYD,GACnB,GAAIlC,OAAOoC,UAAUC,eAAeX,KAAKQ,EAAaC,GAAW,CAC7D/C,GAAMkD,GAAgBJ,EAAYC,GAC5BlB,EAAQgB,EAAOE,GACfI,EAAYtB,GAASY,UAAUZ,GAAS,UAAYM,OAAON,EAE5D,IAAIuB,QAAOF,GAAeG,KAAKF,IAChC7B,QAAQgC,MACJC,KAAO,aAAeR,EAAW,oBACjCI,EAAY,wBAA0BD,EAAgB,MAQ1E,QAASM,SAAQC,EAASC,GACtB1D,GAAMH,GAAK4D,EAAQD,QAAQE,EAC3B,OAAO7D,KAAO4D,EAAU,KAAO5D,EAOnC,QAAS8D,WAAU9D,EAAIoB,GAEnB2C,KAAKC,SAAWhE,EAEhB+D,KAAKE,WACDC,SAASC,UACTD,SAASE,WACTF,SAASG,gBACXC,KAAK,KAEPP,KAAKQ,QAAUxD,OAAOC,UAAWwD,SAEjCT,KAAKU,YACLV,KAAKW,YAELX,KAAKY,cAAgB,KACrBZ,KAAKa,cAAgB,EAErBb,KAAKc,OAAS,KAEdd,KAAKe,eAAiB,KAGtBf,KAAKgB,aAAa3D,wDCtMN4D,meACZC,gBACI,OACIC,iBAAkB,KAClBC,WAAW,IAGnBC,mBACQrB,KAAKsB,OACL5D,QAAQC,KAAK,uEAGrB4D,UACIC,uBACI,OAAQ,QAASxB,KAAKyB,aAAczB,KAAK0B,YAAc,oBAAsB,KAEjFD,wBACIrF,GAAMuF,GAAU3B,KAAKsB,OAAStB,KAAK2B,SAAW,MAC9C,OAAO,SAASA,GAEpBC,qBACI,OAAQ5B,KAAKoB,YAAcpB,KAAKmB,kBAAoBnB,KAAK6B,QAGjEC,OACIH,SACItD,KAAM0D,OACNC,QAAS,QAEbV,OACIjD,KAAM0D,OACNC,QAAS,MAEbN,aACIrD,KAAM4D,QACND,SAAS,GAEbE,cACI7D,KAAM0D,OACNC,QAAS,SAEbH,MACIxD,MAAO4D,QAASE,QAChBH,SAAS,IAGjBI,OACIP,gBACI7B,KAAKqC,gBAGbC,mBACItC,KAAKqC,eAETE,SACIC,mBACIxC,KAAKoB,WAAY,EACjBpB,KAAKyC,MAAM,aACXzC,KAAK0C,gBAETA,wBACQ1C,KAAKmB,kBACLwB,cAAc3C,KAAKmB,mBAG3BkB,iCAKI,IAHArC,KAAKoB,WAAY,EAGbpB,KAAK6B,QAAS,GAAQ7B,KAAK6B,QAAS,GAAuB,OAAd7B,KAAK6B,MAA+B,IAAd7B,KAAK6B,KAA5E,CAIAe,GAAIC,GAAmB7C,KAAK6B,IAC5B7B,MAAKyC,MAAM,qBAAsBI,GAGjC7C,KAAK0C,eACL1C,KAAKmB,iBAAmB2B,YAAY,WAChC,MAAID,GAAmB,EACZ7C,EAAKwC,WAEhBK,QACA7C,GAAKyC,MAAM,qBAAsBI,KAClC,gBC1EC5B,8gBACZM,UACIwB,2BACI,MAAOd,SAAQjC,KAAKgD,UAExBC,iBACI,MAAIjD,MAAKkD,SACE,IAIPlD,KAAKmD,KACEnD,KAAKmD,KAIZnD,KAAKoD,IAAyB,gBAAZpD,MAAKoD,GAChBpD,KAAKoD,GADhB,QAIJC,eACI,OAAKrD,KAAK+C,iBAAmB/C,KAAKkD,SACvB,IAGPlD,KAAKoD,GACEpD,KAAKoD,GAGZpD,KAAKmD,KACEnD,KAAKmD,KADhB,SAKRrB,OAEIsB,IACI/E,MAAO0D,OAAQ/E,QACfgF,QAAS,MAEbsB,KACIjF,KAAM0D,OACNC,QAAS,KAEbuB,MAAOtB,QACPuB,OAAQvB,QACRwB,QAASxB,QACTyB,aACIrF,KAAM0D,OACNC,QAAS,UAEb2B,kBACItF,KAAM0D,OACNC,QAAS,UAEb4B,OACIvF,MAAO0D,OAAQ8B,OACf7B,QAAS,SAEbkB,SAAUjB,QACVkB,MACI9E,KAAM0D,OACNC,QAAS,MAGjBO,SACIuB,eAAMC,GACF,MAAI/D,MAAKkD,UAA2B,MAAflD,KAAKiD,OACtBc,EAAEC,qBACFD,GAAEE,oBAINjE,KAAKyC,MAAM,QAASsB,OACpB/D,MAAKkE,MAAMzB,MAAM,gBAAiBzC,sBCzF9BiB,4dACZkD,YAAaC,MAAAA,OACb7C,UACI8C,yBACI,MAAOrE,MAAKoD,GAAK,cAAgB,KAErCkB,kBACIlI,GAAMmI,GAAOvE,KAAKwE,MAAM3H,OAAS,GAAKmD,KAAKwE,MAAMxE,KAAKwE,MAAM3H,OAAS,EAErE,OAAOmD,MAAKwE,MAAMC,IAAI,SAAAC,GAClB,MAAoB,gBAATA,IACCC,KAAMD,EAAME,KAAM,IAAKC,OAAQH,IAASH,IAGhDG,EAAKG,UAAW,GAAQH,EAAKG,UAAW,EACxCH,EAAKI,SAAWJ,IAASH,EAEzBG,EAAKI,SAAWJ,EAAKG,OAGlBH,OAInB5C,OACI0C,OACInG,KAAMwF,MACN7B,QAAS,qBACT+C,UAAU,IAGlBxC,SACIyC,iBAAQN,GACJ1E,KAAKyC,MAAM,QAASiC,GAChB1E,KAAKgD,SAAWhD,KAAKoD,IACrBpD,KAAKgD,QAAQ9E,KAAK8B,KAAKoD,aCrCvBnC,0OACZkD,YAAaC,MAAAA,OACb7C,UACIC,uBACI,OACI,MACAxB,KAAKiF,WACLjF,KAAKkF,QACLlF,KAAKmF,SACLnF,KAAKoF,YACLpF,KAAKqF,SAAW,eAAiB,KAGzChB,yBACI,MAAQrE,MAAKmD,MAAQnD,KAAKoD,GAAM,SAAW,UAE/C+B,oBACI,MAAOnF,MAAKsF,MAAQ,YAAc,IAEtCL,sBACI,MAAOjF,MAAK2B,QAAU,OAAO3B,KAAK2B,QAAY,iBAElDuD,mBACI,MAAOlF,MAAKuF,KAAO,OAAOvF,KAAKuF,KAAS,IAE5CH,uBACI,MAAOpF,MAAKkD,SAAW,WAAa,KAG5CpB,OACIwD,OACIjH,KAAM4D,QACND,SAAS,GAEbkB,UACI7E,KAAM4D,QACND,SAAS,GAEbqD,UACIhH,KAAM4D,QACND,SAAS,GAEbuD,MACIlH,KAAM0D,OACNC,QAAS,MAEbL,SACItD,KAAM0D,OACNC,QAAS,MAEboB,IACI/E,MAAO0D,OAAQ/E,SAEnBmG,MACI9E,KAAM0D,SAGdQ,SACIyC,iBAAQjB,GACA/D,KAAKkD,UACLa,EAAEE,kBACFF,EAAEC,kBAEFhE,KAAKyC,MAAM,QAASsB,MC3D9ByB,eACF,iGACA,0GACA,mGACA,mHACA,iHACFjF,KAAK,kBAESU,gqCACZM,UACIC,uBACI,OACI,QAAUxB,KAAKyF,QAAU,UAAY,SACrCzF,KAAK0F,SAAW,qBAAuB,GACtC1F,KAAK2F,UAAY3F,KAAK0F,SAAY,0BAA4B,GAC/D1F,KAAKuF,KAAQ,aAAevF,KAAKuF,KAAQ,KAGjDK,oBACI,MAAO5F,MAAKyF,SAAWzF,KAAK6F,gBAGpC/D,OACI4D,UACIrH,KAAM4D,QACND,SAAS,GAEbyD,SACIpH,KAAM4D,QACND,SAAS,GAEb2D,SACItH,KAAM4D,QACND,SAAS,GAEbuD,MACIlH,KAAM0D,OACNC,QAAS,MAEb8D,cACIzH,KAAM4D,QACND,SAAS,IAGjBO,SACIwD,mBAAUhC,EAAGiC,GACT,GAAKhG,KAAK4F,SAAV,CAGA7B,EAAEC,iBACFD,EAAEE,iBACF7H,IAAMoI,GAAQxE,KAAKiG,UACnB,MAAIzB,EAAM3H,OAAS,GAAnB,CAGA+F,GAAIsD,GAAQ1B,EAAM2B,QAAQpC,EAAEqC,OACxBJ,IAAQE,EAAQ,EAChBA,KACQF,GAAQE,EAAQ1B,EAAM3H,OAAS,GACvCqJ,IAEAA,EAAQ,IACRA,EAAQ,GAEZ1B,EAAM0B,GAAOG,WAEjBC,oBAAWvC,GACP,GAAK/D,KAAK4F,SAAV,CAGA7B,EAAEC,iBACFD,EAAEE,iBACF7H,IAAMoI,GAAQxE,KAAKiG,UACfzB,GAAM3H,OAAS,GACf2H,EAAM,GAAG6B,UAGjBE,mBAAUxC,GACN,GAAK/D,KAAK4F,SAAV,CAGA7B,EAAEC,iBACFD,EAAEE,iBACF7H,IAAMoI,GAAQxE,KAAKiG,UACfzB,GAAM3H,OAAS,GACf2H,EAAMA,EAAM3H,OAAS,GAAGwJ,UAGhCJ,oBACI7J,GAAMoI,GAAQX,MAAMzE,UAAUoH,MAAM9H,KAAKsB,KAAKyG,IAAIC,iBAAiBlB,eAKnE,OAJAhB,GAAMpG,QAAQ,SAAAsG,GAEVA,EAAKiC,UAAW,IAEbnC,IAGflC,mBACQtC,KAAK4F,UAEL5F,KAAKiG,uBCtHb3D,mBAC4B,mBAAbsE,WACPA,SAASC,gBAAgBpK,iBAAiB,QAASuD,KAAK8G,oBAGhEC,qBAC4B,mBAAbH,WACPA,SAASI,oBAAoB,QAAShH,KAAK8G,oBAGnDvE,SACIuE,2BAAkB/C,GACT/D,KAAKyG,IAAIQ,SAASlD,EAAEqC,SACjBpG,KAAKkH,kBACLlH,KAAKkH,sBCfnB1B,iBACF,2GACA,+EACFjF,KAAK,eAGHuB,OACIqF,OACI9I,KAAM4D,QACND,SAAS,GAEb2C,MACItG,KAAM0D,OACNC,QAAS,IAEboF,QACI/I,KAAM4D,QACND,SAAS,GAEbkB,UACI7E,KAAM4D,QACND,SAAS,GAEbqF,OACIhJ,KAAM4D,QACND,SAAS,IAGjBX,6BACIrB,MAAKkE,MAAMoD,IAAI,kBAAmB,SAAArL,GAE1BA,IAAO+D,IACPA,EAAKuH,SAAU,MAI3BnF,OACImF,iBAAQjG,EAAOkG,aACX,IAAIlG,IAAUkG,EAId,GAAIlG,GAQA,GAPAtB,KAAKkE,MAAMzB,MAAM,kBAAmBzC,MAOZ,mBAAb4G,WAA4B,gBAAkBA,UAASC,gBAAiB,CAC/EzK,GAAMqL,GAAW5D,MAAMzE,UAAUoH,MAAM9H,KAAKkI,SAASc,KAAKD,SAC1DA,GAASrJ,QAAQ,SAAAnC,GACbA,EAAGQ,iBAAiB,YAAauD,EAAK2H,aAS9C,IALA3H,KAAKkE,MAAMzB,MAAM,mBAAoBzC,MAKb,mBAAb4G,WAA4B,gBAAkBA,UAASC,gBAAiB,CAC/EzK,GAAMqL,GAAW5D,MAAMzE,UAAUoH,MAAM9H,KAAKkI,SAASc,KAAKD,SAC1DA,GAASrJ,QAAQ,SAAAnC,GACbA,EAAG+K,oBAAoB,YAAahH,EAAK2H,WAM7DpF,SACIoF,kBAGAC,kBACI,MAAI5H,MAAKkD,cACLlD,KAAKuH,SAAU,IAGnBvH,KAAKuH,SAAWvH,KAAKuH,aACjBvH,KAAKuH,SACLvH,KAAK6H,UAAU,WAEXzL,GAAMoI,GAAQxE,KAAKiG,UACfzB,GAAM3H,OAAS,GACf2H,EAAM,GAAG6B,aAKzByB,iBACQ9H,KAAKuH,UACLvH,KAAKuH,SAAU,IAGvBQ,eAAMhE,GACE/D,KAAKuH,UACLvH,KAAKuH,SAAU,EACfxD,EAAEC,iBACFD,EAAEE,kBACFjE,KAAK6H,UAAU,WAEXjF,GAAI3G,EAEAA,GADA+D,KAAKmH,OAASnH,KAAKgI,MAAMJ,OACpB5H,KAAKgI,MAAMJ,OAAOnB,KAAOzG,KAAKgI,MAAMJ,OAEpC5H,KAAKgI,MAAMC,OAAOxB,KAAOzG,KAAKgI,MAAMC,OAEzChM,GAAMA,EAAGoK,OACTpK,EAAGoK,YAKnBN,mBAAUhC,EAAGmE,GACT,GAAKlI,KAAKuH,QAAV,CAGAxD,EAAEC,iBACFD,EAAEE,iBACF7H,IAAMoI,GAAQxE,KAAKiG,UACnB,MAAIzB,EAAM3H,OAAS,GAAnB,CAGA+F,GAAIsD,GAAQ1B,EAAM2B,QAAQpC,EAAEqC,OACxB8B,IAAMhC,EAAQ,EACdA,KACQgC,GAAMhC,EAAQ1B,EAAM3H,OAAS,GACrCqJ,IAEAA,EAAQ,IACRA,EAAQ,GAEZ1B,EAAM0B,GAAOG,WAEjBJ,oBACI,MAAOpC,OAAMzE,UAAUoH,MAAM9H,KAAKsB,KAAKgI,MAAMG,KAAKzB,iBAAiBlB,0CCrG/DvE,uvCACZmH,QACIC,SACAC,UAEJpH,gBACI,OACIqG,SAAS,IAGjBhG,UACIgH,0BACI,MAAOvI,MAAKwI,MAAQ,kBAAoB,KAGhD1G,OACI2G,IACIpK,KAAM0D,QAEVyG,OACInK,KAAM4D,QACND,SAAS,IAGjBO,SACI2E,4BACIlH,KAAKuH,SAAU,iBC/CXtG,0XACZM,UACIC,uBACI,OACI,cACAxB,KAAKuF,KAAQ,eAAiBvF,KAAKuF,KAAQ,GAC3CvF,KAAKsB,MAAS,OAAStB,KAAKsB,MAAS,MAIjDQ,OACIyD,MACIlH,KAAM0D,OACNC,QAAS,MAEbV,OACIjD,KAAM0D,OACNC,QAAS,MAEb0G,MACIrK,KAAM0D,OACNC,QAAS,MAEbqF,OACIhJ,KAAM0D,OACNC,QAAS,yBCjCLf,0KACZa,OACI2G,IACIpK,KAAM0D,OACNC,QAAS,0BCJLf,wJACZa,gBC4BYb,w0BACZM,UACIoH,sBACI,OACI,aACA3I,KAAK4I,QAAU,mBAAqB,OAG5CC,uBACI,MAAO7I,MAAK2B,QAAU,QAAQ3B,KAAK2B,QAAY,MAEnDmH,uBACI,MAAI9I,MAAK4I,SAAW5I,KAAK+I,QACd,eAGU,OAAjB/I,KAAK+I,SAAoB/I,KAAK2B,SAAW3B,KAAK2B,QAAQ9E,OAAS,GAC/DmD,KAAK2B,QAAQwE,QAAQ,cAAe,EAC7B,eAFX,QAKJ6C,qBACI,MAAOhJ,MAAKiJ,MAAQ,QAAQjJ,KAAKiJ,MAAU,OAGnDnH,OACImH,OACI5K,KAAM0D,OACNC,QAAS,MAEb+G,SACI1K,KAAM4D,QAEND,QAAS,MAEbL,SACItD,KAAM0D,OACNC,QAAS,MAIbkH,QACI7K,KAAM0D,OACNC,QAAS,MAEbmH,YACI9K,KAAM4D,QACND,SAAS,GAEboH,WACI/K,KAAM0D,OACNC,QAAS,OAIbqH,QACIhL,KAAM0D,OACNC,QAAS,MAEbsH,YACIjL,KAAM4D,QACND,SAAS,GAEbuH,WACIlL,KAAM0D,OACNC,QAAS,OAIbwH,OACInL,KAAM0D,OACNC,QAAS,MAEbyH,UACIpL,KAAM0D,OACNC,QAAS,MAEb0H,SACIrL,KAAM4D,QACND,SAAS,GAIb2H,KACItL,KAAM0D,OACNC,QAAS,MAEb4H,QACIvL,KAAM0D,OACNC,QAAS,MAEb4G,SACIvK,KAAM4D,QACND,SAAS,gBC1HLf,iJACZM,UACIlD,gBACI,MAAI2B,MAAK6J,KACE,OAGP7J,KAAK8J,QACE,UAGJ,UAGfhI,OACI+H,MACIxL,KAAM4D,QACND,SAAS,GAEb8H,SACIzL,KAAM4D,QACND,SAAS,KCEf+H,WACFC,MACIC,QAAS,qBACTD,KAAM,sBACNpB,QAAS,sBAEb5C,MACIiE,QAAS,sBACTD,KAAM,qBACNpB,QAAS,iCAID3H,qrCACZC,gBACI,OACIgF,MAAO,EACPgE,WAAW,EACXC,YAGRrI,OACIsI,UACI/L,KAAM8D,OACNH,QAAS,KAEbqI,YACIhM,KAAM4D,QACND,SAAS,GAEbsI,UACIjM,KAAM4D,QACND,SAAS,GAEbuI,QACIlM,KAAM0D,QAEVyI,YACInM,KAAM0D,SAGdQ,SAEIyD,gBACQhG,KAAKkG,OAAS,EACdlG,KAAKkG,MAAQlG,KAAKmK,OAAOtN,OAAS,EAElCmD,KAAKkG,SAKb8D,gBACQhK,KAAKkG,OAASlG,KAAKmK,OAAOtN,OAAS,EACnCmD,KAAKkG,MAAQ,EAEblG,KAAKkG,SAKbuE,iBAC0B,IAAlBzK,KAAKoK,UAA2C,mBAAlBpK,MAAKoK,UAGvCzH,cAAc3C,KAAK0K,cAIvBC,2BAC0B,KAAlB3K,KAAKoK,UAA2C,mBAAlBpK,MAAKoK,WAGvCpK,KAAK0K,YAAc5H,YAAY,WAC3B9C,EAAKgK,QACNhK,KAAKoK,aAGhB9H,mBAEItC,KAAKmK,OAASnK,KAAKyG,IAAIC,iBAAiB,kBAGxC1G,KAAKmK,OAAO,GAAGS,UAAUC,IAAI,UAG7B7K,KAAK2K,SAETvI,OACI8D,eAAM4E,EAAKC,aACP,IAAID,IAAQC,EAAZ,CAIA,GAAI/K,KAAKkK,UAEL,YADAlK,KAAKkG,MAAQ6E,EAKjBnI,IAAIoI,GAAaF,EAAMC,EAAUhB,UAAUC,KAAOD,UAAU/D,IAG7C,KAAX+E,GAAgBD,IAAQ9K,KAAKmK,OAAOtN,OAAS,EAC7CmO,EAAYjB,UAAU/D,KACf+E,IAAW/K,KAAKmK,OAAOtN,OAAS,GAAa,IAARiO,IAC5CE,EAAYjB,UAAUC,KAI1B5N,IAAM6O,GAAejL,KAAKmK,OAAOY,GAC3BG,EAAYlL,KAAKmK,OAAOW,EAEzBG,IAAiBC,IAKtBlL,KAAKkK,WAAY,EAEjBgB,EAAUN,UAAUC,IAAIG,EAAUhB,KAAMgB,EAAUpC,SAClDqC,EAAaL,UAAUC,IAAIG,EAAUf,SAErCjK,KAAKmL,mBAAqBC,WAAW,WACjCpL,EAAKkK,WAAY,EACjBlK,EAAKyC,MAAM,QAASqI,GAEpBG,EAAaL,UAAUS,OAAO,UAC9BH,EAAUN,UAAUC,IAAI,UAExBI,EAAaL,UAAUS,OAAOL,EAAUf,SACxCiB,EAAUN,UAAUS,OAAOL,EAAUhB,KAAMgB,EAAUpC,UACtD,SAGX7B,qBACIuE,aAAatL,KAAKmL,oBAClBxI,cAAc3C,KAAK0K,8BC3JXzJ,0bACZa,OACI6H,KACItL,KAAM0D,QAEV6H,QACIvL,KAAM0D,QAEVwJ,kBACIlN,KAAM0D,QAEVyJ,SACInN,KAAM0D,QAEV4C,MACItG,KAAM0D,QAEVyI,YACInM,KAAM0D,QAEVwI,QACIlM,KAAM0D,SAGdR,UACIkK,0BACIrP,GAAMsP,IACFC,mBAAoB1J,QAAQjC,KAAKwL,SAMrC,OAJIxL,MAAKuL,mBACLG,EAAQ,WAAY,EACpBA,EAAQ,KAAK1L,KAAKuL,4BAA4B,GAE3CG,eCnBHzK,8VAEZC,gBACI,OACIW,MAAM,IAIdN,UACIC,uBACI,OACIoK,kBAAmB5L,KAAK6L,MACxBhK,KAAM7B,KAAK6B,QAKvBC,OACI+J,OACIxN,KAAM4D,QACND,SAAS,GAEbyG,IACIpK,KAAM0D,OACNgD,UAAU,IAIlBxC,SACIqF,kBACI5H,KAAK6B,MAAQ7B,KAAK6B,MAEtBiK,eAAM7P,GACFA,EAAG8P,MAAMxB,OAAS,MAClBnO,IAAM4P,GAAaC,iBAAiBhQ,GAAIsO,MACxCtO,GAAG8P,MAAMxB,OAAS,MAGlBtO,EAAGiQ,aAEHjQ,EAAG8P,MAAMxB,OAASyB,GAEtBG,eAAMlQ,GACFA,EAAG8P,MAAMxB,OAAS,MAClBnO,IAAM4P,GAAaC,iBAAiBhQ,GAAIsO,MACxCtO,GAAG8P,MAAMxB,OAASyB,EAGlB/P,EAAGiQ,aAEHjQ,EAAG8P,MAAMxB,OAAS,OAEtB6B,qBAAYnQ,GACRA,EAAG8P,MAAMxB,OAAS,OAI1BlJ,6BACIrB,MAAKkE,MAAMoD,IAAI,mBAAoB,SAAAlB,GAC3BA,IAAWpG,EAAKyI,IAGpBzI,EAAK4H,aC1EXyE,UAA8B,mBAAX/P,QACnBgQ,WAAcD,WAAa/P,OAAOgQ,cAAe,IAAWD,WAAaE,QAAQC,IAAIF,cAAe,cAGtG/K,UACIkL,eACI,OAAKH,YAActM,KAAKyI,GACbzI,KAAKyI,GAGT,OAAOzI,KAAK0M,yBC0BfzL,s5CACZmH,QAASC,SAAUC,SAAUqE,YAC7BxI,YAAayI,QAAAA,MACb1L,gBACI,OACIqG,SAAS,IAGjBzF,OACI+K,YACIxO,KAAM0D,OACNC,QAAS,mBAEbuD,MACIlH,KAAM0D,OACNC,QAAS,MAEbL,SACItD,KAAM0D,OACNC,QAAS,MAEb4C,MACIvG,KAAM4D,QACND,SAAS,IAGjBO,SACI2E,4BACIlH,KAAKuH,SAAU,GAEnBzD,eAAMC,GACF,MAAI/D,MAAKkD,cACLlD,KAAKuH,SAAU,QAIfvH,KAAKmH,OACLnH,KAAKyC,MAAM,QAASsB,GACpB/D,KAAKkE,MAAMzB,MAAM,kBAAmBzC,OAEpCA,KAAK4H,2BCzEL3G,uUACZ6L,QAAS1I,MACT7B,SACIwK,wBAAehJ,GACN/D,KAAKkD,UACNlD,KAAKkE,MAAMzB,MAAM,kBAAmBzC,MAGxCA,KAAK8D,MAAMC,uBCpBP9C,8JACZa,0BCCYb,8LACZa,OACIwB,KACIjF,KAAM0D,OACNC,QAAS,wBCWLf,qvBACZC,gBACI,OACIW,MAAM,EACNmL,UAAU,IAGlBzL,UACI0D,sBACI,MAAQjF,MAAK2B,SAA4B,YAAjB3B,KAAK2B,QAA0C,OAAO3B,KAAK2B,QAA9B,iBAEzDuD,mBACI,MAAQlF,MAAKuF,MAAsB,YAAdvF,KAAKuF,KAA0B,OAAOvF,KAAKuF,KAAjB,IAEnDgD,0BACI,MAAOvI,MAAKwI,MAAQ,kBAAoB,IAE5CyE,uBAEI,GAAKjN,KAAKkN,cAAgBlN,KAAKmN,QAAUnN,KAAKmN,MAAMxI,OAAW3E,KAAKkN,cAAgBlN,KAAKmN,OAA+B,IAAtBnN,KAAKmN,MAAMtQ,QAAiBmD,KAAKoN,aAC/H,MAAOpN,MAAKqN,WAIhB,IAAIrN,KAAKkN,cAAgBlN,KAAKmN,OAASnN,KAAKmN,MAAMxI,KAC9C,MAAO3E,MAAKmN,MAAMxI,IAItB,KAAK3E,KAAKkN,cAAgBlN,KAAKmN,MAAO,CAClCvK,GAAI0K,GAAStN,KAAKmN,OAAS,EAM3B,OALAnN,MAAKuN,KAAKnP,QAAQ,SAAUsG,GACpBA,EAAKzG,QAAU+B,KAAKmN,QACpBG,EAAS5I,EAAKC,QAGf2I,EAGX,MAAO,KAGfxL,OACI2G,IACIpK,KAAM0D,QAEVoL,OACIpI,UAAU,GAEdwI,MACIlP,KAAMwF,MACN7B,WACA+C,UAAU,GAEdyD,OACInK,KAAM4D,QACND,SAAS,GAEbwL,UACInP,KAAM0D,OACNC,QAAS,QAEbuD,MACIlH,KAAM0D,OACNC,QAAS,IAEbL,SACItD,KAAM0D,OACNC,QAAS,WAEbqL,aACIhP,KAAM0D,OACNC,QAAS,oBAEboL,cACI/O,KAAM4D,QACND,SAAS,GAEbkL,cACI7O,KAAM4D,QACND,SAAS,GAEboF,QACI/I,KAAM4D,QACND,SAAS,GAEbkB,UACI7E,KAAM4D,QACND,SAAS,IAGjBO,SACIqF,gBAAO7D,GAEH/D,KAAK6B,MAAQ7B,KAAK6B,KAEd7B,KAAK6B,MACL7B,KAAKkE,MAAMzB,MAAM,iBAAkBzC,KAAKyI,IACxC1E,EAAEE,mBAEFjE,KAAKkE,MAAMzB,MAAM,mBAAoBzC,KAAKyI,KAGlDgF,gBAAO/I,GAEC1E,KAAKkN,aACLlN,KAAKmN,MAAQzI,EAEb1E,KAAKmN,MAAQzI,EAAKzG,MAEtB+B,KAAK6B,MAAO,EAEZ7B,KAAKkE,MAAMzB,MAAM,qBAAsBzC,KAAKyI,GAAIzI,KAAKmN,SAG7D9L,mBACIjF,GAAMsR,GAAM1N,KAAKkE,KACjBwJ,GAAIpG,IAAI,iBAAkB,WACtBtH,KAAK6B,MAAO,YCrIRZ,+IACZM,UACIC,uBACI,OACIxB,KAAK2N,OAAS,cAAgB,MAI1C7L,OACI6L,QACItP,KAAM4D,QACND,SAAS,mBCaLf,qwBACZC,gBACI,OACIkF,OAAQ,OAGhB7E,UACIqM,mBACI,MAAQ5N,MAAKyI,IAAMzI,KAAK6N,MAAU7N,KAAKyI,GAAK,cAAiB,MAEjEqF,yBACI,MAAQ9N,MAAKyI,IAAMzI,KAAK+N,YAAgB/N,KAAKyI,GAAK,oBAAuB,MAE7EuF,sBACI,MAAQhO,MAAKyI,IAAMzI,KAAKiO,SAAajO,KAAKyI,GAAK,iBAAoB,MAEvEyF,uBACI,MAAIlO,MAAKyI,KAAOzI,KAAK6N,OAAS7N,KAAKiO,UAAYjO,KAAK+N,cAE5C/N,KAAK4N,QACL5N,KAAK8N,cACL9N,KAAKgO,YACPlQ,OAAO,SAAAqQ,SAAKA,KAAG5N,KAAK,KAEnB,MAEX6N,sBACI,MAAOpO,MAAKsB,MAAQ,OAAOtB,KAAKsB,MAAU,IAE9C+M,uBACI,MAAIrO,MAAKsO,YACE,KAEJtO,KAAKuO,WAAc,UAAYvO,KAAKwO,UAAa,UAE5DC,2BACI,MAAIzO,MAAKsO,YACE,KAEJtO,KAAK0O,eAAiB,QAAQ1O,KAAK0O,eAAmB,MAEjEC,uBACI,MAAO3O,MAAKuO,WAAc,WAAa,GAAKvO,KAAKwO,WAAc,WAGvEjM,SACIqM,wBACIxS,GAAMyS,GAAU7O,KAAKgI,MAAM6G,OAC3B,KAAKA,EACD,MAAO,KAEXzS,IAAM0S,GAAQD,EAAQE,cAAc/O,KAAKgP,cACzChP,MAAKoG,OAAU0I,GAASA,EAAMrG,GAAMqG,EAAMrG,GAAK,OAGvDnG,mBACItC,KAAK4O,gBAETK,mBACIjP,KAAK4O,gBAET9M,OACI2G,IACIpK,KAAM0D,OACNC,QAAS,MAEbV,OACIjD,KAAM0D,OACNC,QAAS,MAEbuM,YACIlQ,KAAM4D,QACND,SAAS,GAEbwM,WACInQ,KAAM8D,OACNH,QAAS,GAEb0M,gBACIrQ,KAAM0D,OACNC,QAAS,MAEb6L,OACIxP,KAAM0D,OACNC,QAAS,MAEbsM,aACIjQ,KAAM4D,QACND,SAAS,GAEb+L,aACI1P,KAAM0D,OACNC,QAAS,MAEbiM,UACI5P,KAAM0D,OACNC,QAAS,MAEbgN,eACI3Q,KAAM0D,OACNC,QAAS,2FClIjBT,UACI2N,sBACI,OACIlP,KAAKuF,KAAO,gBAAgBvF,KAAKuF,KAAS,KAC1CvF,KAAKsB,MAAQ,gBAAgBtB,KAAKsB,MAAU,OAGpD6N,kBACI,OAAQnP,KAAKoP,QAGrBtN,OACIuN,MACIhR,KAAM0D,QAEVmB,UACI7E,KAAM4D,SAEVmN,OACI/Q,KAAM4D,QACND,SAAS,GAEbV,OACIjD,KAAM0D,QAEVwD,MACIlH,KAAM0D,QAEV0G,IACIpK,KAAM0D,6BC7BdR,UACI+N,yBACI,OACIC,iBAAkBvP,KAAKmP,OACvBK,oBAAqBxP,KAAK2N,yBCkB1B1M,8lBACZmH,QAASqH,UAAWC,kBAAmB/C,YACvCQ,OACIwC,KAAM,UACN/L,MAAO,UAEX9B,OACI7D,OACI+D,SAAS,GAEb4N,gBACI5N,SAAS,GAEb6N,SACI7N,SAAS,kBCpCjBT,UACIuO,kCACQC,EAAU/P,KAAK+P,WAgCnB,OA5BIA,GAFAlM,MAAMmM,QAAQD,GAEJA,EAAQtL,IAAI,SAAAwL,GAClB,MAAsB,gBAAXA,IAEHhS,MAAOgS,EAAOjQ,EAAKkQ,YACnBvL,KAAMsL,EAAOjQ,EAAKmQ,WAClBjN,SAAU+M,EAAO/M,WAAY,IAI7ByB,KAAM5C,OAAOkO,GAAShS,MAAOgS,SAI/BjT,OAAOY,KAAKmS,GAAStL,IAAI,SAAAxG,GAC/B2E,GAAIqN,GAASF,EAAQ9R,MAUrB,OAPsB,gBAAXgS,KACPA,GAAUtL,KAAM5C,OAAOkO,KAI3BA,EAAOhS,MAAQgS,EAAOjQ,EAAKkQ,aAAejS,EAEnCgS,KAMnBG,yBAEI,IAAKxN,WADCkN,EAAc9P,KAAK8P,YAChB3B,EAAI,EAAGA,EAAI2B,EAAYjT,OAAQsR,IACpC,GAAI2B,EAAY3B,GAAGlQ,QAAU+B,EAAKqQ,WAC9B,MAAIrQ,GAAKkN,aACE4C,EAAY3B,GAEhB2B,EAAY3B,GAAGlQ,QAKtC6D,OACIoO,YACI7R,MAAO0D,QACPC,QAAS,SAEbmO,WACI9R,MAAO0D,QACPC,QAAS,SAGjBI,OACIiO,oBAAWpS,EAAOqS,GACVrS,IAAUqS,GAGdtQ,KAAKyC,MAAM,QAASzC,KAAKoQ,gBAE7BnS,eAAMA,EAAOqS,GACLrS,IAAUqS,IAGdtQ,KAAKqQ,WAAapS,iBC3CdgD,qxBACZmH,QAASqH,UAAWC,kBAAmBa,aACvCrP,gBACI,OACImP,WAAYrQ,KAAK/B,QAGzBsD,UACI6M,sBACI,MAAOpO,MAAKsB,MAAQ,OAAOtB,KAAKsB,MAAU;GAGlDQ,OACI7D,SACA8R,SACI1R,MAAOwF,MAAO7G,QACdgF,QAAS,KACT+C,UAAU,GAEdyL,SACInS,KAAM4D,QACND,SAAS,GAEbkL,cACI7O,KAAM4D,QACND,SAAS,uBCvCLf,6NACZmH,QAASqH,UAAW9C,YACpBpL,UACIkP,uBACI,MAAOzQ,MAAK0Q,UAAY1Q,KAAK0Q,UAAU1Q,KAAK/B,OAAS+B,KAAK/B,QAGlE6D,OACI7D,OACI+D,QAAS,MAEb0O,WACIrS,KAAMsS,uBCQF1P,mmBACZmH,QAASqH,UAAW9C,YACpBxI,YAAayM,iBAAAA,kBACbrP,UACIsP,qBACI,OAAQ7Q,KAAK/B,OAAS,IAAIQ,WAAW0I,MAAM,MAAMtK,SAGzD0F,SACIuO,gBAAO7S,GACH,GAAI+B,KAAK0Q,UAAW,CAChBtU,GAAM2U,GAAiB/Q,KAAK0Q,UAAUzS,EAClC8S,KAAmB9S,IACnBA,EAAQ8S,EACR/Q,KAAKgI,MAAM8G,MAAM7Q,MAAQ8S,GAGjC,MAAO9S,IAEX+S,iBAAQ/S,GACC+B,KAAKiR,gBACNhT,EAAQ+B,KAAK8Q,OAAO7S,IAExB+B,KAAKyC,MAAM,QAASxE,IAExBiT,kBAASjT,GACLA,EAAQ+B,KAAK8Q,OAAO7S,GACpB+B,KAAKyC,MAAM,QAASxE,GACpB+B,KAAKyC,MAAM,SAAUxE,IAEzBkT,iBAAQpN,GACJ/D,KAAKyC,MAAM,QAASsB,KAG5BjC,OACI7D,OACI+D,QAAS,MAEb3D,MACIA,KAAM0D,OACNC,QAAS,QAEboP,QACI/S,KAAM4D,QACND,SAAS,GAEbqP,aACIhT,KAAM0D,OACNC,QAAS,MAEbsP,MACIjT,KAAM8D,OACNH,QAAS,MAEbuP,UACIlT,KAAM4D,QACND,SAAS,GAEb0O,WACIrS,KAAMsS,UAEVM,eACI5S,KAAM4D,QACND,SAAS,eCXLf,y6BACZmH,QAASqH,UAAW9C,YACpBzL,gBACI,OACIsQ,aAAc,KACdC,UAAU,IAGlBlQ,UACImQ,yBACI,MAAK1R,MAAKwR,cAA6C,IAA7BxR,KAAKwR,aAAa3U,OAIxCmD,KAAK2R,SAC4B,IAA7B3R,KAAKwR,aAAa3U,OACXmD,KAAKwR,aAAa,GAAGnC,KAGzBrP,KAAK4R,eACPnO,QAAQ,SAAUzD,KAAKwR,aAAa/M,IAAI,SAAAoN,SAAQA,GAAKxC,OAAM9O,KAAK,MAChEkD,QAAQ,SAAUzD,KAAKwR,aAAa3U,QAGtCmD,KAAKwR,aAAanC,KAbdrP,KAAKqR,aAAe,kBAenCS,+BACI,MAAO9R,MAAK+R,cAAgB/R,KAAK2R,SAAW,eAAiB,iBAGrEvP,OACIoP,sBAAaQ,EAAQjH,GACbiH,IAAWjH,KAIViH,GAAUhS,KAAK2R,SAChB3R,KAAKyC,MAAM,YAEXzC,KAAKyC,MAAM,QAASuP,MAIhCzP,SACI0P,sBAAalO,aAET/D,MAAKyC,MAAM,SAAUsB,EAIrB3H,IAAMoI,GAAQT,EAAEmO,cAAgBnO,EAAEmO,aAAa1N,KAC/C,IAAIA,IAAUxE,KAAKmS,WAAY,CAE3B,IAAKvP,GADCwP,MACGjE,EAAI,EAAGA,EAAI3J,EAAM3H,OAAQsR,IAAK,CACnC/R,GAAMsI,GAAOF,EAAM2J,GAAGkE,kBAClB3N,IACA0N,EAAMlU,KAAK8B,EAAKsS,iBAAiB5N,IAMzC,WAHA6N,SAAQC,IAAIJ,GAAOK,KAAK,SAAAC,GACpB1S,EAAK2S,SAAS9O,MAAMzE,UAAUwT,OAAOC,SAAUH,MAMvD1S,KAAK2S,SAAS5O,EAAEqC,OAAO0M,OAAS/O,EAAEmO,aAAaY,QAEnDH,kBAASG,aACL,KAAKA,EAED,YADA9S,KAAKwR,aAAe,KAIxB,KAAKxR,KAAK2R,SAEN,YADA3R,KAAKwR,aAAesB,EAAM,GAM9B,KAAKlQ,GADCmQ,MACG5E,EAAI,EAAGA,EAAI2E,EAAMjW,OAAQsR,IAC1B2E,EAAM3E,GAAG9P,KAAKM,MAAMqB,EAAKgT,SACzBD,EAAW7U,KAAK4U,EAAM3E,GAI9BnO,MAAKwR,aAAeuB,GAExBE,kBAASlP,GACD/D,KAAKkT,SAITlT,KAAKyR,UAAW,EAChB1N,EAAEmO,aAAaiB,WAAa,SAEhCC,cAAKrP,GACG/D,KAAKkT,SAITlT,KAAKyR,UAAW,EACZ1N,EAAEmO,aAAaY,OAAS/O,EAAEmO,aAAaY,MAAMjW,OAAS,GACtDmD,KAAKiS,aAAalO,KAG1BuO,0BAAiB5N,EAAM2O,aAEnB,OAAO,IAAId,SAAQ,SAAAe,GACfD,EAAOA,GAAQ,GACX3O,EAAK6O,OAEL7O,EAAKmN,KAAK,SAAAA,GACNA,EAAK2B,MAAQH,EACbC,EAAQzB,KAELnN,EAAK+O,aAEZ/O,EAAKgP,eAAeC,YAAY,SAAAC,GAE5B,IAAKhR,GADCwP,MACGjE,EAAI,EAAGA,EAAIyF,EAAQ/W,OAAQsR,IAChCiE,EAAMlU,KAAK8B,EAAKsS,iBAAiBsB,EAAQzF,GAAIkF,EAAO3O,EAAK2K,KAAO,KAEpEkD,SAAQC,IAAIJ,GAAOK,KAAK,SAAAC,GACpBY,EAAQzP,MAAMzE,UAAUwT,OAAOC,SAAUH,YAOjE5Q,OACIkR,QACI3U,KAAM0D,OACNC,QAAS,IAEbqP,aACIhT,KAAM0D,OACNC,QAAS,MAEb+P,aACI1T,KAAM0D,OACNC,QAAS,MAEb2P,UACItT,KAAM4D,QACND,SAAS,GAEb6R,WACIxV,KAAM4D,QACND,SAAS,GAEbmQ,YACI9T,KAAM4D,QACND,SAAS,GAEb4P,gBACIvT,KAAM0D,OACNC,QAAS,gBAEbkR,QACI7U,KAAM4D,QACND,SAAS,GAEb8R,WACIzV,KAAM0D,OACNC,QAAS,iCCvOLf,qoBACZmH,QAASqH,UAAWK,YAAanD,YACjCzL,gBACI,OACImP,WAAYrQ,KAAK/B,QAGzB6D,OACI7D,SACA8R,SACI1R,MAAOwF,MAAO7G,QACd+H,UAAU,GAEdmI,cACI7O,KAAM4D,QACND,SAAS,gBCzBLf,iZACZM,YACAO,OACIiS,OACI1V,KAAM4D,QACND,SAAS,GAEbgS,gBACI3V,KAAM4D,QACND,SAAS,GAEbkH,QACI7K,KAAM0D,OACNC,QAAS,MAEbiS,MACI5V,KAAM0D,OACNC,QAAS,eCrBLf,sKACZM,UACI2S,wBACI,MAAQlU,MAAK2B,SAA4B,YAAjB3B,KAAK2B,QAA0C,SAAS3B,KAAK2B,QAAhC,iBAEzDwS,qBACI,MAAOnU,MAAKoU,KAAO,aAAe,KAG1CtS,OACIH,SACItD,KAAM0D,OACNC,QAAS,WAEboS,MACI/V,KAAM4D,QACND,SAAS,gBChBLf,+LACZa,OACIwB,KACIjF,KAAM0D,OACNC,QAAS,OAEbqS,OACIhW,KAAM4D,QACND,SAAS,KCNfsS,YAAc,IAAK,cAAe,SAAU,yBAElCrT,uMACZkD,YAAaC,MAAAA,OACb7C,UACIC,uBACI,OACI,kBACAxB,KAAKuU,UACLvU,KAAK6E,OAAS,SAAW,KACzB7E,KAAKkD,SAAW,WAAa,KAC7BlD,KAAKwU,SAAW,yBAA2B,OAGnDA,oBACI,MAAIxU,MAAKyU,UAAW,IAGbzU,KAAKyU,QAAUzU,KAAKoD,IAAMpD,KAAKmD,MAAQmR,WAAWnO,QAAQnG,KAAKsD,QAAS,IAEnFiR,qBACI,MAAOvU,MAAK2B,QAAU,mBAAmB3B,KAAK2B,QAAY,MAE9D+S,iBACI,MAAI1U,MAAKsD,IACEtD,KAAKsD,IAERtD,KAAKoD,IAAMpD,KAAKmD,KAAQ,SAAW,QAGnDrB,OACIwB,KACIjF,KAAM0D,OACNC,QAAS,MAEb6C,QACIxG,KAAM4D,QACND,SAAS,GAEbyS,QACIpW,KAAM4D,QACND,QAAS,MAEbkB,UACI7E,KAAM4D,QACND,SAAS,GAEbL,SACItD,KAAM0D,OACNC,QAAS,MAEboB,IACI/E,KAAM0D,OACNC,QAAS,MAEbmB,MACI9E,KAAM0D,OACNC,QAAS,eCnDLf,gXACZM,UACIoT,8BACI,MAAO,cAAc3U,KAAK4U,gBAGlC9S,OACI+S,YACIxW,KAAM4D,QACND,SAAS,GAEb4S,eACIvW,KAAM0D,OACNC,QAAS,SCqDf8S,gBACF,oFACA,mFACA,oFACA,sFACA,8FACA,wGACFvU,KAAK,YAESU,szDACZkD,YAAa4Q,KAAAA,MACb7T,gBACI,OACI8T,YAAY,EACZC,aAAcjV,KAAKkV,aAAe,OAG1C/H,OACIwC,KAAM,UACN/L,MAAO,UAEXrC,UACImG,gBACI,GAAwB,mBAAbd,UACP,MAAOA,UAASmI,cAAc,UAI1C3M,OACImF,iBAAQ4N,EAASC,GACTD,IAAYC,IAIZD,EACAnV,KAAK6B,OAEL7B,KAAKqV,UAIjBvT,OACI2G,IACIpK,KAAM0D,OACNC,QAAS,MAEbwH,OACInL,KAAM0D,OACNC,QAAS,IAEbuD,MACIlH,KAAM0D,OACNC,QAAS,MAEbsT,MACIjX,KAAM4D,QACND,SAAS,GAEbuT,YACIlX,KAAM0D,OACNC,QAAS,SAEbwT,SACInX,KAAM0D,OACNC,QAAS,MAEbyT,iBACIpX,KAAM4D,QACND,SAAS,GAEb0T,YACIrX,KAAM4D,QACND,SAAS,GAEb2T,YACItX,KAAM4D,QACND,SAAS,GAEb4T,YACIvX,KAAM4D,QACND,SAAS,GAEb6T,iBACIxX,KAAM4D,QACND,SAAS,GAEbkT,aACIlT,QAAS,OAGjBO,SACIV,gBACQ7B,KAAKgV,aAGThV,KAAKgV,YAAa,EAClBhV,KAAKkE,MAAMzB,MAAM,eAAgBzC,KAAKyI,IACtCzI,KAAK0H,KAAKkD,UAAUC,IAAI,cACxB7K,KAAKyC,MAAM,SACXzC,KAAKyC,MAAM,UAAU,GACG,mBAAbmE,YAEPA,SAASI,oBAAoB,UAAWhH,KAAK8V,cAAc,GAE3DlP,SAASnK,iBAAiB,UAAWuD,KAAK8V,cAAc,MAGhET,cAAKU,GACD,GAAK/V,KAAKgV,WAAV,CAKApS,GAAIoT,IAAW,EACTjS,GACFgS,KAAAA,EACAE,kBACID,GAAW,GAKnBhW,MAAKyC,MAAM,UAAU,GACrBzC,KAAKyC,MAAM,SAAUsB,GAEjBgS,KAAS,EACT/V,KAAKyC,MAAM,KAAMsB,GACVgS,KAAS,GAChB/V,KAAKyC,MAAM,SAAUsB,GAIpBiS,IACuB,mBAAbpP,YAEPA,SAASI,oBAAoB,UAAWhH,KAAK8V,cAAc,GAE3D9V,KAAKkW,iBAETlW,KAAKgV,YAAa,EAClBhV,KAAKkE,MAAMzB,MAAM,gBAAiBzC,KAAKyI,IACvCzI,KAAK0H,KAAKkD,UAAUS,OAAO,iBAGnC8K,sBAEQnW,KAAKyV,iBACLzV,KAAKqV,QAGbtN,iBAEQ/H,KAAKgV,YAAchV,KAAK0V,YACxB1V,KAAKqV,QAGb/O,sBAEI1D,GAAI3G,EACA+D,MAAKgI,MAAMqB,SACXpN,EAAK+D,KAAKgI,MAAMqB,OAAO0F,cAAc+F,kBAEpC7Y,GAAM+D,KAAKgI,MAAMN,OAClBzL,EAAK+D,KAAKgI,MAAMN,KAAKqH,cAAc+F,kBAElC7Y,GAAM+D,KAAKgI,MAAMkB,SAClBjN,EAAK+D,KAAKgI,MAAMkB,OAAO6F,cAAc+F,iBAEpC7Y,IACDA,EAAK+D,KAAKgI,MAAM6G,SAEhB5S,GAAMA,EAAGoK,OACTpK,EAAGoK,SAGX6P,yBACI,GAAIlW,KAAKiV,aAAc,CACnB7Y,GAAMH,GAAmC,gBAAtB+D,MAAKiV,aACpBrO,SAASmI,cAAc/O,KAAKkV,aAC5BlV,KAAKiV,YAELhZ,IAAMA,EAAGwK,KAA+B,kBAAjBxK,GAAGwK,IAAIJ,MAC9BpK,EAAGwK,IAAIJ,QACApK,GAA0B,kBAAbA,GAAGoK,OACvBpK,EAAGoK,UAIfyP,sBAAa/R,GAGL/D,KAAKgV,YACLpO,WAAa7C,EAAEqC,QACfpG,KAAKgI,MAAM6G,SACX7O,KAAKgI,MAAM6G,UAAY9K,EAAEqC,SACxBpG,KAAKgI,MAAM6G,QAAQ5H,SAASlD,EAAEqC,SAC/BpG,KAAKgI,MAAM6G,QAAQxI,UAI/BhF,6BACIrB,MAAKkE,MAAMoD,IAAI,cAAe,SAACmB,EAAI2N,GAC3B3N,IAAOzI,EAAKyI,KACZzI,EAAKiV,aAAemB,GAAapW,EAAKiV,cAAgBjV,EAAKkV,aAAe,KAC1ElV,EAAK6B,UAIb7B,KAAKkE,MAAMoD,IAAI,cAAe,SAAAmB,GACtBA,IAAOzI,EAAKyI,IACZzI,EAAKqV,UAIjB/S,mBACQtC,KAAKuH,WAAY,GACjBvH,KAAK6B,QAGbkF,qBAE4B,mBAAbH,WACPA,SAASI,oBAAoB,UAAWhH,KAAK8V,cAAc,UCvSvD7U,+JACZM,UACIC,uBACI,OACI6U,KAAK,EACLC,aAActW,KAAKuW,SACnBC,WAAYxW,KAAKyW,KACjBC,YAAa1W,KAAK2W,MAClBC,cAAe5W,KAAK0F,SACpBmR,WAAY7W,KAAK8W,QAI7BhV,OACIzD,MACIA,KAAM0D,OACNC,QAAS,MAEb8U,MACIzY,KAAM4D,QACND,SAAS,GAEbyU,MACIpY,KAAM4D,QACND,SAAS,GAEb2U,OACItY,KAAM4D,QACND,SAAS,GAEb0D,UACIrH,KAAM4D,QACND,SAAS,GAEbuU,UACIlY,KAAM4D,QACND,SAAS,cC5BLf,yQACZkD,YAAaC,MAAAA,OACb7C,UACIC,uBACI,OACI,WACAxB,KAAK6E,OAAS,SAAW,GACzB7E,KAAKkD,SAAW,WAAa,MAIzCpB,OACI+C,QACIxG,KAAM4D,QACND,SAAS,GAEbkB,UACI7E,KAAM4D,QACND,SAAS,GAEboB,IACI/E,MAAO0D,OAAQ/E,SAEnBmG,MACI9E,KAAM0D,QAEVwB,OACIlF,KAAM4D,UAGdM,SACIyC,iBAAQjB,GAEJ/D,KAAKkE,MAAMzB,MAAM,kBAAmBzC,MACpCA,KAAKyC,MAAM,QAASsB,uBCfhB9C,guCACZmH,QACIC,SACAC,UAEJpH,gBACI,OACIqG,SAAS,IAGjBhG,UACIgH,0BACI,MAAOvI,MAAKwI,MAAQ,kBAAoB,KAGhD1G,OACI0G,OACInK,KAAM4D,QACND,SAAS,IAGjBO,SACI2E,4BACIlH,KAAKuH,SAAU,gBC9CXtG,6OACZM,UACIC,uBACI,OACI,iBACA,kBAAoBxB,KAAKwN,YAKrC1L,OACI+L,OACIxP,KAAM0D,OACNC,QAAS,qBAEbwL,UACInP,KAAM0D,OACNC,QAAS,SAEboE,QACIrB,UAAU,IAIlBxC,SACIyC,mBACI5I,GAAMgK,GAASpG,KAAKoG,MAChBA,GAAOwB,QACPxB,EAAOwB,SAEX5H,KAAKkE,MAAMzB,MAAM,mBAAoBzC,KAAKoG,mBClCtCnF,8IACZM,UACIC,uBACI,OACI,SACAxB,KAAK3B,KAAO,UAAU2B,KAAK3B,KAAS,KACpC2B,KAAK2B,QAAU,MAAM3B,KAAK2B,QAAY,KACtC3B,KAAK+W,MAAQ,SAAS/W,KAAK+W,MAAU,KACrC/W,KAAKgX,OAAS,aAAe,KAC7BhX,KAAKiX,WAAa,qBAAqBjX,KAAKkX,iBAAqB,QAI7EpV,OACIzD,MACIA,KAAM0D,OACNC,QAAS,SAEbL,SACItD,KAAM0D,QAEVkV,YACI5Y,KAAM4D,QACND,SAAS,GAEbkV,kBACI7Y,KAAM0D,OACNC,QAAS,MAEb+U,OACI1Y,KAAM0D,QAEViV,QACI3Y,KAAM0D,uBCMFd,q7DACZC,gBACI,OACIiW,KAAM,EACNC,UAAU,EACVC,UAAU,EACVC,YAAatX,KAAK/B,QAG1BsD,UACIgW,yBACInb,GAAMkR,GAASkK,KAAKC,KAAKzX,KAAK0X,UAAY1X,KAAK2X,QAC/C,OAAQrK,GAAS,EAAK,EAAIA,GAE9BpI,mBACI,MAAQlF,MAAKuF,MAAsB,YAAdvF,KAAKuF,KAA0B,OAAOvF,KAAKuF,KAAjB,IAEnDqS,qBAWI,MAVI5X,MAAKsX,YAActX,KAAKuX,gBACxBvX,KAAKsX,YAAc,GAIvBtX,KAAKmX,KAAO,EACZnX,KAAKoX,UAAW,EAChBpX,KAAKqX,UAAW,EAGZrX,KAAKuX,eAAiBvX,KAAK6X,MACpB7X,KAAKuX,cAIZvX,KAAKsX,aAAetX,KAAK6X,MAAQ,GACjC7X,KAAKmX,KAAO,EACZnX,KAAKqX,UAAW,EACTrX,KAAK6X,MAAQ,GAIpB7X,KAAKsX,YAActX,KAAKuX,cAAgBvX,KAAK6X,MAAQ,GACrD7X,KAAKmX,KAAOnX,KAAKuX,cAAgBvX,KAAK6X,MAAQ,EAC9C7X,KAAKoX,UAAW,EACTpX,KAAK6X,MAAQ,IAIxB7X,KAAKmX,KAAOnX,KAAKsX,YAAc,EAC/BtX,KAAKoX,SAAWpX,KAAKsX,aAAetX,KAAK6X,MACzC7X,KAAKqX,SAAWrX,KAAKsX,aAAetX,KAAKuX,cAAgBvX,KAAK6X,MAAQ,EAC/D7X,KAAK6X,SAGpBtV,SACI0C,oBAAWiB,GACP,MAAQA,GAAQlG,KAAKmX,OAASnX,KAAKsX,YAAe,OAAOtX,KAAK2B,QAAY,OAAO3B,KAAK8X,kBAE1FC,sBAIJ3V,OACIkV,qBAAYU,EAASC,GACbD,IAAYC,GAIhBjY,KAAKyC,MAAM,QAASuV,IAExB/Z,eAAMia,EAAUC,GACRD,IAAaC,IACbnY,KAAKsX,YAAcY,KAI/BpW,OACI7D,OACII,KAAM8D,OACNH,QAAS,GAEb6V,OACIxZ,KAAM8D,OACNH,QAAS,GAEb2V,SACItZ,KAAM8D,OACNH,QAAS,IAEb0V,WACIrZ,KAAM8D,OACNH,QAAS,IAEbuD,MACIlH,KAAM0D,OACNC,QAAS,MAEbL,SACItD,KAAM0D,OACNC,QAAS,WAEb8V,kBACIzZ,KAAM0D,OACNC,QAAS,eCzHfoW,mBACFtU,OAAQA,MAAO,UACfuU,OAAQC,WAAY,OAAQC,WAAY,QACxClS,OAAQA,MAAO,OAAQmS,KAAM,SAG3BC,kBACFC,IAAK,gBACLC,OAAQ,aACRjQ,KAAM,eACNrB,MAAO,eAGLuR,oBAAsB,YAEtBC,gBACFhZ,SAAS,EACTiZ,SAAS,GAGPC,oBAAsB,cAEZ9X,opBACZa,OACIkX,aACI3a,KAAMwF,MACN7B,mBACI,WAGR6M,SACIxQ,KAAM0D,OACNC,QAAS,IAEbiX,UACI5a,MAAO8D,QACPH,QAAS,IACTkX,mBAAUjb,GACN,MAAOA,IAAS,IAGxBkb,OACI9a,MAAO8D,OAAQnF,QACfgF,QAAS,EACTkX,mBAAUjb,GACN,MAAqB,gBAAVA,GACAA,GAAS,EACC,OAAVA,GAAmC,gBAAVA,KACH,gBAAfA,GAAM4D,MACM,gBAAf5D,GAAMoX,MACbpX,EAAM4D,MAAQ,GACd5D,EAAMoX,MAAQ,KAM9B+D,QACI/a,KAAM0D,OACNC,QAAS,MACTkX,mBAAUjb,GAEN,MAAO,uCAAuCwB,KAAKxB,KAG3Dob,WACIhb,KAAM0D,OACNC,QAAS,MACTkX,mBAAUjb,GACN,MAAOjB,QAAOY,KAAK6a,kBAAkBtS,QAAQlI,MAAW,IAGhEqb,cACIjb,KAAMrB,OACNgF,QAAS,MAEbH,MACIxD,KAAM4D,QACND,QAAS,MAEbuX,cACIlb,KAAM0D,OACNC,QAAS,MACTkX,mBAAUjb,GAEN,MAAO,uCAAuCwB,KAAKxB,KAG3DuL,OACInL,KAAM0D,OACNC,QAAS,IAEbwX,UACInb,MAAO4D,QAASF,OAAQ8B,OACxB7B,QAAS,kBAAO,QAAS,UACzBkX,mBAAUjb,GAEN,GAAIA,KAAU,GAAmB,KAAVA,EACnB,OAAO,CACJ,IAAqB,gBAAVA,GACd,MAAOjB,QAAOY,KAAKwa,mBAAmBjS,QAAQlI,MAAW,CACtD,IAAI4F,MAAMmM,QAAQ/R,GAAQ,CAC7B7B,GAAMwB,GAAOZ,OAAOY,KAAKwa,kBAMzB,OALAna,GAAMG,QAAQ,SAAAsG,GACV,GAAI9G,EAAKuI,QAAQzB,MAAU,EACvB,OAAO,KAGR,EAEX,OAAO,KAKnBxD,gBACI,OACIuY,aAAczZ,KAAK6B,KACnB6X,WAAY1Z,KAAK6B,KACjB8X,UAAW,OAInBpY,UAMIqY,8BACI,MAAI5Z,MAAKwZ,YAAa,KAEc,gBAAlBxZ,MAAKwZ,UACXxZ,KAAKwZ,UAEVxZ,KAAKwZ,UAQhBK,4BACI,MAAQ7Z,MAAKqZ,WAAgC,YAAnBrZ,KAAKqZ,UAA0C,WAAWrZ,KAAKqZ,UAAhC,eAQ7DS,qBACI,MAAO9Z,MAAK6B,QAAS,IAAU7B,KAAKyZ,cAAgBzZ,KAAK6B,QAIjEO,OAII4W,uBACIhZ,KAAK+Z,cAQTH,4BAAmBI,EAAaC,GAC5Bja,KAAKka,gBAAgBF,EAAaC,IAMtCb,kBACIpZ,KAAK+Z,cAMTV,qBACIrZ,KAAK+Z,cAOTD,mBAAUhP,cACAqO,EAAQnZ,KAAKma,SAASrP,EAE5BQ,cAAatL,KAAKoa,UAEdjB,EACAnZ,KAAKoa,SAAWhP,WAAW,iBAAMpL,GAAKqa,cAAcvP,IAAMqO,GAE1DnZ,KAAKqa,cAAcvP,KAK/BvI,SAKI+X,qBAAYC,aAER,KAAKne,GAAMsI,KAAQ0T,mBAAkBmC,GACjCva,EAAKwa,SAAS/d,iBAAiBiI,EAAM,SAAAX,SAAK/D,GAAKya,aAAa1W,MAOpE2W,yBACI,GAAI1a,KAAK2a,UAAY3a,KAAK8Z,UAAW,CACjC9Z,KAAK2a,QAAQC,UACb5a,KAAK2a,QAAU,IAEfve,IAAMye,GAAO,GAAIrb,QAAO,eAAiBoZ,oBAAsB,QAAS,IACxE5Y,MAAKwa,SAASM,UAAY9a,KAAKwa,SAASM,UAAUrX,QAAQoX,EAAM,MAQxEJ,sBAAa1W,aAET,MAAI/D,KAAK4Z,mBAAmB/c,OAAS,GAAKmD,KAAKiZ,SAAW,GAAwB,OAAnBjZ,KAAK2Z,WAAsB5V,EAAEgX,WAAa/a,KAAK2Z,UAAY3Z,KAAKiZ,UAM/H,IAAK7c,GAAMme,KAAWnC,mBAClB,IAAKhc,GAAMwH,KAASwU,mBAAkBmC,GAClC,GAAI3W,IAAUG,EAAE1F,KAAM,CAClBjC,GAAMqY,GAAS2D,kBAAkBmC,GAAS3W,EAO1C,cAJe,WAAX6Q,GAAwBzU,EAAKyZ,cAA2B,SAAXhF,IAAwBzU,EAAKyZ,cAA2B,SAAXhF,KAC1FzU,EAAKyZ,cAAgBzZ,EAAKyZ,aAC1BzZ,EAAK2Z,UAAY5V,EAAEgX,cAavCZ,kBAAS7Y,GACL,MAA0B,gBAAftB,MAAKmZ,MACL7X,EAAQtB,KAAKmZ,MAAMtX,KAAO7B,KAAKmZ,MAAM9D,KAGzCrV,KAAKmZ,OAQhB6B,4BACI,OACIC,WAAYxC,iBAAiBzY,KAAKqZ,WAClCxZ,QAASG,KAAKkb,SACd9U,OAAQpG,KAAKwa,SACb9O,QAASmN,eACTsC,YAAavC,oBACbQ,OAAQpZ,KAAKoZ,OACbJ,YAAahZ,KAAKgZ,YAClBO,aAAcvZ,KAAKuZ,eAO3B6B,iCACIpb,MAAK0Z,YAAa,EAClBpO,aAAatL,KAAKoa,UAClBpa,KAAKoa,SAAWhP,WAAW,WACvBpL,EAAKkb,SAASnP,MAAMsP,QAAU,OAC9Brb,EAAK0a,iBACN3B,sBAMPuC,qCACQtb,MAAK2a,SACL3a,KAAK6H,UAAU,WACX7H,EAAK2a,QAAQnN,cASzB+N,wBAAehB,aAEX,KAAKne,GAAMsI,KAAQ0T,mBAAkBmC,GACjCva,EAAKwa,SAASxT,oBAAoBtC,EAAM,SAAAX,SAAK/D,GAAKya,aAAa1W,MAOvEgW,sBACQ/Z,KAAK2a,SACL3a,KAAK2a,QAAQZ,WAAW/Z,KAAKgb,qBAOrCQ,iCACIlQ,cAAatL,KAAKoa,UAEbpa,KAAK2a,UACN3a,KAAK2a,QAAU,GAAIc,QAAOzb,KAAKgb,qBAEnChb,KAAKkb,SAASnP,MAAMsP,QAAU,QAG9Brb,KAAKsb,kBAELtb,KAAK6H,UAAU,WACX7H,EAAK0Z,YAAa,KAO1BW,uBAAcqB,GACV1b,KAAKyC,MAAM,aAAciZ,GACrBA,GACA1b,KAAKwb,cACLxb,KAAKkE,MAAMzB,MAAM,oBAEjBzC,KAAKob,cACLpb,KAAKkE,MAAMzB,MAAM,qBASzByX,yBAAgBV,EAAUmC,gCACtBvf,IAAM4d,MACA4B,IAGNpC,GAASpb,QAAQ,SAAAsG,GACTiX,EAAgBxV,QAAQzB,MAAU,GAClCsV,EAAY9b,KAAKwG,KAKzBiX,EAAgBvd,QAAQ,SAAAsG,GAChB8U,EAASrT,QAAQzB,MAAU,GAC3BkX,EAAe1d,KAAKwG,KAK5BsV,EAAY5b,QAAQ,SAAAsG,SAAQ1E,GAAKsa,YAAY5V,KAC7CkX,EAAexd,QAAQ,SAAAsG,SAAQ1E,GAAKub,eAAe7W,OAI3DrD,6BACIrB,MAAKkE,MAAMoD,IAAI,gBAAiB,WAC5BtH,EAAKyZ,cAAe,KAI5BnX,mBAEItC,KAAKwa,SAAWxa,KAAKgI,MAAMuS,QAAQ9S,SAAS,IAAMzH,KAAKgI,MAAMuS,QAC7Dva,KAAKkb,SAAWlb,KAAKgI,MAAM6T,QAC3B7b,KAAKkb,SAASnP,MAAMsP,QAAU,OAC9Brb,KAAKoa,SAAW,EAGhBpa,KAAKka,gBAAgBla,KAAK4Z,oBAGtB5Z,KAAK8Z,WACL9Z,KAAKwb,eAIbvM,mBACIjP,KAAKsb,mBAGTQ,mCACI9b,MAAK4Z,mBAAmBxb,QAAQ,SAAAsG,SAAQ1E,GAAKub,eAAe7W,KAC5D4G,aAAatL,KAAKoa,UAClBpa,KAAK0a,4BCzaGzZ,4YACZM,UACIC,uBACI,OACI,eACAxB,KAAK+b,gBACJ/b,KAAKgc,SAAWhc,KAAKic,SAAY,uBAAyB,GAC3Djc,KAAKic,SAAW,wBAA0B,KAGlDC,uBACI,OACIC,MAAOnc,KAAKoc,SAAW,MAG/BL,2BACI,MAAO/b,MAAK2B,QAAU,MAAM3B,KAAK2B,QAAY,MAEjDya,oBACIhgB,GAAMigB,GAAI7E,KAAK8E,IAAI,GAAItc,KAAKuc,UAC5B,OAAO/E,MAAKgF,MAAO,IAAMH,EAAIrc,KAAK/B,MAAS+B,KAAKyc,KAAOJ,IAG/Dva,OACIka,SACI3d,KAAM4D,QACND,SAAS,GAEbia,UACI5d,KAAM4D,QACND,SAAS,GAEbua,WACIle,KAAM8D,OACNH,QAAS,GAEb/D,OACII,KAAM8D,OACNH,QAAS,GAEbya,KACIpe,KAAM8D,OACNH,QAAS,KAEbL,SACItD,KAAM0D,OACNC,QAAS,MAEb0a,cACIre,KAAM4D,QACND,SAAS,GAEb2a,WACIte,KAAM4D,QACND,SAAS,KCxDfvD,SAAW,SAAAme,GACb,MAAKA,GAIDA,YAAa5f,QACNA,OAAOY,KAAKgf,GAAGnY,IAAI,SAAAoY,SAAKpe,UAASme,EAAEC,MAAKtc,KAAK,KAGjDwB,OAAO6a,GAPH,IAUTE,mBAAqB,SAACC,EAAGC,EAAGC,GAC9B,MAAOxe,UAASse,EAAEE,IAASC,cAAcze,SAASue,EAAEC,IAAUE,QAAYC,SAAS,YAGvEnc,6sBACZkD,YAAakZ,YAAAA,aACbnc,gBACI,OACI+b,OAAQ,KACRK,UAAU,IAGlBxb,OACI0C,OACInG,KAAMwF,MACN7B,QAAS,sBAEbub,QACIlf,KAAMrB,OACNgF,QAAS,cAGbga,SACI3d,KAAM4D,QACND,SAAS,GAEbqW,OACIha,KAAM4D,QACND,SAAS,GAEb2V,SACItZ,KAAM8D,OACNH,QAAS,MAEbwb,WACInf,KAAM0D,OACNC,QAAS,MAEbsV,aACIjZ,KAAM8D,OACNH,QAAS,GAEblE,QACIO,MAAO0D,OAAQvC,OAAQmR,UACvB3O,QAAS,MAEbyb,aACIpf,KAAMsS,SACN3O,QAAS,MAEb0b,eACIrf,KAAMsS,SACN3O,QAAS,MAEb/D,OACII,KAAMwF,MACN7B,QAAS,uBAIjBT,UACIoc,4BACI,KAAK3d,KAAKwE,MACN,QAGJ,IAAIxE,KAAK0d,cACL,MAAO1d,MAAK0d,cAAc1d,KAG9B4C,IAAI4B,GAAQxE,KAAKwE,MAAMgC,OAGvB,IAAIxG,KAAKlC,OACL,GAAIkC,KAAKlC,iBAAkB6S,UACvBnM,EAAQA,EAAM1G,OAAOkC,KAAKlC,YACvB,CACH8E,GAAIgb,EAEAA,GADA5d,KAAKlC,iBAAkB0B,QACfQ,KAAKlC,OAEL,GAAI0B,QAAO,KAAOQ,KAAKlC,OAAS,KAAM,MAElD0G,EAAQA,EAAM1G,OAAO,SAAA4G,GACjBtI,GAAMqD,GAAOme,EAAMne,KAAKhB,SAASiG,GAEjC,OADAkZ,GAAMC,UAAY,EACXpe,IAMnBrD,GAAMqhB,GAAczd,KAAKyd,aAAeX,kBAcxC,OAbI9c,MAAKid,SACLzY,EAAQA,EAAMsZ,KAAK,SAACf,EAAGC,GACnB5gB,GAAM2hB,GAAIN,EAAYV,EAAGC,EAAGhd,EAAKid,OACjC,OAAOjd,GAAKsd,SAAWS,EAAIA,GAAI,KAIvC/d,KAAKyC,MAAM,QAAS+B,GAGhBxE,KAAK2X,UACLnT,EAAQA,EAAMgC,OAAOxG,KAAKsX,YAAc,GAAKtX,KAAK2X,QAAS3X,KAAKsX,YAActX,KAAK2X,UAEhFnT,IAGfjC,SACIyb,oBAAWtZ,EAAMwB,GACblG,KAAKyC,MAAM,cAAeiC,EAAMwB,IAEpC+X,mBAAUC,EAAOC,GACb,MAAKD,GAAME,UAKPD,IAAQne,KAAKid,SACbjd,KAAKsd,UAAYtd,KAAKsd,eAG1Btd,KAAKid,OAASkB,SARVne,KAAKid,OAAS,eC/Fdhc;gmBACZC,gBACI,OACImd,WAAYre,KAAK/B,MACjBwY,UAGR3U,OACI2G,IACIpK,KAAM0D,OACNC,QAAS,IAEbsc,QACIjgB,KAAM4D,QACND,SAAS,GAEbuc,MACIlgB,KAAM4D,QACND,SAAS,GAEbwc,OACIngB,KAAM4D,QACND,SAAS,GAEb/D,OACII,KAAM8D,OACNH,QAAS,GAEb2U,OACItY,KAAM4D,QACND,SAAS,GAEbyc,MACIpgB,KAAM4D,QACND,SAAS,GAEb2W,QACIta,KAAM4D,QACND,SAAS,IAGjBI,OACIic,oBAAWvT,EAAKtD,GACRsD,IAAQtD,IAIZxH,KAAKkE,MAAMzB,MAAM,eAAgBzC,KAAM8K,EAAK9K,KAAKyW,KAAK3L,IACtD9K,KAAKyC,MAAM,QAASqI,GACpB9K,KAAKyW,KAAK3L,GAAKrI,MAAM,WAEzBxE,eAAM6M,EAAKtD,GACHsD,IAAQtD,GAIZxH,KAAK0e,OAAO5T,IAEhBwK,cAAKxK,EAAKtD,aACFsD,KAAQtD,GAIZxH,KAAKyW,KAAKrY,QAAQ,SAAAsG,GACd1E,EAAK2e,KAAKja,EAAM,OAAQoG,OAIpCvJ,UACI+T,gBACI,OAAQtV,KAAKse,QAEjBM,oBACI,MAAO5e,MAAK2W,MAAQ,QAAU,SAGtCpU,SAIIsc,cAAKC,GACD,MAAc,KAANA,EAAW,EAAKA,EAAI,EAAI,GAAI,GAMxCC,mBACI/e,KAAK0e,OAAO1e,KAAKqe,YAAY,EAAO,IAMxCW,uBACIhf,KAAK0e,OAAO1e,KAAKqe,YAAY,GAAO,IAMxCK,gBAAOxY,EAAO+Y,EAAO7F,GAIjB,GAHAA,EAASA,GAAU,EAGd6F,GAAU/Y,EAAQkT,IAAYpZ,KAAKqe,WAAxC,CAIAjiB,GAAM8iB,GAAMlf,KAAKyW,KAAKvQ,EAAQkT,EAG9B,IAAK8F,EAAL,CAKA,GAAIA,EAAIhc,SAKJ,YAJIkW,GAEApZ,KAAK0e,OAAOxY,EAAO+Y,EAAO7F,EAASpZ,KAAK6e,KAAKzF,IAMjDpZ,MAAKyW,KAAKzW,KAAKqe,aACfre,KAAK2e,KAAK3e,KAAKyW,KAAKzW,KAAKqe,YAAa,eAAe,GAIzDre,KAAK2e,KAAKO,EAAK,eAAe,GAG9Blf,KAAKqe,WAAanY,EAAQkT,KAM9B+F,gCAEQnf,MAAKof,OAAOpd,QACZhC,KAAKyW,KAAOzW,KAAKof,OAAOpd,QAAQlE,OAAO,SAAAohB,SAAOA,GAAIG,oBAAqB,IAClE5a,IAAI,SAAAya,SAAOA,GAAIG,oBAEpBrf,KAAKyW,QAGTzW,KAAKyW,KAAKrY,QAAQ,SAAA8gB,GACdlf,EAAK2e,KAAKO,EAAK,OAAQlf,EAAKsV,MAC5BtV,EAAK2e,KAAKO,EAAK,OAAQlf,EAAKye,OAIhC7b,IAAI+D,GAAW3G,KAAKqe,UAEI,QAApBre,KAAKqe,YAA2ClB,SAApBnd,KAAKqe,YACjCre,KAAKyW,KAAKrY,QAAQ,SAAC8gB,EAAKhZ,GAChBgZ,EAAIra,SACJ8B,EAAWT,IAMvBtD,IAAIwW,GAAS,CACTzS,GAAW3G,KAAKyW,KAAK5Z,OAAS,IAC9Buc,GAAS,GAGbpZ,KAAK0e,OAAO/X,GAAY,GAAG,EAAMyS,KAGzC9W,mBACItC,KAAKmf,aAGLG,WAAWtf,KAAKgI,MAAMuX,cAAevf,KAAKmf,WAAWK,KAAKxf,OAAQ7C,SAAS,WC1NnE8D,qlBACZsB,SACIuJ,iBACI9L,KAAK6B,MAAO,GAEhB4d,uBACIzf,KAAK6B,MAAO,IAGpBX,gBACI,OACIoU,MAAM,EACNoK,aAAa,EACbjB,MAAM,EACN5c,MAAM,IAGdN,UACIoe,wBACI,MAAO3f,MAAK4f,WAAa5f,KAAKyI,GAAMzI,KAAKyI,GAAK,oBAAuB,QAG7E3G,OACI2G,IACIpK,KAAM0D,OACNC,QAAS,IAEb4d,UACIvhB,KAAM0D,OACNC,QAAS,IAEbwH,OACInL,KAAM0D,OACNC,QAAS,IAEb6d,UACIxhB,KAAM0D,OACNC,QAAS,MAEbkB,UACI7E,KAAM4D,QACND,SAAS,GAEb6C,QACIxG,KAAM4D,QACND,SAAS,GAEbmB,MACI9E,KAAM0D,OACNC,QAAS,gBCzCLf,mdACZ6L,QAASgT,SACThe,OACI0X,UACInb,MAAO4D,QAASF,OAAQ8B,OACxB7B,QAAS,g/BpD7BfhE,kBAAoBqa,OAAO,EAAMvU,OAAO,EAAMuC,OAAO,GqDErD/I,cAAgBwG,OAAO,WAGzB0b,cAAKvjB,EAAIoB,GACL+I,QAAOnK,EAAIoB,EAASC,aAAc,SAACyiB,MAAC3iB,aAASI,MACzCJ,GAAQgB,QAAQ,SAAAgI,GACZ5I,EAAG0G,MAAMzB,MAAM,mBAAoB2D,SCN7C9I,gBAAgBwG,OAAO,YAGzB0b,cAAKvjB,EAAIoB,GACL+I,QAAOnK,EAAIoB,EAASC,eAAc,SAACyiB,MAAC3iB,aAASI,MACzCJ,GAAQgB,QAAQ,SAAAgI,GACZ5I,EAAG0G,MAAMzB,MAAM,cAAe2D,EAAQnK,SrD8EhDoQ,YAA8B,mBAAX/P,OAErB+P,cAAa/P,OAAO0jB,UAAYA,QAAQ5gB,UAAUQ,UAClDogB,QAAQ5gB,UAAUQ,QAAU,SAAUqgB,GAClC7jB,GAEI+R,GAFE+R,GAAWlgB,KAAK4G,UAAY5G,KAAKmgB,eAAezZ,iBAAiBuZ,GACnEhkB,EAAK+D,IAET,GAGI,KAFAmO,EAAI+R,EAAQrjB,SAEHsR,GAAK,GAAK+R,EAAQxb,KAAKyJ,KAAOlS,UAEjCkS,EAAI,IAAOlS,EAAKA,EAAGmkB,eAC7B,OAAOnkB,IAQfG,IAAMuD,MAAO,gBACP0gB,MAAQ,sBACRC,KAAO,mBAEP7f,SACFZ,QAAS,OACTuZ,OAAQ,GACRmH,OAAQ,OACRC,SAAU,KAGRC,aACF5gB,QAAS,mBACTuZ,OAAQ,SACRmH,OAAQ,SACRC,SAAU,UAGRE,WACFC,cAAe,gBACfC,cAAe,gBACfC,gBAAiB,kBACjBC,SAAU,WACVC,UAAW,kBACXC,OAAQ,UAGN7gB,UACF6gB,OAAQ,UACRC,eAAgB,oBAChBC,IAAK,OACLC,WAAY,cACZ/gB,UAAW,YACXC,WAAY,mBACZ+gB,SAAU,YACV9gB,eAAgB,iBAChBugB,gBAAiB,oBAGfQ,cACFC,OAAQ,SACRC,SAAU,YAGRC,SAA6B,mBAAXllB,OA4ExByD,WAAUX,UAAU4B,aAAe,SAAU3D,aAKzC,IAJIA,EAAQokB,MAERzhB,KAAKQ,QAAQX,QAAU,IAAMxC,EAAQokB,KAErCpkB,EAAQQ,UAAUhB,OAAS,EAC3B,IAAK+F,GAAIuL,GAAI,EAAGA,EAAI9Q,EAAQQ,UAAUhB,OAAS,EAAGsR,IAC1C,QAAQ1O,KAAKpC,EAAQQ,UAAUsQ,IAE/BnO,EAAKQ,QAAQ4Y,OAASsI,SAASrkB,EAAQQ,UAAU,GAAI,IAC9C,sBAAsB4B,KAAKpC,EAAQQ,UAAUsQ,MAEpDnO,EAAKQ,QAAQ+f,OAASljB,EAAQQ,UAAUsQ,GAIvB,iBAAlB9Q,GAAQY,MAEf+B,KAAKQ,QAAQX,QAAUxC,EAAQY,MACC,gBAAlBZ,GAAQY,MAEtB+B,KAAKQ,QAAQ4Y,OAAS5B,KAAKgF,MAAMnf,EAAQY,OACT,gBAAlBZ,GAAQY,QAEtB+B,KAAKQ,QAAUxD,OAAOC,UAAW+C,KAAKQ,QAASnD,EAAQY,QAG3Dc,gBAAgBY,KAAMK,KAAKQ,QAASigB,YAEpCrkB,IAAMoB,GAAKc,MAAM0B,KAAKC,SAKtB,OAJIzC,IAAMA,EAAG0G,QACTlE,KAAKc,OAAStD,EAAG0G,OAGdlE,MAIXD,UAAUX,UAAUuiB,OAAS,WACzBvlB,GAAMwlB,GAAW5hB,KAAK6hB,cAUtB,OATID,KACyB,SAArBA,EAASE,SACTF,EAASnlB,iBAAiB,SAAUuD,MAAM,GAE9C1D,OAAOG,iBAAiB,SAAUuD,MAAM,GACxC1D,OAAOG,iBAAiB,oBAAqBuD,MAAM,GACnD1D,OAAOG,iBAAiB,SAAUuD,MAAM,IAGrCA,MAIXD,UAAUX,UAAU2iB,SAAW,WAC3B3lB,GAAMwlB,GAAW5hB,KAAK6hB,cAUtB,OATID,KACyB,SAArBA,EAASE,SACTF,EAAS5a,oBAAoB,SAAUhH,MAAM,GAEjD1D,OAAO0K,oBAAoB,SAAUhH,MAAM,GAC3C1D,OAAO0K,oBAAoB,oBAAqBhH,MAAM,GACtD1D,OAAO0K,oBAAoB,SAAUhH,MAAM,IAGxCA,MAIXD,UAAUX,UAAU4iB,QAAU,sBACpBJ,EAAW5hB,KAAK6hB,cACtB,KAAKD,EACD,MAAO5hB,KAGX5D,IAAM6lB,GAAkC,SAArBL,EAASE,QAAqBT,aAAaC,OAASD,aAAaE,SAC9EW,EAAuC,SAAxBliB,KAAKQ,QAAQ+f,OAAoB0B,EAAajiB,KAAKQ,QAAQ+f,OAC1E4B,EAAaD,IAAiBb,aAAaC,OAAS,EAAIthB,KAAKoiB,eAEnEpiB,MAAKU,YACLV,KAAKW,YACLX,KAAKa,cAAgBb,KAAKqiB,kBAG1BjmB,IAAMkmB,GAAOze,MAAMzE,UAAUoH,MAAM9H,KAAKsB,KAAKC,SAASyG,iBAAiB1G,KAAKE,WA2B5E,OAzBAoiB,GAAK7d,IAAI,SAAAxI,GACLG,GAAM+G,GAAOlH,EAAGsmB,aAAa,OAC7B,IAAIpf,GAA2B,MAAnBA,EAAKqf,OAAO,IAAuB,MAATrf,GAAgBA,EAAKgD,QAAQ,SAAU,EAAI,CAC7E/J,GAAMgK,GAASwb,EAAS7S,cAAc5L,EACtC,KAAKiD,EACD,MAAO,KAEXhK,IAAMqmB,GAAMrc,EAAOsc,uBACnB,IAAID,EAAItG,OAASsG,EAAIlY,OACjB,OACI6O,QAAS8I,IAAiBb,aAAaC,OAASmB,EAAI/J,IAAMtS,EAAOuc,WAAaR,EAC9Ehf,KAAAA,GAIZ,MAAO,QACRrF,OACC,SAAA4G,SAAQA,KACVoZ,KACE,SAACf,EAAGC,SAAMD,GAAE3D,OAAS4D,EAAE5D,SACzBhb,QAAQ,SAAAsG,GACN1E,EAAKU,SAASxC,KAAKwG,EAAK0U,QACxBpZ,EAAKW,SAASzC,KAAKwG,EAAKvB,QAGrBnD,MAIXD,UAAUX,UAAUmN,QAAU,qBAC1B,KAAKvM,KAAK6hB,aACN,MAAO7hB,KAEX5D,IAAMwmB,GAAY5iB,KAAKoiB,gBAAkBpiB,KAAKQ,QAAQ4Y,OAChDyJ,EAAe7iB,KAAKqiB,mBACpBS,EAAY9iB,KAAKQ,QAAQ4Y,OAASyJ,EAAe7iB,KAAK+iB,kBAM5D,IAJI/iB,KAAKa,gBAAkBgiB,GACvB7iB,KAAKgiB,UAGLY,GAAaE,EAAW,CACxB1mB,GAAMgK,GAASpG,KAAKW,SAASX,KAAKW,SAAS9D,OAAS,EAIpD,OAHImD,MAAKY,gBAAkBwF,GACvBpG,KAAKgjB,UAAU5c,GAEZpG,KAGX,GAAIA,KAAKY,eAAiBgiB,EAAY5iB,KAAKU,SAAS,IAAMV,KAAKU,SAAS,GAAK,EAGzE,MAFAV,MAAKY,cAAgB,KACrBZ,KAAKijB,SACEjjB,IAGX,KAAK4C,GAAIuL,GAAInO,KAAKU,SAAS7D,OAAQsR,KAAM,CACrC/R,GAAM8mB,GACFljB,EAAKY,gBAAkBZ,EAAKW,SAASwN,IACrCyU,GAAa5iB,EAAKU,SAASyN,KACDgP,SAAzBnd,EAAKU,SAASyN,EAAI,IACnByU,EAAY5iB,EAAKU,SAASyN,EAAI,GAE9B+U,IACAljB,EAAKgjB,UAAUhjB,EAAKW,SAASwN,IAIrC,MAAOnO,OAIXD,UAAUX,UAAU+jB,QAAU,WAE1BnjB,KAAK+hB,WAGLzW,aAAatL,KAAKe,gBAClBf,KAAKe,eAAiB,KACtBf,KAAKC,SAAW,KAChBD,KAAKQ,QAAU,KACfR,KAAKE,UAAY,KACjBF,KAAKU,SAAW,KAChBV,KAAKW,SAAW,KAChBX,KAAKY,cAAgB,KACrBZ,KAAKa,cAAgB,KACrBb,KAAKc,OAAS,MAOlBf,UAAUX,UAAUgkB,YAAc,SAAUrf,GAGxC,QAASsf,KACL/X,aAAatL,KAAKe,gBAClBf,KAAKe,eAAiBqK,WAAW,WAC7BkY,EAAKtB,UAAUzV,WAChB+W,EAAK9iB,QAAQggB,UAAY/f,QAAQ+f,UANxCpkB,GAAMknB,GAAOtjB,IASE,YAAX+D,EAAE1F,KACF2B,KAAKuM,UACa,sBAAXxI,EAAE1F,KACT2B,KAAKgiB,UAAUzV,UACG,WAAXxI,EAAE1F,MACTglB,KASRtjB,UAAUX,UAAUyiB,aAAe,WAC/B,GAAIL,SACA,MAAO,KAEXplB,IAAMwlB,GAAW5hB,KAAKQ,QAAQX,OAC9B,OAAK+hB,GAGDA,GAAY/iB,UAAU+iB,GACfA,EACoB,gBAAbA,GACG,SAAbA,EACOhb,SAASc,KAGbd,SAASmI,cAAc6S,GAE3B,KAXI,MAcf7hB,UAAUX,UAAUgjB,cAAgB,WAChChmB,GAAMwlB,GAAW5hB,KAAK6hB,cACtB,OAAKD,GAGuB,SAArBA,EAASE,QAAqBxlB,OAAOinB,YAAc3B,EAASgB,UAFxD,GAKf7iB,UAAUX,UAAUijB,iBAAmB,WACnCjmB,GAAMwlB,GAAW5hB,KAAK6hB,cACtB,OAAKD,GAGuB,SAArBA,EAASE,QACZtK,KAAKiF,IAAI7V,SAASc,KAAKmb,aAAcjc,SAASC,gBAAgBgc,cAC9DjB,EAASiB,aAJF,GAOf9iB,UAAUX,UAAU2jB,iBAAmB,WACnC3mB,GAAMwlB,GAAW5hB,KAAK6hB,cACtB,OAAKD,GAGuB,SAArBA,EAASE,QAAqBxlB,OAAOknB,YAAc5B,EAASc,wBAAwBnY,OAFhF,GAKfxK,UAAUX,UAAU4jB,UAAY,SAAU5c,aACtCpG,MAAKY,cAAgBwF,EACrBpG,KAAKijB,QAELrgB,IAAI6gB,GAAUzjB,KAAKE,UAAUiH,MAAM,IACnCsc,GAAUA,EAAQhf,IAAI,SAAA3E,GAClB,MAAOA,GAAW,UAAYsG,EAAS,MAG3ChK,IAAMsnB,GAAQ7f,MAAMzE,UAAUoH,MAAM9H,KAAKsB,KAAKC,SAASyG,iBAAiB+c,EAAQljB,KAAK,MAErFmjB,GAAMtlB,QAAQ,SAAAwG,GACV,GAAIA,EAAKgG,UAAU3D,SAASyZ,UAAUC,eAAgB,CAElDvkB,GAAMkM,GAAW1I,QAAQgF,EAAMzE,SAASihB,SACxC,IAAI9Y,EAAU,CACVlM,GAAMwL,GAASU,EAASyG,cAAc5O,SAAS0gB,gBAC3CjZ,IACA5H,EAAK2jB,gBAAgB/b,GAAQ,GAIrC5H,EAAK2jB,gBAAgB/e,GAAM,OAG3B5E,GAAK2jB,gBAAgB/e,GAAM,GAI3B5E,EAAK4jB,8BAA8Bhf,EAAMzE,SAAS8gB,gBAAiBP,UAAUI,SAAUJ,UAAUK,YAAY,KAKjH2C,GAASA,EAAM7mB,OAAS,GACpBmD,KAAKc,QAAUd,KAAKc,OAAO2B,OAC3BzC,KAAKc,OAAO2B,MAAM4d,MAAOja,IAKrCrG,UAAUX,UAAU6jB,OAAS,sBACnBY,EAAMhgB,MAAMzE,UAAUoH,MAAM9H,KAAKkI,SAASF,iBAAiB1G,KAAKE,WACtE2jB,GAAI/lB,OAAO,SAAA7B,GACP,GAAIA,EAAG2O,UAAU3D,SAASyZ,UAAUM,QAAS,CACzC5kB,GAAM+G,GAAOlH,EAAGsmB,aAAa,OAC7B,OAAuB,MAAnBpf,EAAKqf,OAAO,IAAqC,IAAvBrf,EAAKgD,QAAQ,MAK/C,OAAO,IACR/H,QAAQ,SAAAnC,GACP+D,EAAK2jB,gBAAgB1nB,GAAI,MAMjC8D,UAAUX,UAAUukB,gBAAkB,SAAU1nB,EAAIqF,GAChD,GAAIrF,EAAI,CACAA,EAAG2O,UAAU3D,SAASyZ,UAAUI,YAAc7kB,EAAG2O,UAAU3D,SAASyZ,UAAUG,mBAE9E5kB,EAAKA,EAAGmkB,cAEZhkB,IAAMoB,GAAKc,MAAMrC,EACbuB,IAAMR,OAAOoC,UAAUC,eAAeX,KAAKlB,EAAGsmB,OAAQ,UAEtDtmB,EAAGsmB,OAAOjf,OAASvD,EAGnBrF,EAAG2O,UAAUtJ,EAAQ,MAAQ,UAAUof,UAAUM,UAO7DjhB,UAAUX,UAAUwkB,8BAAgC,SAAU/jB,EAASC,EAAU4L,EAASpK,aACtF,IAAKoK,EAAL,CAGK7H,MAAMmM,QAAQtE,KACfA,GAAWA,GAGf,KADA9I,GAAI3G,GAAK4D,EACF5D,GAEH,GADAA,EAAK2D,QAAQ3D,EAAI6D,GACb7D,GAAMA,EAAG8nB,uBACT,IAAKnhB,GAAIuL,GAAI,EAAGA,EAAIzC,EAAQ7O,OAAS,EAAGsR,IAChClS,EAAG8nB,uBAAuBnZ,UAAU3D,SAASyE,EAAQyC,KACrDnO,EAAK2jB,gBAAgB1nB,EAAIqF,IAW7C,gBACIke,cAAKvjB,EAAIoB,GACDmkB,UAAYvlB,EAAGqkB,QAGnBrkB,EAAGqkB,MAAQ,GAAIvgB,WAAU9D,EAAIoB,KAEjC2mB,kBAAS/nB,EAAIoB,IACLmkB,UAAavlB,EAAGqkB,OAGpBrkB,EAAGqkB,MAAMtf,aAAa3D,GAASskB,SAASK,UAAUzV,WAEtD0X,gBAAOhoB,EAAIoB,IACHmkB,UAAavlB,EAAGqkB,OAGpBrkB,EAAGqkB,MAAMtf,aAAa3D,GAAS2kB,UAAUzV,WAE7C2X,0BAAiBjoB,EAAIoB,IACbmkB,UAAavlB,EAAGqkB,OAGpBrkB,EAAGqkB,MAAMtf,aAAa3D,GAAS2kB,UAAUzV,WAE7C4X,gBAAOloB,IACCulB,UAAavlB,EAAGqkB,QAIpBrkB,EAAGqkB,MAAMyB,WAAWoB,UACpBlnB,EAAGqkB,MAAQ,uFsD1lBb8D,WACFC,QAAS,SAAUC,GACf,IAAIA,EAAIC,yBAAR,CAIAD,EAAIC,0BAA2B,CAG/B,KAAK,GAAIC,KAAargB,YAClBmgB,EAAIE,UAAUA,EAAWrgB,WAAWqgB,GAIxC,KAAK,GAAIC,KAAaC,YAClBJ,EAAIG,UAAUA,EAAWC,WAAWD,MAK1B,oBAAXnoB,SAA0BA,OAAOgoB,KACxChoB,OAAOgoB,IAAIK,IAAIP"}